ZVSE2
** Author orig.  : Algor
** Update        : Archer30
** Name          : Land Navigation
** Name rus.     : Сухопутная навигация
** Options       : 773

; The script checks the percentage of water tiles on the surface to decide which mode to go with


** Замена Навигации на Логистику и бан водных заклинаний/артефактов, если воды на карте менее 15%
!?FU(OnAfterErmInstructions);           [пост-инструкция]
!!UN:P773/?(landNavi:y);                [проверяем включена ли опция 773]
!!FU&(landNavi)<>(TRUE):E;

; Set up new skill description
!!VR(basicDesc:z):S^%T(es.773.desc1)^;
!!VR(advancedDesc:z):S^%T(es.773.desc2)^;
!!VR(expertDesc:z):S^%T(es.773.desc3)^;

; Add in Navaigation description if enabled
!!UN:P208/?(navigation:y);

!!if&(navigation);
  !!VR(basicDesc):+z175137;
  !!VR(advancedDesc):+z175138;
  !!VR(expertDesc):+z175139;
!!en;

; Change the descriptions
!!SN:H^secskill^/(SKILL_NAVIGATION)/(SKILL_BASIC)/(basicDesc);
!!SN:H^secskill^/(SKILL_NAVIGATION)/(SKILL_ADVANCED)/(advancedDesc);
!!SN:H^secskill^/(SKILL_NAVIGATION)/(SKILL_EXPERT)/(expertDesc);

!!if&i^es_770_landMode^;
  !!FU(ES_773_SetUpSSAndSpec):P(TRUE);

  ; Ban Navigation Skill for Hero Lvl Up
  !!UN:C(GAME_MANAGER)/(UNC_INT)/?(gameMgr:y);
  !!VR(skillBanPtr:y):S(gameMgr) +(SKILL_NAVIGATION) +321112;
  !!UN:C(skillBanPtr)/(UNC_INT8)/1;
!!el;
  !!FU(ES_773_SetUpSSAndSpec):P(FALSE);
!!en;

!?FU(OnAfterLoadGame)&i^es_770_landMode^;
; Ban Navigation Skill for Hero Lvl Up
!!UN:C(GAME_MANAGER)/(UNC_INT)/?(gameMgr:y);
!!VR(skillBanPtr:y):S(gameMgr) +(SKILL_NAVIGATION) +321112;
!!UN:C(skillBanPtr)/(UNC_INT8)/1;

!?FU(ES_773_SetUpSSAndSpec);
!#VA(isLandMode:x);

!!re i/(HERO_FIRST)/(HERO_LAST_WOG);
  !!HEi:X?(spec:y)/?(spec2:y);

  !!if&(isLandMode);
    ; Remove Navigation and add the level to Logistics
    !!HEi:S(SKILL_NAVIGATION)/?(naviLv:y);
    !!HEi:S(SKILL_LOGISTICS)/?(logLv:y);
    !!VR(newLogLv:y):S(naviLv) +(logLv) F0/3;
    !!HEi:S(SKILL_LOGISTICS)/(newLogLv);
    ; Set up new spec
    !!if&(spec)=0/(spec2)=(SKILL_NAVIGATION);
      !!HEi:X(spec)/(SKILL_LOGISTICS);
      !!SN:H^spec^/i/2/^%T(es.773.logSpec)^;
    !!en;
  !!el;
    ; Set up new spec description
    !!SN&(spec)=0/(spec2)=(SKILL_NAVIGATION):H^spec^/i/2/^%T(es.773.spec)^;
  !!en;
!!en;

!?FU(ES_OnIterateAllMapObjects)&i^es_770_landMode^;
!#VA(x:x) (y:x) (z:x);
!#VA(objType:x);
!#VA(objSubtype:x);
!#VA(isYellowSquare:x);                 [boolean]
!#VA(isPassable:x);                     [boolean]

; check: is entry to the object
!!FU&(isYellowSquare)<>(TRUE):E;
; check objects
!!FU&(objType)<>(OBJ_WITCH_HUT)/(objType)<>(OBJ_UNIVERSITY)/(objType)<>(OBJ_SCHOLAR):E;

; Manipulate objects according to types
!!if&(objType)=(OBJ_WITCH_HUT);
  !!WH(x)/(y)/(z):S?(ss:y);
  !!WH(x)/(y)/(z)&(ss)=(SKILL_NAVIGATION):S(SKILL_LOGISTICS);
!!el&(objType)=(OBJ_UNIVERSITY);
  !!UR(x)/(y)/(z):S?(ss1:y)/?(ss2:y)/?(ss3:y)/?(ss4:y);

  ; Replace navigation to different secondary skills according to existing ones
  !!if|(ss1)=(SKILL_NAVIGATION)/(ss2)=(SKILL_NAVIGATION)/(ss3)=(SKILL_NAVIGATION)/(ss4)=(SKILL_NAVIGATION);
    !!if&(ss1)<>(SKILL_LOGISTICS)/(ss2)<>(SKILL_LOGISTICS)/(ss3)<>(SKILL_LOGISTICS)/(ss4)<>(SKILL_LOGISTICS);
      !!VR(newSs:y):S(SKILL_LOGISTICS);
    !!el&(ss1)<>(SKILL_PATHFINDING)/(ss2)<>(SKILL_PATHFINDING)/(ss3)<>(SKILL_PATHFINDING)/(ss4)<>(SKILL_PATHFINDING);
      !!VR(newSs):S(SKILL_PATHFINDING);
    !!el&(ss1)<>(SKILL_SCOUTING)/(ss2)<>(SKILL_SCOUTING)/(ss3)<>(SKILL_SCOUTING)/(ss4)<>(SKILL_SCOUTING);
      !!VR(newSs):S(SKILL_SCOUTING);
    !!el&(ss1)<>(SKILL_LEARNING)/(ss2)<>(SKILL_LEARNING)/(ss3)<>(SKILL_LEARNING)/(ss4)<>(SKILL_LEARNING);
      !!VR(newSs):S(SKILL_LEARNING);
    !!en;

    !!UR(x)/(y)/(z)&(ss1)=(SKILL_NAVIGATION):S(newSs)/d/d/d;
    !!UR(x)/(y)/(z)&(ss2)=(SKILL_NAVIGATION):Sd/(newSs)/d/d;
    !!UR(x)/(y)/(z)&(ss3)=(SKILL_NAVIGATION):Sd/d/(newSs)/d;
    !!UR(x)/(y)/(z)&(ss4)=(SKILL_NAVIGATION):Sd/d/d/(newSs);
  !!en;
!!el&(objType)=(OBJ_SCHOLAR);
  !!SC(x)/(y)/(z):T?(type:y) S?(ss:y);
  !!SC(x)/(y)/(z)&(type)=1/(ss)=(SKILL_NAVIGATION):S(SKILL_LOGISTICS); [Type 1 for secondary skills]
!!en;

!?OB(OBJ_BOAT);               [Посадка в лодку]
!!UN:P773/?y1;                [проверяем включена ли опция 773 в y1]
!!FU&y1=0:E;                  [Выход, если опция не включена]

!!HE(CURRENT_HERO):W?y1;      [y1 - ОД героя]
!!IF:W(CURRENT_HERO);         [выбор текущего героя]
!!VRw101:Sy1;                 [y1 - ОД героя при посадке(высадке) в лодку]

!$OB(OBJ_BOAT);               [Посадка в лодку - пост-триггрер]
!!UN:P773/?y1;                [проверяем включена ли опция 773 в y1]
!!FU&y1=0:E;                  [Выход, если опция не включена]

!!HE(CURRENT_HERO):S5/?y1 X?y2/?y3/d/d/d/d/d; [y1 - Уровень навигации героя (0..3), y2=0 и y3=5 для специалиста по Навигации]
!!VRy1&y2=0/y3=5:+1;          [y1 - Уровень навигации героя с учетом специализации (0..4)
!!VRy2:S6 -y1 *100;           [y2 - стоимость посадки(высадки) на лодку в ОД (Базовая стоимость 600 ОД и минус 100 ОД за каждый уровень Навигации/Специализацию Навигации)]
!!HE(CURRENT_HERO):A2/123/d/y3; [y3=1, если на герое Шляпа Морского Капитана]
!!VRy2&y3=1:S0;               [обнуляем стоимость посадки(высадки) если на герое Шляпа Морского Капитана]
!!IF:W(CURRENT_HERO);         [выбор текущего героя]
!!VRw101:-y2;                 [w101 - расчетные ОД героя после посадки]
!!HE(CURRENT_HERO)&w101>0:Ww101; [возвращаем герою неиспользованные ОД. Если ОД не хватило, в w101 остается "долг ОД" для списания с следующем дне]

!?OB(OBJ_ANCHOR_POINT);       [Высадка из лодки]
!!UN:P773/?y1;                [проверяем включена ли опция 773 в y1]
!!FU&y1=0:E;                  [Выход, если опция не включена]

!!HE(CURRENT_HERO):W?y1;      [y1 - ОД героя]
!!IF:W(CURRENT_HERO);         [выбор текущего героя]
!!VRw101:Sy1;                 [y1 - ОД героя при посадке(высадке) в лодку]

!$OB(OBJ_ANCHOR_POINT);       [Высадка из лодки - пост-триггрер]
!!UN:P773/?y1;                [проверяем включена ли опция 773 в y1]
!!FU&y1=0:E;                  [Выход, если опция не включена]

!!HE(CURRENT_HERO):S5/?y1 X?y2/?y3/d/d/d/d/d; [y1 - Уровень навигации героя (0..3), y2=0 и y3=5 для специалиста по Навигации]
!!VRy1&y2=0/y3=5:+1;          [y1 - Уровень навигации героя с учетом специализации (0..4)
!!VRy2:S6 -y1 *100;           [y2 - стоимость посадки(высадки) на лодку в ОД (Базовая стоимость 600 ОД и минус 100 ОД за каждый уровень Навигации/Специализацию Навигации)]
!!HE(CURRENT_HERO):A2/123/d/y3; [y3=1, если на герое Шляпа Морского Капитана]
!!VRy2&y3=1:S0;               [обнуляем стоимость посадки(высадки) если на герое Шляпа Морского Капитана]
!!IF:W(CURRENT_HERO);         [выбор текущего героя]
!!VRw101:-y2;                 [w101 - расчетные ОД героя после посадки]
!!HE(CURRENT_HERO)&w101>0:Ww101; [возвращаем герою неиспользованные ОД. Если ОД не хватило, в w101 остается "долг ОД" для списания с следующем дне]

!?FU(OnEveryDay)&i^timerDay^>1; [каждый день для всех игроков начиная со 2го дня списываем долги по посадке на лодку]
!!UN:P773/?y1;                [проверяем включена ли опция 773 в y1]
!!FU&y1=0:E;                  [Выход, если опция не включена]

!!OW:H-1/1/0;                 [v1 - количество героев текущего игрока]
!!DO(ES_773_ManageBoardingMovement)/1/v1/1&v1>0:P; [для каждого героя текущего игрока списываем долги по посадке на лодку]

!?FU(ES_773_ManageBoardingMovement);    [списываем долги по посадке на лодку]
!!OW:H-1/2/x16;               [v2-номер героя текущего игрока]
!!IF:Wv2;                     [выбор v2-го героя]
!!VRw101&w101>0:S0;           [обнуляем w101, если долга нет]
!!FU&w101>-1:E;               [выход, если долга нет]

!!HEv2:W?y1;                  [y1 - ОД героя]
!!VRy2:Sy1 +w101;             [  y2 - ОД героя ]
!!VRy2&y2<0:S0;               [ после списания ]
!!HEv2:Wy2;                   [устанавливаем ОД героя]
!!VRw101:+y1;                 [списываем долг (w101)]
!!VRw101&w101>-1:S0;          [обнуляем w101, если долга нет]

!?FU(OnEveryDay)&i^timerDay^>1; [каждый день для всех игроков начиная со 2го пересчитываем бонус Навигации (замена на стандартные для Логистики 10/20/30%)]
!!UN:P773/?y1;                [проверяем включена ли опция 773 в y1]
!!FU&y1=0:E;                  [Выход, если опция не включена]

!!OW:H-1/1/0;                 [v1 - количество героев текущего игрока]
!!DO(ES_773_RecalcNaviBonus)/1/v1/1&v1>0:P; [для каждого героя текущего игрока пересчитываем бонус Навигации]

!?FU(ES_773_RecalcNaviBonus);           [пересчитываем бонус Навигации]
!!OW:H-1/2/x16;               [v2-номер героя текущего игрока]
!!HEv2:P?y1/?y2/?y3;          [y1-y3 - координаты героя]
!!TRy1/y2/y3:T?y4/d/d/d/d/d/d/d; [y4=8, если герой на воде (в лодке)]
!!FU&y4<>8:E;                 [выход, если герой не на воде]

!!HEv2:S5/?y1 X?y2/?y3/d/d/d/d/d Ed/?y4; [y1 - Уровень навигации героя (0..3), y2=0 и y3=5 для специалиста по Навигации, y4 - уровень героя]
!!FU&y1=0:E;                  [выход, если навигации у героя нет]

!!VRy5:Sy1 *600;              [y5 - пересчет от уровня Навигации]
!!VRy6&y2=0/y3=5:Sy1 *30 *y4; [y6 - пересчет от специализации Навигации]
!!VRy5&y2=0/y3=5:+y6;         [y5 - общий пересчет от уровня Навигации и специализации]
!!HEv2:W?y6;                  [y6 - текущие ОД героя]
!!VRy6:-y5;                   [y6 - пересчитанные ОД героя]
!!HEv2:Wy6;                   [обновляем ОД героя]

** end
