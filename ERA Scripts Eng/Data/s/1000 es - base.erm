ZVSE2
; Author:   Archer30 & igrik
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework


************************
**** Manage options ****
************************
// Temporally disable Extention Heroes if Tyrant is enabled, would be re-enabled again when Tyrant is set up
!?FU(ES_770_DisableExtentionHeroes);
!!UN:P100/?i^ES_100_enabled^;
!!UN:P770/?(wogOption:y);
!!UN&(wogOption):P100/0;

!#FU(ES_770_DisableExtentionHeroes):P;

// Determine the mode of Landing Navigation by checking the percentage of water on the surface
!?FU(ES_770_Intialization);
!!UN:P773/?(landNavi:y);                [проверяем включена ли опция 773]
!!FU&(landNavi)<>(TRUE):E;

; Loop through all the tiles on the surface to get the percentage of water
!!VR(waterTiles:y):S0;
!!UN:X?(width:y)/?(level:y);

!!re (x:y)/0/(width)/1/-1;
  !!re (y:y)/0/(width)/1/-1;
    !!TR(x)/(y)/0:T?(terrain:y);
    !!VR(waterTiles)&(terrain)=8:+1;    [8 = water]
  !!en;
!!en;

!!VR(totalTiles:y):S(width) *(width);
!!VR(waterPercent:y):S(waterTiles) *100 :(totalTiles);

!!if&(waterPercent)<15;
  ; Set the global variable for land mode
  !!UN:P773/2;
  !!VRi^es_770_landMode^:S(TRUE);

  ; Ban water artifacts and spells
  !!UN:A(ART_NECKLACE_OF_OCEAN_GUIDANCE)/1 A(ART_BOOTS_OF_LEVITATION)/1 A(ART_SEA_CAPTAINS_HAT)/1 A(ART_ADMIRALS_HAT)/1; [запрет водных артефактов]
  !!UN:P152/1 P153/1 P221/1;            [включение опций Бана водных заклинаний]
  !!UN:J0/(SPELL_SUMMON_BOAT)/1 J0/(SPELL_SCUTTLE_BOAT)/1 J0/(SPELL_WATER_WALK)/1; [Бан водных заклинаний в Гильдиях Магов и Пирамидах]
!!en;

!#FU(ES_770_Intialization):P;

// The following changes are critical to teh initialization of secondary skill text
// Disable Resistance II if Enhanced Resistance is enabled
!?FU(ES_777_DisableResistanceII);
!!UN:P777/?(enhRes:y);                  [проверяем включена ли опция 777]

!!if&(enhRes);
  !!UN:P210/(FALSE);                    [если включена, отключаем опцию Сопротивление II]
  !!VRv7195:S(FALSE);                   [...]
!!en;

!#FU(ES_777_DisableResistanceII):P;

// Disable Sorcery II if Critical Sorcery is re-enabled
!?FU(ES_789_DisableSorceryII);
!!UN:P789/?(critSorcery:y);                [проверяем включена ли опция 789]

!!if&(critSorcery);
  !!UN:P213/0;                          [если включена, отключаем опцию Волшебство II]
  !!VRv7198:S0;                         [...]
!!en;

!#FU(ES_789_DisableSorceryII):P;

**********************
**** Set Up hooks ****
**********************

!?FU(OnStartOrLoad);
!!SN:L^erm_hooker.era^/?(ermHooker:y);
!!FU&(ermHooker)=0:E;

!!SN:A(ermHooker)/^SetHook^/?(address:y);
!!FU(ES_CreateERMHook):P(address:y);

!?FU(ES_CreateERMHook);
!#VA(address:x);

!!SN:E(address)/1/4462998/(ES_HOOK_AfterAttackMainFunc); [Trigger after melee attack, before retaliation]
!!SN:E(address)/1/4455129/(ES_HOOK_AfterAttackMainFunc); [Trigger after shooting]

!?FU(ES_HOOK_AfterAttackMainFunc);     [by igrik]
!!SN:X?(hook:y);
!!UN:C(hook)/0/4/?(stackStrucktDefender:y);   
!!UN:C(hook)/4/4/?(stackStrucktAttacker:y);  
!!BG:A?(typeAttack:y);
!!VR(stackAttackerID:y):S(NO_MON); 
!!VR(stackDefenderID:y):S(NO_MON); 

!!if&(stackStrucktAttacker)<>(FALSE); 
  !!UN:C(stackStrucktAttacker)/244/4/?(attakerSide:y); 
  !!UN:C(stackStrucktAttacker)/248/4/?(attakerStackIdInSide:y);
  !!VR(stackAttackerID):S(attakerSide) *(BATTLE_STACKS_PER_SIDE) +(attakerStackIdInSide); 
!!en;

!!if&(stackStrucktDefender)<>(FALSE);
  !!UN:C(stackStrucktDefender)/244/4/?(defenderSide:y);
  !!UN:C(stackStrucktDefender)/248/4/?(defenderStackIdInSide:y);
  !!VR(stackDefenderID):S(defenderSide) *(BATTLE_STACKS_PER_SIDE) +(defenderStackIdInSide);
!!en;

!!FU(ES_OnAfterMelee)&(typeAttack)=(BATTLE_ACTION_WALK_AND_ATTACK):P(stackAttackerID)/(stackDefenderID);
!!FU(ES_OnAfterShoot)&(typeAttack)=(BATTLE_ACTION_SHOOT):P(stackAttackerID)/(stackDefenderID);

************************************************************
**** Function for getting artifacts of different levels ****
************************************************************
; A better way than UN:J6 as it includes new artifacts supported by Emerald
; Warning: This must be executed sooner than Set up object repalcements
; Create artifact arrays of all the levels
!?FU(OnAfterErmInstructions);
!!FU(GetMaxArtifactId):P?(lastArt:y);

!!re (index:y)/1/4;
  !!VR(artLevel:y):S1 Sd<<(index);
  ; Create the array
  !!FU(NewIntArray):P?i^es_artifactArray_%(artLevel)^/(M_TEMP);

  !!FU(ES_FillInArtArrays):P(lastArt)/(artLevel);
!!en;

; Fiil in the array upon loading
!?FU(OnAfterLoadGame);
!!FU(GetMaxArtifactId):P?(lastArt:y);

!!re (index:y)/1/4;
  !!VR(artLevel:y):S1 Sd<<(index);
  ; Remove all the elements from the array
  !!SN:Mi^es_artifactArray_%(artLevel)^/0;

  !!FU(ES_FillInArtArrays):P(lastArt)/(artLevel);
!!en;

!?FU(ES_FillInArtArrays);
!#VA(lastArt:x) (artLevel:x);

!!re i/(ART_CENTAUR_AXE)/(lastArt);

  !!if&i<>(ART_HIGHLIGHTED_SLOT)/i<>(ART_ARTIFACT_LOCK);
    !!UN:Ai/?(isDisabled:y) Ai/3/?(level:y) Ai/4/?(combiId:y);

    !!IF&i>170:M^%i %(isDisabled) %(level) %(combiId)^;
    !!if&(isDisabled)<>(TRUE)/(combiId)=(NO_ART)/(level)=(artLevel);
      !!FU(Array_Push):Pi^es_artifactArray_%(artLevel)^/i;
    !!en;
  !!en;
!!en;

; The action function for getting a random artifact ID with artifact level
!?FU(ES_GetRandomArtifactId);
!#VA(artLevel:x);                       [level of the artifact]
!#VA(artifact:x);                       [returned artifact ID]

!!SN:Mi^es_artifactArray_%(artLevel)^/?(size:y);
!!VR(size):-1;
!!VR(index:y):R0/0/(size);
!!SN:Mi^es_artifactArray_%(artLevel)^/(index)/?(artifact);

************************************
**** Set up object repalcements ****
************************************
; Warning: This must be executed later than Function for getting artifacts of different levels
!?FU(OnAfterErmInstructions);
; deleting the sound in the delete object function
; because it causes a crash
!!UN:C4893167/2/?(patch:y);
!!UN:C4893167/2/24555;
; get size of the map
!!UN:X?(mapSize:y)/?(hasUnderground:y);

; pass once through all cells of the map
!!re l/0/(hasUnderground);    coord z
  !!re k/0/(mapSize)/1/-1;    coord y
    !!re i/0/(mapSize)/1/-1;  coord x
      !!OBi/k/l:T?(objType:y) U?(objSubtype:y);
      !!TRi/k/l:E?(isYellowSquare:y) P?(isPassable:y); 
      !!VR(isYellowSquare):X1;  reverse param isYellowSquare
      !!FU(ES_OnIterateAllMapObjects):Pi/k/l/(objType)/(objSubtype)/(isYellowSquare)/(isPassable);
    !!en;
  !!en;
!!en;
; restoring the source code of the sound
; in the delete objects function
!!UN:C4893167/2/(patch);

*******************
**** Functions ****
*******************

// Get strings from text resources
!?FU(ES_GetStringByFilename);
!#VA(txtFilename:x);                    [filename of the text]
!#VA(lineIndex:x);                      [number of line of the string, starts from 0]
!#VA(string:x);                         [returned string]

; Standarize the filename
!!FU(StrToLower):Pz(txtFilename)/?(text:z);
; Remove filename extension (if applicable)
!!SN:K(text)/?(size:y);
!!VR(index:y):S(size) -4;
!!SN:K(text)/(index)/?(character:z);
!!FU(Substr)&(character)=^.^:P(text)/0/-4/?(text);

!!if&(text)=^artevent^;
  !!VR(address:y):S6909120;             [artifact events]
!!el&(text)=^minename^;
  !!VR(address):S6968376;               [mine names]
!!el&(text)=^plcolors^;
  !!VR(address):S6976900;               [player colour]
!!el&(text)=^priskill^;
  !!VR(address):S6974556;               [primary skills]
!!el&(text)=^restypes^;
  !!VR(address):S6968208;               [resources]
!!el;
  !!VR(string):Z^Wrong txt filename!^;
  !!FU:E;
!!en;

; @Master Of Puppets
!!UN:C(address)/(UNC_INT)/?(value:y);            
!!VR(address2:y):S(value) +32;
!!UN:C(address2)/(UNC_INT)/?(value3:y);
!!VR(address3:y):S(lineIndex) *4 +(value3);
!!UN:C(address3)/(UNC_INT)/?(value4:y);
!!SN:X?(value5:y) X(value4) X?z1 X(value5);
!!VR(string):Z^%z1^;
