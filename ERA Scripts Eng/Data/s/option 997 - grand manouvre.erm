ZVSE2
** Author orig.  : Berserker
** Update        : Archer30
** Name          : Grand manouvre
** Name rus.     : Великий Манёвр
** Changes rus.  : [Algor] вынос опции в отдельный файл для мода ERA
**                 [Algor] вынос текстов в ert-файл
** Options       : 997


// Initialization
!?FU(OnBeforeBattleUniversal);
; Initialise variable - This must to be execute regardless of the option
!!VRi^es_997_elfPos^:S-1;

// Store the Elf's position if he has attack twice and shooting
!?FU(OnBeforeBattleAction)&i^battle_isVisible^/i^es_997_elfPos^=-1;
!!UN:P997/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

!!BMi^battle_acting_stack^:T?(type:y);

!!if&(type)=(MON_GRAND_ELF);
  !!BMi^battle_acting_stack^:F?(monflags:y);
  !!VR(canShoot:y):S(monflags) &(MON_FLAG_SHOOTER);
  !!VR(attackTwice:y):S(monflags) &(MON_FLAG_ATTACKS_TWICE);

  !!BMi^battle_acting_stack^&(canShoot)/(attackTwice):P?i^es_997_elfPos^;
!!en;

// Remove the attack twice flag from the Elf if he just walk by one hex
!?FU(OnBattleActionEnd)&i^es_997_elfPos^>-1;
!!BG:A?(action:y);

!!if&(action)=(BATTLE_ACTION_WALK);
  !!BMi^battle_acting_stack^:P?(newPos:y);
  !!FU(ES_997_CalcDistanceBetweenHexes):Pi^es_997_elfPos^/(newPos)/?(distance:y);

  ; Remove the possible morale flag to ensure the next attack has a chance to get morale
  !!if&(distance)=1;
    !!BMi^battle_acting_stack^:Fd~(MON_FLAG_ATTACKS_TWICE);
    !!BMi^battle_acting_stack^:Fd~(MON_FLAG_MORALE);
  ; Set position to -1 if the elf walk for more than 1 hex or did other action than walking
  !!el;
    !!VRi^es_997_elfPos^:S-1;
  !!en;
!!el;
  !!VRi^es_997_elfPos^:S-1;
!!en;

// Restore to the Elf's turn if he just walked by one hex
!?FU(OnBeforeBattleStackTurn)&i^es_997_elfPos^>-1;
!#VA(stack:x);

!!VR(stack):Si^battle_acting_stack^;
; Set position to -2 in order to restore attack twice flag
!!VRi^es_997_elfPos^:S-2;

// Give back attack twice to the Elf
!?FU(OnBattleActionEnd)&i^es_997_elfPos^=-2;
!!BMi^battle_acting_stack^:Fd|(MON_FLAG_ATTACKS_TWICE);
!!VRi^es_997_elfPos^:S-1;

// Funciton for calculating distance between two hexes
!?FU(ES_997_CalcDistanceBetweenHexes);
!#VA(hex1:x) (hex2:x) (distance:x);

!!VR(x1:y):S(hex1)%17;
!!VR(y1:y):S(hex1):17;
!!VR(x2:y):S(hex2)%17;
!!VR(y2:y):S(hex2):17;
!!VR(distanceY:y):S(y1)-(y2);
!!VR(distanceY)&(distanceY)<0:*-1;
!!VR(x1):*2;
!!VR(y1):&1;
!!VR(x2):*2;
!!VR(y2):&1;
!!VR(distanceX:y):S(x1)-(y1)-(x2)+(y2);
!!VR(distanceX)&(distanceX)<0:*-1;
!!VR(distanceX):-(distanceY);
!!VR(distance):S(distanceX);
!!VR(distance)&(distance)<0:S0;
!!VR(distanceY):*2;
!!VR(distance):+(distanceY):2;

** end
