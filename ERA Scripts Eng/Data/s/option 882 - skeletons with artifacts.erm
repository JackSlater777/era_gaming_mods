ZVSE2
** Author        : Algor (idea: DracoLich)
** Update        : Archer30
** Name          : Skeletons with artifacts
** Name rus.     : Скелеты с артефактами
** Options       : 882


!?FU(OnAfterErmInstructions);           // перед показом карты
!!UN:P882/?y1; !!FU&y1=0:E;             // выход, если опция не включена
!!UN:U22/-1/?y1;                        // y1 - количество трупов
!!VRv1:S-1;                             // инициализация v1 для быстрого поиска
!!DO(ES_opt882_SetArts)/1/y1/1:P;       // для каждого трупа устанавливаем артефакт

!?FU(OnAfterLoadGame);                  // при загрузке игры
!!UN:P882/?y1; !!SN&y1<>0:W^opt882.c^/0;// сброс битвы со скелетом для случая загрузки из боя

!?FU(ES_opt882_SetArts);                // раздаем трупам артефакты
!!UN:U22/-1/-1/1;                       // получаем координаты трупа в v1-v3
!!VRy1:S0 R99;                          // y1 - случайное число (0.99)
!!VRy2&y1<50:S(ART_LEVEL_TREASURE);     // В 50% случаев treasure-артефакт
!!VRy2&y1>=50:S(ART_LEVEL_MINOR);       // В 35% случаев minor-артефакт
!!VRy2&y1>=85:S(ART_LEVEL_MAJOR);       // В 15% случаев major-артефакт
!!UN:J6/y2/?y1;                         // y1 - случайный артефакт нужного класса
!!SK1:S1 Ay1;                           // даем трупу артефакт

!?OB(OBJ_CORPSE);                       // посещение трупа
!!UN:P882/?y1; !!FU&y1=0:E;             // выход, если опция не включена

!!OB998:S;                              // запрещаем посещение скелета
!!SK998:A?y1;                           // y1 - артефакт у трупа

!!if|-1000/y1>999;
  !!OB998:R;
  !!FU:E;                               // при посещении ИИ или если артефакта уже нет разрешаем использование объекта и выходим]
!!en;

!!UN:Ay1/3/?y2; !!VRy2::4 +1;           // y2 класс артефакта (1/2/3)
!!SN:T^opt882.m%Y2^/?z2;                // z2 - текст вопроса о сражении
!!IF:Q1/(PIC_TYPE_MONSTER)/(MON_SKELETON_WARRIOR)/(PIC_TYPE_ART)/y1/(MSG_TYPE_QUESTION)^%Z2^;           // выводим запрос на битву
!!FU&-1:E;                              // выход, если герой отказался от битвы

!!HE(CURRENT_HERO):N?y4;                // y4 - номер героя-посетителя
!!SN:W^opt882.h^/y4 W^opt882.c^/y2;     // сохраняем номер героя-посетителя и классартефакта
!!HE(CURRENT_HERO):Tv998/v999/v1000/(MON_SKELETON_WARRIOR)/1;           // инициируем битву с 1 скелетом-воином
!!SN:W^opt882.h^/?y2 W^opt882.c^/0;     // y2 - номер героя-посетителя, сброс параметров артефакта
!!HEy2:O?y1;                            // выход, если герой проиграл
!!OB998&y1>(NO_PLAYER):R;               // разрешаем стандартное использование объекта

!?FU(OnBeforeBattleUniversal);          // перед битвой
!!SN:W^opt882.c^/?y2; !!BA&y2>0:Q0;     // отключениe быстрой битвы, если это битва со скелетом

!?FU(OnSetupBattlefield);               // при настройке поля боя
!!SN:W^opt882.c^/?y2; !!FU&y2<1:E;      // y2 - класс артефакта (1/2/3), выход, если бой не со скелетом
!!UN:J2/?y4; !!VRy4:+y2;                // y4 - выбранный человеком уровень сложности
!!VRy5:Sc *y4 +100;                     // y5 - коэффициент усиления зависящий от уровня сложности и дня посещения
!!VRy10:C10/10/4/300/50/100/3/3;        // y10..y17 - базовые параметры скелета (attk def speed health dmgmin dmgmax casts retail)

!!re i/10/17;                           // y10..y17 - параметры скелета, усиленные в соответствии с классом артефакта, днем и уровнем сложности
  !!VRyi:*y5 :100;                      // ...
!!en;                                   // ...

!!BM21:F?y3;                            // y3 - флаги скелета
!!VRy3&y2>=1:|(MON_FLAG_NO_RETALIATION);     // безответный удар для treasure-артефактов
!!VRy3&y2>=2:|(MON_FLAG_ATTACKS_TWICE);      // + двойной удар для minor-артефактов
!!VRy3&y2>=3:|(MON_FLAG_ATTACKS_ALL_AROUND); // + круговая атака для major-артефактов
!!BM21:Ay10 Dy11 Sy12 Hy13 U1/y14 U2/y15 Ey16 Ry17 Fy3; // выставляем способности скелету-охраннику

!?FU(OnBeforeBattleAction);
!!SN:W^opt882.c^/?y2; !!FU&y2<1:E;      // выход, если бой не со скелетом
!!BG:N?y1; !!FU&y1<>21:E;               // выход, если не ход скелета
!!BM21:E?y2 P?y3; !!FU&y2<1:E;          // выход, если скелет исчерпал заклинания
!!VRy2:-1; !!VRy2&y2>4:S4; !!BM21:Ey2;  // снижаем кол-во кастов охранника (максимум 10 кастов)
!!VRz1:S^CLONE^; !!SN:P1;               // вывод звука Клона
!!SN:T^opt882.b1^/?z2; !!MM:Sz2;        // вывод сообщения о призыве в лог битвы
!!BM21:C65/y3/10/3/0 H?y7 L?y4 F?y5;    // скелет кастует на себя заклинание Клон
!!VRy7:-y4 :5;                          // y7 - численность призываемых скелетов = 20% от здоровья скелета-охранника

!!re i/21/40;                           // перебор отрядов защищающейся стороны
  !!BMi:F?y6; !!VRy6:&8388608;          // y6 - признак Клона

  !!if&y6>0;                            // если найден клон
    !!BM21:U5/-1; !!BMi:P?y8;           // отвязываем клон от скелета-охранника
    !!FU(ES_opt882_RemoveStack):Pi;     // убираем отряд с поля
    !!BU:S(MON_SKELETON)/y7/y8/1/-1/1 Ey8/?y9;      // и призываем на его место отряд скелетов, y9 - номер отряда
    !!SN:P^ANIMDEAD^;                   // вывод звука Поднятия нежити
    !!BMy9:Fy5 V74;                     // копируем отряду флаги охранника и анимируем Поднятие нежити
    !!BU:R;                             // обновляем поле боя
  !!en;
!!en;

!?FU(ES_opt882_RemoveStack);            // удаление отряда x1 с поля
!!UN:C6919200/4/?y1;                    // Менеджер битвы
!!VRy2:Sx1 *1352 +21708 +y1;            // структура стека
!!VRy3:Sy2 +234; !!UN:Cy3/1/1;          // указываем, что стек умер
!!BMx1:F?y4;                            // получаем флаги стека
!!VRy4:|268435456;                      // ставим флаг "принесён в жертву"
!!BMx1:N0 Fy4;                          // кол-во: 0, и устанавливаем флаги стеку
!!SN:E4621680/2/y1/51/1;                // функция "убрать тело", если мертв
!!SN:E4797616/2/y1/0/1;                 // обновить сетку поля боя

** end
