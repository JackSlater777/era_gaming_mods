ZVSE2
** Author orig.  : Algor
** Rewritten by  : Archer30
** Name          : Dragon towns
** Name rus.     : Драконьи города
** Options       : 757

** Разграбленную Утопию Драконов можно перестроить в город имеющий форт и ГМ 3-го уровня за 20 дерева и 20 руды.
** Тип нового города определяется расой героя-строителя. ИИ при наличии ресурсов всегда перестраивает разграбленную Утопию.


!$OB(OBJ_DRAGON_UTOPIA);
!!UN:P757/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

; Exit the function if there are more 48 or more towns on the map
!!UN:U(OBJ_TOWN)/(ANY_OBJ)/?(townNum:y);
!!FU&(townNum)>=48:E;

; Exit if the Utopia has not been cleared
!!CB998:T?(isCleared:y);
!!FU&(isCleared)<>(TRUE):E;

; Check the tile at the right bottom of the new town
; Exit if the result =-1 (the tile is interactive or is part of an interactive object)
!!VR(townX:y):Sv998 +1;
!!FU(ES_757_CheckTileEligibility):P(townX)/v999/v1000/?(result1:y);
!!FU&(result1)=-1:E;

!!VR(objY:y):Sv999 -1;
!!FU(ES_757_CheckTileEligibility):P(townX)/(objY)/v1000/?(result2:y);
!!FU&(result2)=-1:E;

; Also check the left bottom
!!VR(objX:y):Sv998 -3;
!!FU(ES_757_CheckTileEligibility):P(objX)/v999/v1000/?(result3:y);
!!FU&(result3)=-1:E;

; Check the entrance of the new town (y-coordinate +1) to ensure the path is clear
!!VR(heroX:y):S-1;
!!VR(heroResult:y):S0;
!!VR(entranceX:y):Sv998 -1;
!!VR(entranceY:y):Sv999 +1;
!!FU(ES_757_CheckTileEligibility):P(entranceX)/(entranceY)/v1000/?(entranceResultMid:y);

; Check for one tile to the right of the entrance, set heroX to the target's x coordinate if found
!!if&(entranceResultMid)<=0;
  !!FU(ES_757_CheckTileEligibility):Pv998/(entranceY)/v1000/?(entranceResultRight:y);

  ; Check for one tile to the left
  !!if&(entranceResultRight)<=0;
    !!VR(entranceLeftX:y):Sv998 -2;
    !!FU(ES_757_CheckTileEligibility):P(entranceLeftX)/(entranceY)/v1000/?(entranceResultLeft:y);

    !!if&(entranceResultLeft)>0;
      !!VR(heroX):S(entranceLeftX);
      !!VR(heroResult):S(entranceResultLeft);
    !!en;
  !!el;
    !!VR(heroX):Sv998;
    !!VR(heroResult):S(entranceResultRight);
  !!en;
!!el;
  !!VR(heroX):S(entranceX);
  !!VR(heroResult):S(entranceResultMid);
!!en;

!!FU&(heroX)=-1:E;

; Check for the owner and type pf the hero to set the details of the new town
!!HE(CURRENT_HERO):O?(owner:y) B2/?(class:y);
!!VR(townType:y):S(class) :2;
; Show up dialogue for building a new town depending on whether having enought resoursces or if is AI
!!OW:R(owner)/(RES_WOOD)/?(wood:y) R(owner)/(RES_ORE)/?(ore:y);

!!IF:V1/1;
!!VR(flag:y):S(TRUE);
!!VR(flag)|(wood)<20/(ore)<20:S(FALSE);

!!if&1000;
  !!if&(flag);
    !!VR(townPicIndex:y):S(townType) +22;
    ; -100020 for showing -20 of the resource below the picture
    !!IF:Q1/(PIC_TYPE_RES_WOOD)/-100020/(townPicIndex)/7/(PIC_TYPE_RES_ORE)/-100020/(MSG_TYPE_QUESTION)/^%T(es.757.dlg1)%T(es.757.dlg2)^;
  !!el;
    !!IF:Q1/(PIC_TYPE_RES_WOOD)/-100020/(PIC_TYPE_RES_ORE)/-100020/(MSG_TYPE_MES)/^%T(es.757.dlg1)^;
  !!en;
!!en;

!!FU|(flag)=(FALSE)/-1:E;

; Reduce resources 
!!OW:R(owner)/(RES_WOOD)/d-20 R(owner)/(RES_ORE)/d-20;
!!UN:R2;

; Teleport the hero to the entrance
!!HE(CURRENT_HERO):P(heroX)/(entranceY)/v1000;

; Remove obstacles if existing
!!FU(ES_757_RemoveObject):Pv998/v999/v1000;
!!FU(ES_757_RemoveObject)&(result1)=2:P(townX)/v999/v1000;
!!FU(ES_757_RemoveObject)&(result2)=2:P(townX)/(objY)/v1000;
!!FU(ES_757_RemoveObject)&(result3)=2:P(objX)/v999/v1000;
!!FU(ES_757_RemoveObject)&(heroResult)=2:P(heroX)/(entranceY)/v1000;

; Wipe out every single tile of the new town just to be safe (or maybe not?)
; Start from the leftmost spot in the middle row
*!VR(extraX:y):Sv998 -3;
*!VR(extraY:y):Sv999 -1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile right
*!VR(extraX):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile down
*!VR(extraY):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; Entrance of the Town
*!VR(extraX):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; Top of the Entrance
*!VR(extraY):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile right
*!VR(extraX):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile Up
*!VR(extraY):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; All the way to the left
*!VR(extraX):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
*!VR(extraX):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;

!!HE(CURRENT_HERO):P(entranceX)/v999/v1000;
!!VR(random:y):R0/1/15;

; Place and set up the new town
!!IP:D(ANY_PLAYER);
!!FU(ES_757_PlaceAndSetUpTheTown):P(townX)/(owner)/(townType)/(random) D(townX)/(owner)/(townType)/(random);

// Check if the targeted tile is available
!?FU(ES_757_CheckTileEligibility);
; Returns value =1, =0, =1 or =2, corresponding to is interactive or is part of an interactive object, on a tile of water or rock, eligible to place or eligible to place after object deletion
!#VA(x:x) (y:x) (z:x) (result:x);

; Initialization - assume the tile is interactive or part of an interactive objcect
!!VR(result):S-1;

; Check if the targeted tile is interactive or passable, or is a water/rock tile
!!TR(x)/(y)/(z):E?(notinteractive:y) P?(isPassable:y) T?(type:y)/d/d/d/d/d/d/d;

; Check further when the tile is not on the water or rock
!!if&(type)<>8/(type)<>9;
  ; Set the result to 1 if not interactive and passable (no object)
  !!if&(notinteractive)/(isPassable);
    !!VR(result):S1;
  ; Check if the object is interractable by trying to find its yellow tile
  !!el&(notinteractive)/(isPassable)<>(TRUE);
    !!VR(newX:y):S(x);
    !!VR(newY:y):S(y);
    !!VR(newZ:y):S(z);
    !!SN:O?(newX)/?(newY)/?(newZ);

    ; Set the result to 2 if the object is not interactive (normal road blocks)
    !!VR(result)&(x)=(newX)/(y)=(newY)/(z)=(newZ):S2;
  !!en;
!!el;
  ; Set the result to 0 if the tile is on the water or rock
  !!VR(result):S0;
!!en;

// Remove objects in the given coordinates
// The function would be executed for 3 times at most if there are multiple obstacles in the targeted location
!?FU(ES_757_RemoveObject);
!#VA(x:x) (y:x) (z:x);

!!OB(x)/(y)/(z):T?(type:y);

!!if&(type)<>(OBJ_STUB);
  !!UN:O(x)/(y)/(z)/0;
  !!OB(x)/(y)/(z):T?(type);

  !!if&(type)<>(OBJ_STUB);
    !!UN:O(x)/(y)/(z);
    !!OB(x)/(y)/(z):T?(type);

    !!if&(type)<>(OBJ_STUB);
      !!UN:O(x)/(y)/(z);
      !!OB(x)/(y)/(z):T?(type);
    !!en;
  !!en;
!!en;

// Place and set up the town for every player in MP
// For some reason, the new town will only visually appear after showing up IF msg (from Achievements for example)
!?FU(ES_757_PlaceAndSetUpTheTown);
!#VA(townX:x) (owner:x) (townType:x) (random:x);

!!TR998:T?(terrain:y)/d/d/d/d/d/d/d;
!!UN:I(townX)/v999/v1000/(OBJ_TOWN)/(townType)/(OBJ_TOWN)/(townType)/(terrain)/0;

!!SN:T^es.757.name%(random)^/?z2;
!!CA(townX)/v999/v1000:O(owner) Nz2 B2/30 B2/31 B6/2 B6/9; [установка владельца, имени, разрушение жилищ и отстройка «амка и √ћ3 уровн€]
!!CA(townX)/v999/v1000:M2/0/-1/0 M2/1/-1/0 M2/2/-1/0 M2/3/-1/0 M2/4/-1/0 M2/5/-1/0 M2/6/-1/0; [нет стражников]
!!CA(townX)/v999/v1000:M1/0/0/0 M1/1/0/0 M1/2/0/0 M1/3/0/0 M1/4/0/0 M1/5/0/0 M1/6/0/0; [нет существ дл€ выкупа]

; Add in compatibility with Enhanced War Machines III
!!UN:P73/?(enhWMIII:y); 
!!PO(townX)/v999/v1000&(enhWMIII):H1 T1;

; Place stump and log on empty tiles
!!VR(stumpX:y):Sv998 -4;
!!VR(stumpY:y):Sv999 -1;
!!FU(ES_757_CheckTileEligibility):P(stumpX)/(stumpY)/v1000/?(result4:y);
!!UN&(result4:y)=1:I(stumpX)/(stumpY)/v1000/(OBJ_STUMP)/0/(OBJ_STUMP)/0/-1/1;

!!VR(logX:y):Sv998 +1;
!!VR(logY:y):Sv999 -2;
!!FU(ES_757_CheckTileEligibility):P(logX)/(logY)/v1000/?(result5:y);
!!UN&(result5)=1:I(logX)/(logY)/v1000/(OBJ_LOG)/0/(OBJ_LOG)/0/-1/1;

; Update the sreen
!!SN:D;

**end
