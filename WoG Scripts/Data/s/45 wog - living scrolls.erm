ZVSE2

** Living Scrolls Script Version 1.7 Created by Timothy Pulver
** Requires WoG version 3.58 or later using ERM version 2.7 or later.
** WoGify Name: script33.erm
** Updated: October 21, 2004

** Rewritten: October 24, 2022

** This script enhances most Scrolls in the game, changing them from
** passive Spell Scrolls to active Living Scrolls that may cast the
** spell themselves each round in combat after the first.

** For each Living Scroll equipped, there is a 20% chance that one
** of the equipped Living Scrolls will cast its spell. Thus, if a hero has
** three Living Scroll equipped, there's a 60% chance each round
** that one of the three will randomly cast its spell. Equipping five
** Living Scrolls virtually guarantees that one will cast its spell
** its spell. However, if a creature is immune to a spell, the spell won't
** be cast upon it.

** In most cases, the scroll will cast the spell at Basic skill level only,
** regardless of the hero's level. However, the hero's Power will be used
** for determining spell effect where applicable. A spell scroll spell
** will not add to the duration of an existing spell, but may cast the
** same spell on a creature before the duration has expired.

** All Spell Scrolls are changed into Living Scrolls EXCEPT for the
** following: Adventure spells, Elemental Summoning spells, Sacrifice,
** Death Ripple, Destroy Undead, Animate Dead, Dispel, Clone, Resurrection,
** and Armageddon.

** Version 1.1 fixes some bugs.
** Version 1.2 removes "Clone" as a Living Scroll spell because it
** seems to be unstable and often crashes.
** Version 1.3 fixes a problem with Magic Plains and the issue of
** area-effect spells wiping out a friendly stack that was temporarily
** changed to a single unit (for message-display purposes). The stack
** size changing is no longer used in this manner.
** Version 1.4 fixes a problem with Anti-Magic garrisons
** Version 1.5 adds right-click info for scrolls in backpacks and
** also in the hero trading screen. It also fixes a problem with Magic Plains.
** Version 1.6 fixes some miscellaneous bugs.
** Version 1.7 removes Armageddon as a Living Scroll.

** Version 2.0 Fully rewritten by daemon_n (really hard, but is done)
------------------------------------------------------------------------

Variables Used: v1-v6, z1-z2
Functions Used: 

------------------------------------------------------------------------

 [Start of Battle Trigger]

!?FU(OnSetupBattlefield)&i^battle_hero_1^=(NO_HERO)/i^battle_owner_1^=(NO_OWNER);
  !!UN:P33/?(isEnabled:y);
  !!if&(isEnabled);
    !!UN:C(COMBAT_MANAGER)/4/?(cmbMgr:y);
    !!SN:E4323856/(CALLCONV_THISCALL)/(cmbMgr)/0/0; [can cast this side]
    !!VRi^WOG_33_cast_chance^:S0;
    !!VRi^WOG_33_enabled^:Sv1;(TRUE);
    !!if&i^WOG_33_enabled^;
      !!FU(NewIntArray):P5/(NO_SPELL)/?i^WOG_33_spells_array_ID^/(M_TEMP);
      !!VR(counter:y):S0;
      !!re i/0/4;(ART_SLOT_MISC_5);
        !!if&i<4;
          !!VR(slotInd:y):Si +(ART_SLOT_MISC_1);
        !!el;
          !!VR(slotInd:y):S(ART_SLOT_MISC_5);
        !!en;

        !!FU(GetArtAtSlot):Pi^battle_hero_0^/(slotInd)/?(art:y)/?(spellID:y);
        !!if&(art)=(ART_SPELL_SCROLL);
          !!FU(WOG_33_CheckSpellIsValid):P(spellID)/?(isValid:y);

          !!if&(isValid);
            !!SN:Mi^WOG_33_spells_array_ID^/(counter)/(spellID);
            !!VR(counter):+1;
          !!en;
        !!en;
      !!en;
      !!if&(counter);
        !!VRi^WOG_33_cast_chance^:S(counter) *20;
        !!SN:Mi^WOG_33_spells_array_ID^/(counter);
      !!el;
        !!FU(WOG_33_ClearCombatVariables):P;
      !!en;
    !!en;
  !!en;

!?FU(OnAfterBattleUniversal);
!!FU(WOG_33_ClearCombatVariables):P;

!?FU(WOG_33_ClearCombatVariables);
!!VRi^WOG_33_enabled^:S0;
!!VRi^WOG_33_cast_chance^:S0;
!!VRi^WOG_33_this_round_cast_chance^:S0;
!!SN:Mi^WOG_33_spells_array_ID^;


!?FU(WOG_33_GetTargetStackId);
!#VA(side:x) (spellID:x) (targetStackId:x);
  !!VR(targetStackId):S(NO_STACK);
  !!VR(start:y):S(side) *21;
  !!VR(end:y):S(start) +20;
  !!FU(NewIntArray):P20/?(targetStacks:y);
  !!VR(counter:y);
  !!re i/(start)/(end);
    !!BMi:N?n;
    !!if&n>0;
      !!FU(WOG_Battle_CanStackReceiveSpell):Pi/(spellID)/(BATTLE_LEFT)/?(result:y);
      !!if&(result);
        !!SN:M(targetStacks)/(counter)/i;
        !!VR(counter):+1;
      !!en;
    !!en;
  !!en;
  !!if&(counter);
    !!VR(counter):-1;
    !!VR(randomInd:y):R0/0/(counter);
    !!SN:M(targetStacks)/(randomInd)/?(targetStackId);
  !!en;

!?FU(WOG_CreateERMHook);
!!SN:Ex1/1/5934747/(WOG_33_OnArtifactCasts);

!?FU(WOG_33_OnArtifactCasts)&i^WOG_33_new_name^;
!!UN:Cx1/(STRUCT_HOOK_CONTEXT_EAX)/4/?(namePtr:y);
!!SN:B(namePtr)/d/s^WOG_33_new_name^;

!?FU(WOG_33_CastTargetSpellAtPos);
!#VA(pos:x) (spellID:x) (schoolLvl:x) (checkStack:x);
  *!BG:A?(oldAction:y) A(BATTLE_ACTION_MONSTER_CAST);
  !!HEi^battle_hero_0^:Z?(hero:y); Fd/d/?(power:y)/d;
  !!UN:C(COMBAT_MANAGER)/4/?(cmbMgr:y) C(cmbMgr)/21460/4/?(power:y)
  C(cmbMgr)/78528/4/?(saveSide:y) C(cmbMgr)/78528/4/(BATTLE_LEFT);

  !!BU:G?(isMagicPlant:y); [Battlefield: y7 (1=Magic Plains)]
  !!BU&(isMagicPlant)=1:G-1; [Battlefield: y7 (1=Magic Plains)]
  !!VRi^WOG_33_new_name^:S(TRUE);
  !!VRs^WOG_33_new_name^:S^%T(wog.33.prefix)^;

  !!SN:E5898560/(CALLCONV_THISCALL)/(cmbMgr)/(spellID)/(pos)/2/-1/(schoolLvl)/(power);


  !!SN:W^WOG_33_new_name^;
  !!BU&(isMagicPlant)=1:G1;
  !!UN:C(cmbMgr)/78528/4/(saveSide);
  *!BG:A(oldAction:y);
  *!FU(moral):P;
  *!IF:L^%v1^;

!?FU(WOG_33_CastSpellAtRandomPos);
!#VA(availablePos:x) (spellID:x) (schoolLvl:x) (success:x);
  !!SN:M(availablePos)/?(size:y);
  !!if&(size);
    !!VR(size):-1;
    !!FU(WOG_GetRandomSeedByCoord):Pi^battle_x^/i^battle_y^/i^battle_z^/?(seed:y);
    !!VR(randValue:y):Si^battle_hero_0^ *3 +i^battle_round^ *12 +i^WOG_33_this_round_cast_chance^ +i^battle_round^+1 *2; Sd*i^battle_current_stack^
    !!VR(seed):+(randValue:y);
    !!FU(WOG_SafeRand):P0/(size)/(seed)/?(randomInd:y);
    !!SN:M(availablePos)/(randomInd)/?(position:y);
    !!FU(WOG_33_CastTargetSpellAtPos):P(position)/(spellID)/(schoolLvl);
    !!VR(success):S(TRUE);
  !!el;
    !!VR(success):S(FALSE);
  !!en;

!?FU(WOG_33_GetSpellTargetSide);
!#VA(spellID:x) (side:x);
  !!VR(side):S(NO_STACK);
  !!SS(spellID):F?f;
  !!VR(damageSpell:y):Sf &512;
  !!VR(massBuff:y):Sf &2048;
  !!VR(defendSpell:y):Sf &16384;

  !!SS(spellID):O?(targetType:y);

  !!if&(damageSpell)|(targetType)=-1;
    !!VR(side):S(BATTLE_RIGHT);

  !!el|(massBuff)/(defendSpell);
    !!VR(side):S(BATTLE_LEFT);
  !!en;



*?FU(OnKeyReleased_Battle)&x1=(KEY_N);
*!re i/(SPELL_FIRST_BATTLE)/(SPELL_TELEPORT);
  *!FU(WOG_33_GetSpellTargetSide):Pi/?(side:y);
  *!FU(WOG_33_CheckSpellIsValid):Pi/?t;
  *!if&t;
    *!FU(NewIntArray):P1/?r;
    *!SN:Mr/0/i;
    *!IF:M^%i^;
    *!FU(WOG_33_CastSpellProcedure):Pr;
  *!en;

*!en;

!?FU(WOG_33_CastSpellProcedure);
!#VA(spellArray:x); (atNum:x) (defNum:x);

  !!SN:M(spellArray)/?(size:y);
  !!VR(max:y):S(size) -1;
  !!FU(WOG_GetRandomSeedByCoord):Pi^battle_x^/i^battle_y^/i^battle_z^/?(seed:y);
  !!VR(randValue:y):Si^battle_current_stack^ *17 +i^battle_hero_0^ *3 +i^battle_round^ *2; Sd*i^battle_current_stack^
  !!VR(seed):+(randValue:y);
  !!FU(WOG_SafeRand):P0/(max)/(seed)/?(spellInd:y);
  *!VR(spellInd:y):Rd/(seed) R0/0/(max) Rd/(oldSeed);
  *!IF:L^%(spellInd)^;
  !!SN:M(spellArray)/(spellInd)/?(spellID:y);

  !!BA:S?(siege:y);

  !!HEi^battle_hero_0^:Z?(hero:y);
  !!SN:E5133040/(CALLCONV_THISCALL)/(hero)/(spellID)/0;
  !!VR(schoolLvl:y):Sv1;

  !!FU(WOG_33_GetSpellTargetSide):P(spellID)/?(side:y);
  !!SN:H^spell^/(spellID)/0/?z-1;
  !!VR(success:y):S(FALSE);

  !!if&(side)<>(NO_STACK);
  *!IF:L^%z-1 %(side)^;  
    !!FU(WOG_33_GetTargetStackId):P(side)/(spellID)/?(targetStackId:y);
    !!if&(targetStackId)<>(NO_STACK);
      *!IF:M^%z-1^;
      !!BM(targetStackId):P?(position:y);
      !!FU(WOG_33_CastTargetSpellAtPos):P(position)/(spellID)/(schoolLvl)/1;
      !!VR(success):S(TRUE);
    !!en;
  !!el&(spellID)=(SPELL_DISPEL);

    !!if&(schoolLvl)>1;
      !!VR(randSide:y):R0/(BATTLE_LEFT)/(BATTLE_RIGHT);
      !!FU(WOG_33_GetTargetStackId):P(randSide)/(spellID)/?(targetStackId:y);
      !!if&(targetStackId)=(NO_STACK);
        !!VR(randSide):X1;
        !!FU(WOG_33_GetTargetStackId):P(randSide)/(spellID)/?(targetStackId:y);
      !!en;
    !!el;
      !!FU(WOG_33_GetTargetStackId):P(BATTLE_LEFT)/(spellID)/?(targetStackId:y);
    !!en;

    !!if&(targetStackId)<>(NO_STACK);
      !!BM(targetStackId):P?(position:y);
      !!FU(WOG_33_CastTargetSpellAtPos):P(position)/(spellID)/(schoolLvl)/1;
      !!VR(success):S(TRUE);    
    !!en;
  !!el&(spellID)=(SPELL_TELEPORT); // any hex
    !!FU(WOG_33_GetTargetStackId):P0/(spellID)/?(targetStackId:y);
    !!if&(targetStackId)<>(NO_STACK);
      !!FU(NewIntArray):P?(availablePos:y);
      !!UN:C(COMBAT_MANAGER)/4/?(cmbMgr:y);
      !!BM(targetStackId):Z?(mon:y);
      !!FU(WOG_33_GetAvailableToSpellHexArray):P(availablePos)/(WOG_33_CheckHexIsAvailableForTeleport)/(cmbMgr:y)/(mon);
      !!SN:M(availablePos)/?(size:y);
      !!if&(size);
        !!VR(size):-1;
        !!VR(randomInd:y):R0/0/(size);
        !!SN:M(availablePos)/(randomInd)/?(position:y);
        !!BM(targetStackId):P?(oldPos:y);
        !!SN:E5898560/(CALLCONV_THISCALL)/(cmbMgr)/(spellID)/(oldPos)/1/(position)/(schoolLvl)/2;
        !!VR(success:y):S(TRUE);
      !!en;
    !!en;

  !!el|(spellID)=(SPELL_QUICKSAND)/(spellID)=(SPELL_LAND_MINE);
    !!FU(WOG_33_CastTargetSpellAtPos):P0/(spellID)/(schoolLvl);
    !!VR(success):S(TRUE);
  !!el&(spellID)=(SPELL_REMOVE_OBSTACLE);
    !!if&(siege)=0/i^wog_isDwellOrCBBattle^=0;
      !!FU(NewIntArray):P?(availablePos:y);
      !!FU(WOG_33_GetAvailableToSpellHexArray):P(availablePos)/(WOG_33_CheckHexIsObstacle);
      !!FU(WOG_33_CastSpellAtRandomPos):P(availablePos)/(spellID)/(schoolLvl)/?(success);
      *!VR(success):S(TRUE);
    !!en;
  !!el|(spellID)=(SPELL_FIRE_WALL)/(spellID)=(SPELL_FORCE_FIELD);
    !!FU(NewIntArray):P?(availablePos:y);
    !!FU(WOG_33_GetAvailableToSpellHexArray):P(availablePos)/(WOG_33_CheckHexIsAvailableForWall)/(schoolLvl);
    !!FU(WOG_33_CastSpellAtRandomPos):P(availablePos)/(spellID)/(schoolLvl)/?(success);
    *!VR(success):S(TRUE);

  !!el&(spellID)=(SPELL_EARTHQUAKE);

    !!if&(siege);
      !!UN:C(COMBAT_MANAGER)/4/?(cmbMgr:y);
      !!re i/0/7;
        !!SN:E4676976/(CALLCONV_THISCALL)/(cmbMgr)/i;
        !!if&v1;
          !!SN:E5930896/(CALLCONV_FASTCALL)/(cmbMgr)/(SPELL_EARTHQUAKE)/0;
          !!VR(success):S(TRUE);
          !!br;
        !!en;
      !!en;

    !!el&(size)>1;
      !!FU(Array_Clone):P(spellArray)/?(newArray:y);
      !!VR(spellInd):X1;
      !!SN:V(newArray)/(spellInd)/?(otherSpell:y);
      !!VR(spellInd):X1;
      !!SN:V(newArray)/(spellInd)/(otherSpell:y);
      !!FU(Array_SortedUnique):P(newArray);
      !!VR(success):S(TRUE);
      !!FU(WOG_33_CastSpellProcedure):P(newArray);
    !!en;

  !!en;
  !!if&(success)=(FALSE);
    !!FU(WOG_33_ReportSpellCastFail):P(spellID);
  !!en;
!?FU(WOG_33_ReportSpellCastFail);
!#VA(spellID:x);
!!SN:H^spell^/(spellID:x)/0/?(spellName:z) T^wog.33.fail^/?(msg:z)/^spellName^/(spellName);
!!MM:S(msg);

!?FU(WOG_33_CheckHexIsObstacle);
!#VA(hexId:x) (result:x);
  !!VR(result):S(FALSE);
  !!BU:O(hexId)/?f;
  !!VRf:&2;
  !!if&f/f<4;
    !!UN:C(COMBAT_MANAGER)/4/?(cmbMgr:y);
    !!VR(offset:y):S112 *(hexId) +20 +452;(obstArr);
    !!UN:C(cmbMgr)/(offset)/4/?s;
    !!if&s<>-1;
      !!VR(result):S(TRUE);
    !!en;
  !!en;

!?FU(WOG_33_CheckHexIsAvailableForTeleport);
!#VA(hexId:x) (result:x) (cmbMgr:x) (mon:x);
  !!SN:E5913104/(CALLCONV_THISCALL)/(cmbMgr)/(mon)/(hexId);
  !!VR(result):Sv1;

!?FU(WOG_33_CheckHexIsAvailableForWall);
!#VA(hexId:x) (result:x) (spellLevel:x);
  !!VR(result):S(FALSE);
  !!FU(WOG_IfHexIsFree):P(hexId)/?f;
  !!if&f=1;
    !!VR(checkPos:y):S(hexId) -16;
    !!VR(row:y):S(hexId):17 &1;
    !!VR(checkPos):-(row);

    !!FU(WOG_IfHexIsFree):P(checkPos)/?f;
    !!if&f;
      !!if&(spellLevel)<2;
        !!VR(result):S(TRUE);
      !!el;
        !!VR(checkPos:y):S(hexId) -34;
        !!FU(WOG_IfHexIsFree):P(checkPos)/?(result);
      !!en;
    !!en;
  !!en;

!?FU(WOG_33_GetAvailableToSpellHexArray);
!#VA(hexArray:x) (callbackPtr:x) (customArgs[3]:x);

  !!re i/0/(BATTLE_HEX_LAST);
    !!FU(callbackPtr):Pi/?(result:y)/(customArgs[0])/(customArgs[1])/(customArgs[2]);
    !!FU(Array_Push)&(result):P(hexArray)/i;
  !!en;


!?FU(OnCombatRound)&i^battle_round^>=0/i^WOG_33_enabled^;
  !!FU(WOG_GetRandomSeedByCoord):Pi^battle_x^/i^battle_y^/i^battle_z^/?(seed:y);
  !!VR(seed):+i^battle_round^;
  !!FU(WOG_GetRandomSeed):P?(oldSeed:y);(seed)/?(oldSeed:y);
  !!VR(random:y):Rd/(seed) R0/1/100 Rd/(oldSeed);

  !!if&(random)<=i^WOG_33_cast_chance^;
    !!VRi^WOG_33_this_round_cast_chance^:Si^WOG_33_cast_chance^;
  !!el;
    !!VRi^WOG_33_this_round_cast_chance^:S(NULL);
  !!en;
!?FU(OnBattleActionEnd)&i^WOG_33_this_round_cast_chance^;
  !!VR(divider:y):S0;
  !!re i/0/(BATTLE_STACK_LAST);
    !!BMi:N?n;
    !!if&n>0;
      !!VR(divider):+1;
    !!en;
  !!en;

  !!VR(chance:y):R0/1/100;i^WOG_33_this_round_cast_chance^;
  *!IF:L^%(chance) <= %i(WOG_33_this_round_cast_chance) ^;
  !!if&(chance)<=i^WOG_33_this_round_cast_chance^;
    !!FU(WOG_33_CastSpellProcedure):Pi^WOG_33_spells_array_ID^;
    !!VRi^WOG_33_this_round_cast_chance^:S0;
  !!el&(divider);
    !!VR(step:y):S100 :(divider);*i^WOG_33_cast_chance^  :100;
    !!VRi^WOG_33_this_round_cast_chance^:+(step);
  !!en;

------------------------------------------------------------------------

!?OB(OBJ_SPELL_SCROLL)&999;

  !!UN:P33/?y-1;                        [Check if Living Scroll script is enabled in WoGify Options: y-1]
  !!FU&y-1<>1:E;                        [Exit if script isn't enabled]
  !!OB(CURRENT_OBJ):C?v1;               [Check control word (spell number) - store in v1]
  !!FU(WOG_33_CheckSpellIsValid):Pv1/?(isValid:y);

  !!if&(isValid);
    !!UN:C6974640/4/?y2;
    !!VRy2:+32;
    !!UN:Cy2/4/?y1;
    !!VRy3:S(OBJ_SPELL_SCROLL)*4 +y1; 
    !!UN:Cy3/4/?i^WOG_33_old_name^;                            [get obj name ptr]
    !!SN:Bi^WOG_33_old_name^/d/?s^WOG_33_old_name^;            [get native name]
    !!SN:Bi^WOG_33_old_name^/d/^%T(wog.33.prefix)^;            [set new name]
  !!en;

!$OB(OBJ_SPELL_SCROLL)&i^WOG_33_old_name^;                       [restore name]
  !!SN:Bi^WOG_33_old_name^/d/s^WOG_33_old_name^;
  !!SN:W^WOG_33_old_name^;                                       [clear variable]
------------------------------------------------------------------------
 [Hero screen click trigger]
!?FU(OnHeroScreenMouseClick)&i^mouse_action^=(MOUSE_RMB_PRESSED);

  !!UN:P33/?y-1; [Check if Living Scroll script is enabled in WoGify Options: y-1]
  !!FU&y-1<>1:E; [Exit if script isn't enabled]

  !!CM:I?v2; [v1=type of click, v2=area clicked]
  !!VRv3:Sv2 -2;  [v3=equip position for use with HE:A1 command]
  !!VRv4:Sv2 -21; [v4=backpack position for use with HE:A1 command]
  !!FU(WOG_33_SetScrollDecription)&v2>=2/v2<=20:Pv3/-1; [Equipped slot]
  !!FU(WOG_33_SetScrollDecription)&v2>=40/v2<=44:Pv4/-1; [Backpack slot]

------------------------------------------------------------------------

 [Hero Meeting Screen click trigger]
!?FU(OnHeroesMeetScreenMouseClick)&i^mouse_action^=(MOUSE_RMB_PRESSED);

  !!UN:P33/?y-1; [Check if Living Scroll script is enabled in WoGify Options: y-1]
  !!FU&y-1<>1:E; [Exit if script isn't enabled]

  !!CM:I?v2; [v1=type of click, v2=area clicked]
  !!VRv3:Sv2 -27;  [v3=equip position for left hero to use with HE:A1 command]
  !!VRv4:Sv2 -70; [v4=backpack position for left hero to use with HE:A1 command]
  !!VRv5:Sv2 -46;  [v5=equip position for right hero to use with HE:A1 command]
  !!VRv6:Sv2 -75; [v6=backpack position for right hero to use with HE:A1 command]

  !!CM:H?v7/?v8; [Left hero: v7, Right hero: v8]

  !!FU(WOG_33_SetScrollDecription)&v2>=27/v2<=45:Pv3/v7; [Equipped slot for left hero]
  !!FU(WOG_33_SetScrollDecription)&v2>=89/v2<=93:Pv4/v7; [Backpack slot for left hero]
  !!FU(WOG_33_SetScrollDecription)&v2>=46/v2<=64:Pv5/v8; [Equipped slot for right hero]
  !!FU(WOG_33_SetScrollDecription)&v2>=94/v2<=98:Pv6/v8; [Backpack slot for right hero]


------------------------------------------------------------------------

 [Spell is an equipped spell scroll: check if it's a Living Scroll]
!?FU(WOG_33_SetScrollDecription);
  !!HEx2:A1/?y1/x1;

  !!if&y1>1000;
    !!VRy1:-1001;
    !!FU(WOG_33_CheckSpellIsValid):Py1/?y2;
    !!VRy2:X1;
    !!SN:H^spell^/y1/0/?(spellName:z) T^wog.33.desc_%y2^/?(msg:z)/^spellName^/(spellName);
    !!IF:Q1/9/y1/4/(msg);
    !!CM:R0; [Disable standard right-click info. for Living Scroll]
  !!en;

---------------------------------------------------------------------------------------

** End of Script **


!?FU(WOG_33_CheckSpellIsValid);
!#VA(spellID:x) (result:x);
  !!SS(spellID):F?f;
  !!VRf:&(BIT_17);                                             [AI Armag/ Destroy undead / Death Ripple;]
  !!if&(spellID)>=(SPELL_FIRST_BATTLE)/(spellID)<(SPELL_CLONE)
    /(spellID)<>(SPELL_SACRIFICE)/(spellID)<>(SPELL_RESURRECTION)
    /(spellID)<>(SPELL_ANIMATE_DEAD)/f=0;
    !!VR(result):S(TRUE);
  !!el;
    !!VR(result):S(FALSE);
  !!en;
