ZVSE2

** Secondary Skills Boost ERM script v1.6 - Donald X. Vaccarino. Right-click hint text added by Timothy Pulver for v1.6.
** Requires WOG version 3.58
** Updated Sep. 19. 2004 by Hermann the Weird
** Improves weak secondary skills.
** WoGify Name: script03.erm

** eagle eye - gain a choice of spell when going up a level (1-2, 2-3, 3-4)
** scouting - gain rogues every day (1, 3, 5)
** resistance - lowers 1-3 defending enemy creature stacks to unupgraded form
** learning - chance of extra primary skill point each level - 20%/35%/50%
** tactics - gives +1/+2/+3 speed per skill level, disables normal tactics

** eagle eye offers lower level spells instead of higher ones if you don't have enough wisdom
** the speculum and spyglass increase the number of rogues gained with scouting
** resistance's effect wears off if defenders aren't beaten

** To use this code, put it into a Global Event, set to never happen.

** Variables Used: v487-v489, v587-v589, v900-v916, v920-v934, v35, v36
** Strings Used: z470-z472, z430-z431, z70-73
** Flags Used: 2, 270-271
** Hero variables: 43
** v487-v489, v587-v589, v35, v36 and z430-z431 must not be modified elsewhere!

** Flags 270-271 are shared with other scripts that use Fnord's network detection function.
** The other variables may be used elsewhere but will be trashed by this code.
** Use caution; this code may take place in the middle of another script, if a hero gains a level or a battle is provoked

** Functions Used: 649-650, 653, 658-661, 666-668, 8166
** Timers Used: 74

** ERM numbers: Eagle Eye: 103
**              Scouting: 215
**              Resistance: 216
**              Learning: 217
**              Tactics: 218


!?FU8166;     [Initialization function]

** Hint text for spyglass/speculum
*!UN:P215/?v1;     [Check if Scouting is enabled in WoGify Options]
!!VRz430:Sz103024;
!!UN:A52/10/430;
!!VRz431:Sz103025;
!!UN:A53/10/431;

!#UN:P215/?v1;     [Check if Scouting is enabled in WoGify Options]
*#TM74&v1=1:S1/999/1/255; [once/day for all players]
!#FU8166&v1:P;     [Set strings for spyglass/speculum if active]

** End of Initialization Code
-------------------------------------------------------------------------


*************************************************************************
     Scouting
*************************************************************************

*?TM74;     [Timer routine for scouting]
!?FU(OnEveryDay);

!!UN:P215/?(isEnabled:y);     [Check if Scouting is enabled in WoGify Options]
!!FU&y-1<>1:E;     [Exit if it isn't]
!!if&(isEnabled);
  !!OW:Hi^timerOwner^/1;                  [get current heroes to v-array]

  !!re i/2/v1/1/1;
    !!HEvi:S(SKILL_SCOUTING)/?(scoutingLvl:y);

    !!if&(scoutingLvl);
      !!HEvi:A2/(ART_SPECULUM)/0/?(isSpec:y); [check for Speculums]
      !!HEvi:A2/(ART_SPYGLASS)/0/?(isSpy:y); [check for Spyglasses]
      !!VR(roguesAmount:y):S(scoutingLvl) *2 -1 +(isSpy) +(isSpec);

      !!if&i^timerIsAi^;
        !!HEvi:C2/(MON_ROGUE)/(roguesAmount)/0; [Same for AI]
      !!el;
        !!IF:Wvi;
        !!HEvi&w43=0:C2/(MON_ROGUE)/(roguesAmount)/1; [Give rogues to a free or rogue slot, else ask player]
      !!en;
    !!en;

  !!en;
!!en;

!?FU(OnHeroScreenMouseClick)&999/i^mouse_action^=(MOUSE_RMB_PRESSED);

!!UN:P215/?(isEnabled:y);     [Check if Scouting is enabled in WoGify Options]

!!if&(isEnabled);
  !!FU(WOG_GetSkillInfoByClick):Pi^mouse_item^/(CURRENT_HERO)/?(skill:y)/?(skillArea:y);

  !!if&(skill)=(SKILL_SCOUTING)/(skillArea)>1;
    !!CM:R0;     [Disable standard r-click info]
    !!HE(CURRENT_HERO):S(SKILL_SCOUTING)/?(scoutingLvl:y);     [Check for scouting level]
    !!IF:W(CURRENT_HERO);     [w vars refer to current hero]

    !!VRz-1:Sz103035+^.^;     [Set strings]
    !!VRz-1&w43=1:Sz103036+^.^;
    !!VRz-2:Sz103036;
    !!VRz-2&w43=1:Sz103035;

    ** Ask for enabling/disabling rogues

    ** Basic scouting
    !!IF&(scoutingLvl)=1:Q2/20/12/2/z103037;

    ** Advanced scouting
    !!IF&(scoutingLvl)=2:Q2/20/13/2/z103038;

    ** Expert scouting
    !!IF&(scoutingLvl)=3:Q2/20/14/2/z103039;

    !!FU&-2:E;     [Exit if "no" answered]

    !!VRy-4:Sw43;
    !!VRw43&y-4=1:S0;     [set w var for enabling/disabling daily rogues, 0=enabled (default)]
    !!VRw43&y-4=0:S1;

    ** End of right click trigger for rogue enabling/disabling

  !!en;
!!en;


-------------------------------------------------------------------------


*************************************************************************
     Eagle Eye
*************************************************************************

!?HL-1;     [Level up trigger for eagle eye]

  !!UN:P103/?y-1;     [Check if Eagle Eye I is enabled in WoGify Options]
  !!FU&y-1<>1:E;     [Exit if it isn't]

  !!HE-1:S11/?(eeLvl:y);     [get eagle eye level]
  !!FU&(eeLvl)=0:E;     [Exit if no eagle eye]

  ** get hero name and sex, prepare strings
  !!HE-1:B0/?z70;
  !!HE-1:R2/?y-1;
  !!VRz71&y-1=0:Sz103040;
  !!VRz72&y-1=0:Sz103041;
  !!VRz71&y-1=1:Sz103042;
  !!VRz72&y-1=1:Sz103043;
  !!VRz73&y-1=0:Sz103044;
  !!VRz73&y-1=1:Sz103045;

  ; [igrik: isGameNotYetStarted]


  !!HE-1:O?v908;     [get owner of this hero]
  !!OW&v908<>-1:Iv908/?v909;     [get AI (1) or human (0)]
  !!VR(showMsg:y):S0;     [assume AI]
  !!VR(showMsg)&v908<>-1/v909=0:S1;     [human if has owner and that owner is human]
  !!UN:C6915152/4/?y7;
  !!VR(showMsg)&y7=1:S0;
  !!HE-1:A2/0/?v911/?v906;                          [see if hero has a spell book]
  !!IF&(showMsg)=1/v906=0:M1/z103026;             [Message if no spell book]

  ** Algor: begin
  !!FU&v906=0:E;                                    [exit, if no spellbook]
  **daemon_n: begin
  !!VR(maxSpellLvl:y):S2;                 [y2 - wisdom req. for e.eye]
  !!HE-1:S(SKILL_WISDOM)/?(wisLvl:y);     [y1/y2 - wisdom/e.eye skill level]

  !!if&(wisLvl);
    !!VR(maxSpellLvl):S1 +(eeLvl) F0/(wisLvl) Sd2 F1/4;                 [y2 - wisdom req. for e.eye]
  !!en;

  !!FU(NewIntArray):P?(avSpells:y);                 [create spells arr;]

  !!re (spell:y)/0/(SPELL_LAST_WOG);                        [go through all]
    !!HE(CURRENT_HERO):M(spell)/?(isLearned:y);           [y1=1 for known spell]
    !!SS(spell):L?(spellLvl:y);                           [y3 - spell level]

    !!if&(isLearned)=(FALSE)/(spellLvl)<=(maxSpellLvl);
      !!FU$ban$:P(spell);

      !!if&y-94=0/(spell)<>(SPELL_TITANS_LIGHTNING_BOLT); [y-94 =0 - is not banned and not disabled]
        !!FU(Array_Push):P(avSpells)/(spell);
      !!en;
    !!en;
  !!en;

  !!SN:M(avSpells)/?(size:y);           [check spell amount]

  !!if&(size);                          [if there is any spell]
    !!VR(leftSpell:y):S(NO_SPELL);
    !!VR(rightSpell:y):S(NO_SPELL);

    !!if&(size)>1;                      [if we have several spells]
      !!if&(size)>2;                    [if we have more 2 spells, shuffle them]
        !!FU(Array_Shuffle):P(avSpells);
      !!en;

      !!SN:M(avSpells)/0/?(leftSpell) M(avSpells)/1/?(rightSpell);

    !!el;                               [if we have only 1 spell]
      !!SN:M(avSpells)/0/?(leftSpell) M(avSpells)/0/?(rightSpell);
    !!en;

    !!IF:V2/0;
    !!IF&(showMsg)=1:Q2/(PIC_TYPE_SPELL)/(leftSpell)/(PIC_TYPE_SPELL)/(rightSpell)/(MSG_TYPE_CHOOSE_PIC)/z103027;

    !!HE(CURRENT_HERO)&2:M(leftSpell)/1;[learn left spell]
    !!HE(CURRENT_HERO)&-2:M(rightSpell)/1; [learn right spell - is default;]
  !!el;                                 [if all spells known & Eagle Eye II is disabled];]
    !!UN:P202/?y-3;                     [Check if Eagle Eye II is enabled in WoGify Options]
    !!if&y-3=(FALSE);
      !!VRy-2:S0 +(eeLvl) +35;          [Get pic for message]
      !!IF&(showMsg)=1:Q2/20/y-2/1/z103046;
      !!HE(CURRENT_HERO):S(SKILL_EAGLE_EYE)/0; [Remove eagle eye]
    !!en;
  !!en;
**daemon_n: end

** Algor: end


*************************************************************************
     Learning
*************************************************************************

!?HL-1;     [Level up trigger for learning]

!!UN:P217/?y-1;     [Check if Learning is enabled in WoGify Options]
!!FU&y-1<>1:E;     [Exit if it isn't]

!!HE-1:S21/?v901; [get learning level]
!!VRv902&v901>0:Sv901; [convert bonus to percentage - 20, 35, 50]
!!VRv902&v901>0:*15;
!!VRv902&v901>0:+5;
!!VRv911&v901>0:S0 R99; [roll percentile dice...]
!!FU649&v901>0/v911<v902:P; [handle learning bonus]

** End of level up trigger for learning


!?FU649;     [Function to give learning bonus to hero -1]

!!VRv911:S0 R3;     [random primary skill]
!!VRv903:S31 +v911;     [picture of skill]
!!HE-1&v911=0:Fd1/d/d/d;     [give appropriate bonus]
!!HE-1&v911=1:Fd/d1/d/d;
!!HE-1&v911=2:Fd/d/d1/d;
!!HE-1&v911=3:Fd/d/d/d1;
!!HE-1:B0/?z470;     [get hero name]

!!HE-1:O?v908;     [get owner of this hero]
!!OW&v908<>-1:Iv908/?v909;     [get AI (1) or human (0)]
!!VRv910:S0;     [assume AI]
!!VRv910&v908<>-1/v909=0:S1;     [human if has owner and that owner is human]

; [igrik: is show dialog? (if is start game -> not show dlg)]
!!UN:C6915152/4/?y1;
!!IF&v910=1/y1<>1:Q2/v903/1/1/z103034;

** End of function to give learning bonus to hero -1
-------------------------------------------------------------------------


*************************************************************************
     Resistance
*************************************************************************

!?BA0;     [Pre-battle trigger for resistance]

!!UN:P216/?y-1;     [Check if Resistance is enabled in WoGify Options]
!!FU&y-1<>1:E;     [Exit if it isn't]

!!FU661:P;     [set flag 270 to true if a human vs. human network battle (unsupported)]

!!BA:H0/?v900;     [get # of attacking hero]
!!HEv900:B0/?z470;     [get name of that hero]
!!HEv900:R2/?v911;     [get sex of that hero]
!!VRz471&v911=0:Sz103028;     [Strings for hero sex]
!!VRz471&v911=1:Sz103029;
!!HEv900:O?v911;     [get hero owner]
!!OW:Iv911/?v912;     [get AI (1) or human (0)]
!!IF:V5/0;
!!IF&v912=0:V5/1;     [set flag 5 if attacker is human...]
!!BA:H1/?v911;     [get # of defending hero]
!!HEv911&v911>=0:B0/?z-1;     [get name of that hero]
!!VRz-1&v911>=0:+z103056;
!!VRz-1&v911<0:Sz103057;
!!HEv911&v911>=0:O?v912;     [get owner of defender if any]
!!OW&v911>=0:Iv912/?v913;     [get AI/human of defender]
!!IF&v911>=0/v913=0:V5/1;     [set flag 5 if defender is human]

!!HEv900:S26/?v901;     [get resistance skill level]
!!VRv911:S7;
!!FU658&v901>=1/-270:P0/1/7;     [call function once per skill level]
!!VRv589:Sv911;     [remember slot changed if any]
!!VRv911:S7;
!!FU658&v901>=2/-270:P0/1/7;
!!VRv588:Sv911;     [remember slot changed if any]
!!VRv911:S7;
!!FU658&v901=3/-270:P0/1/7;
!!VRv587:Sv911;     [remember slot changed if any]
!!BA&v589<7:M1/v589/?v902/?v914;     [get v902 type and v914 qty in slot]
!!BA&v588<7:M1/v588/?v903/?v914;     [get v903 type and v914 qty in slot]
!!BA&v587<7:M1/v587/?v904/?v914;     [get v904 type and v914 qty in slot]
!!VRz472:Sz103030;
!!IF&5/v589<7/v588=7:Q2/21/v902/1^%Z472^;
!!IF&5/v588<7/v587=7:Q2/21/v902/21/v903/1^%Z472^;
!!IF&5/v587<7:Q2/21/v902/21/v903/21/v904/1^%Z472^;

** Alexis Koz
!!VRv911:S0;
!!BA:H1/?v900;     [get # of attacking hero]
!!HEv900&v900>=0:B0/?z470;     [get name of that hero]
!!HEv900&v900>=0:R2/?v911;     [get sex of that hero]
!!VRz471&v911=0:Sz103031;     [Strings for hero sex]
!!VRz471&v911=1:Sz103032;
!!HEv900&v900>=0:O?v911;     [get hero owner]
!!OW&v900>=0:Iv911/?v912;     [get AI (1) or human (0)]
!!IF:V5/0;
!!IF&v900>=0/v912=0:V5/1;     [set flag 5 if attacker is human...]
!!BA:H0/?v911;     [get # of defending hero]
!!HEv911&v911>=0:B0/?z-2;     [get name of that hero]
!!VRz-2&v911>=0:+z103056;
!!VRz-2&v911<0:Sz103057;
!!HEv911:O?v912;     [get owner of defender if any]
!!OW:Iv912/?v913;     [get AI/human of defender]
!!IF&v913=0:V5/1;     [set flag 5 if defender is human]

!!HEv900&v900>=0:S26/?v901;     [get resistance skill level]
!!VRv911:S28;
!!FU658&v900>=0/v901>=1/-270:P1/0/28;     [call function once per skill level]
!!VRv489:Sv911;     [remember slot changed if any]
!!VRv911:S28;
!!FU658&v900>=0/v901>=2/-270:P1/0/28;
!!VRv488:Sv911;     [remember slot changed if any]
!!VRv911:S28;
!!FU658&v900>=0/v901=3/-270:P1/0/28;
!!VRv487:Sv911;     [remember slot changed if any]
!!BA&v489<28:M0/v489/?v902/?v914;     [get v902 type and v914 qty in slot]
!!BA&v488<28:M0/v488/?v903/?v914;     [get v903 type and v914 qty in slot]
!!BA&v487<28:M0/v487/?v904/?v914;     [get v904 type and v914 qty in slot]
!!VRz472:Sz103033;
!!IF&5/v489<28/v488=28:Q2/21/v902/1^%Z472^;
!!IF&5/v488<28/v487=28:Q2/21/v902/21/v903/1^%Z472^;
!!IF&5/v487<28:Q2/21/v902/21/v903/21/v904/1^%Z472^;
** Alexis Koz end

** End of pre-battle trigger for resistance


!?BA1;     [Post-battle trigger for resistance]

!!UN:P216/?y-1;     [Check if Resistance is enabled in WoGify Options]
!!FU&y-1<>1:E;     [Exit if it isn't]

!!VRv901:Sv587;
!!FU660&v587<7:P0/1;     [re-upgrade creatures if need be]
!!VRv587:S7;
!!VRv901:Sv588;
!!FU660&v588<7:P0/1;
!!VRv588:S7;
!!VRv901:Sv589;
!!FU660&v589<7:P0/1;
!!VRv589:S7;

** Alexis Koz
!!VRv901:Sv487;
!!FU660&v487<28:P1/0;     [re-upgrade creatures if need be]
!!VRv487:S28;
!!VRv901:Sv488;
!!FU660&v488<28:P1/0;
!!VRv488:S28;
!!VRv901:Sv489;
!!FU660&v489<28:P1/0;
!!VRv489:S28;
** Alexis Koz

** End of post-battle trigger for resistance


!?FU658;     [Function to downgrade one defending troop stack in battle]

!!VRv902:Sx2 *20 R6;     [random slot # to start search from]
!!DO659/0/6/1:Px1/x2/x3;     [check 7 slots for stack to downgrade]

** End of function to downgrade one defending troop stack in battle


!?FU659;     [Function to check one stack for downgrading]

!!VRv912:Sv902 %7;     [get an actual slot number]
!!BA:Mx2/v912/?v913/?v914;     [get v913 type and v914 qty in slot]
!!VRv915:S1;     [assume creature is upgraded]
!!VRv915&v913<0:S0;     [treat no creature as a downgraded one]
!!VRv916:Sv913 %2;
!!VRv915&v916=0:S0;     [even creatures are always non-upgraded]
!!VRv915&v913>=112/v913<=117:S0;     [elementals and golems]
!!VRv915&v913>=132:S0;     [other neutral creatures]
!!VRv913:-1;     [get type of unupgraded version]
!!VRv913&v913=122:S115;     [special cases for elementals]
!!VRv913&v913=124:S113;
!!VRv913&v913=126:S112;
!!VRv913&v913=128:S114;
!!BA&v911=x3/v915=1:Mx2/v912/v913/v914;     [set new downgraded type if we haven't yet]
!!VRv911&v911=x3/v915=1:Sv912;     [note we changed a slot]
!!VRv902:+1;     [next slot]

** End of function to check one stack for downgrading


!?FU660;     [Function to reupgrade creatures in defender's slot v901]

!!BA:Mx2/v901/?v913/?v914;     [get v913 type and v914 qty in slot]
!!VRv913:+1;     [usually this gets us upgraded version]
!!VRv913&v913=113:S127;     [handle elementals]
!!VRv913&v913=114:S125;
!!VRv913&v913=115:S129;
!!VRv913&v913=116:S123;
!!BA&v913>0/v914>0:Mx2/v901/v913/v914;     [set the old, upgraded type, if creatures survived]

** End of function to reupgrade creatures in defender's slot v901
-------------------------------------------------------------------------


*************************************************************************
     Tactics
*************************************************************************

!?BA0;     [Pre-battle trigger for tactics]
!!VRv36:S0;
!!FU668:P;

** End of pre-battle trigger for tactics


!?BA50;     [Pre-battle trigger for tactics at distant PC]
!!VRv36:S0;
!!FU668:P;

** End of pre-battle trigger for tactics at distant PC


!?FU668;     [Pre-battle function to remove tactics]

!!UN:P218/?y-1;     [Check if tactics is enabled in WoG options]
!!FU&y-1<>1:E;     [Exit if it isn't]

!!BA:H0/?y-1;     [get attacking hero number]
!!BA:H1/?y-2;     [get defending hero number]
!!HEy-1:S19/?v35;     [get attackers tactics]
!!HEy-2&y-2>=0:S19/?v36;     [get defenders tactics - if any]

!!FU&v35=0/v36=0:E;     [Exit if no one has tactics]

!!HEy-1&v35>0:R4/0;     [remove attackers tactics]
!!HEy-2&y-2>=0/v36>0:R4/0;     [remove defenders tactics - if any]

** End of pre-battle function to remove tactics


!?BF&v35<>v36; [Battle round trigger for tactics, before tactics phase]

!!UN:P218/?y-1;     [Check if tactics is enabled in WoG options]
!!FU&y-1<>1:E;     [Exit if it isn't]

!!BH0:N?y-1;     [attacking hero #]
!!BH1:N?y-2;     [defending hero #]

!!FU&v35=0/v36=0:E;     [Exit if no one has tactics]
!!FU&v35=v36:E;     [Exit if equal tactics level]

!!VRy-5&v35>v36:S0 +v35 -v36;     [Set bonus for attacker - if attackers tactics superior]
!!VRy-5&v35<v36:S0;     [Set bonus for attacker - if defenders tactics superior]

!!VRy-6&v35>v36:S0;     [Set bonus for defender - if attackers tactics superior]
!!VRy-6&v35<v36:S0 +v36 -v35;     [Set bonus for defender - if defenders tactics superior]

!!DO667/0/41/1:Py-5/0;     [give +speed via tactics, attacker]
!!DO667/0/41/1&y-2>=0:Py-6/1;     [give +speed via tactics, defender - if any]

** End of battle round trigger for tactics, before tactics phase


!?FU667;     [Function to give +speed via tactics]

!!BMx16:I?y1 T?y2 N?y3;     [get side, type, qty]
!!BMx16&y3>0/y1=x2/v7180<>1/y2<>145/y2<>146/y2<>147/y2<>148/y2<>149:Sdx1;            [add bonus speed if Warmachine II is disabled]
!!BMx16&y3>0/y1=x2/v7180=1/y2<>124/y2<>145/y2<>146/y2<>147/y2<>148/y2<>149:Sdx1;     [add bonus speed if Warmachine II is enabled]

** End of function to give +speed via tactics


!?FU661;     [Function to set flag 270 if this is a human vs. human network battle]

!!IF:V270/0;     [assume not a network hero battle]
!!BA:E?y1;     [Check state of battle: y1>0 means network battle]
!!IF&y1>0:V270/1;     [Set flag 270 to true if network battle]

** End of function to set flag 270 if this is a human vs. human network battle
