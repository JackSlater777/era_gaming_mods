ZVSE2
; Author:   Archer30
; Original Author: Bonizag
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework

; There is a 1/4 chance that a random hero will appear on the monster's side and help them fight.


// Mark the battle if it is with a neutral stack
// This variable will be reset at the end of battle
!?OB(OBJ_MONSTER)&1000;
!!UN:P72/?(wogOption:y);
!!VRi^wog_72_randHeroActive^&(wogOption):S(TRUE);

// Manage variables before the battle, generates the neutral hero
!?FU(OnBeforeBattle)&i^wog_72_randHeroActive^/i^battle_hero_1^=(NO_HERO);
; Check if it is lucky enough to encounter the neutral hero or else
!!VR(random:y):R0/0/3;                  [25% chance]
!!VR(random)&i^Random_Neutral_Hero^:S0; [Always generate a neutral hero if Always Random Hero is enabled]

; Get an available random hero and generate on the battlefield if lucky enough
!!if&(random)=0;
  !!VRi^wog_72_randHeroActive^:S(TRUE);
  !!FU(WOG_GetRandomUnoccupiedHero):P?(randHero:y);

  !!if&(randHero)>(NO_HERO);
    !!BA:H1/(randHero);
    *!FU(WOG_72_SetRandomHeroOwner):P(randHero); [Get an ideal owner for the random hero - currently not needed]
    !!VRi^battle_hero_1^:S(randHero);
  !!el;
    !!VRi^wog_72_randHeroActive^:S(FALSE);
  !!en;
!!el;
  !!VRi^wog_72_randHeroActive^:S(FALSE);
!!en;

// Store neutral stacks in global vars (in order to return them on battle replay)
// The timing is late in order to be compatible with other scripts
!?FU(OnSetupBattlefield)&i^wog_72_randHeroActive^;
!!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST);
  !!BA:M1/i/?i^wog_72_replayType_%i^/?i^wog_72_replayNum_%i^;
!!en;

// Restore neutral stacks on battle replay
!?FU(OnBattleReplay)&i^wog_72_randHeroActive^;
!!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST);
  !!BA:M1/i/i^wog_72_replayType_%i^/i^wog_72_replayNum_%i^;
!!en;

// Prevent neutral hero from surrendering
!?FU(OnBeforeBattleAction)&i^wog_72_randHeroActive^;
!!BG:A?(actionType:y);

!!if&(actionType)=(BATTLE_ACTION_RETREAT)/i^battle_current_side^=(BATTLE_RIGHT);
  !!BMi^battle_current_stack^:T?t;

  !!if|t<(MON_CATAPULT)/t>(MON_ARROW_TOWERS);
    !!BG:A(BATTLE_ACTION_WALK_AND_ATTACK);
  !!el;
    !!BG:A(BATTLE_ACTION_DEFEND);
  !!en;
!!en;

// Reset variables
!?FU(OnAfterBattleUniversal);
!!VRi^wog_72_randHeroActive^:S(FALSE);

!?FU(OnAfterLoadGame);
!!VRi^wog_72_randHeroActive^:S(FALSE);

// Function for setting an owner for the random hero (for compatibility with HD Mod 5.2 R95+)
// Fighting a hero with no owner will prevent entering quick combat
// Currently no longer needed
*?FU(WOG_72_SetRandomHeroOwner);
*#VA(hero:x);

; Look for a player that isn't in the game
*!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  *!OW:Ii/?(isAi:y)/?(hasLost:y);

  *!br&(hasLost);
*!en;

*!if&i<=(PLAYER_LAST);
  *!HE(hero):Oi;
*!el;
  ; Look for an enemy AI player if the game has all 8 players
  *!OW:T(CURRENT_PLAYER)/?(currTeam:y);

  *!re j/(PLAYER_FIRST)/(PLAYER_LAST);
    *!OW:Ij/?(isAi:y);
    *!OW:Tj/?(team:y);

    *!br&(isAi)/(currTeam)<>(team);
  *!en;

  *!if&j<=(PLAYER_LAST);
    *!HE(hero):Oj;
  *!el;
    ; Just look for a player differs with current
    *!OW:C?(currPlayer:y);

    *!re k/(PLAYER_FIRST)/(PLAYER_LAST);

      *!if&k<>(currPlayer);
        *!HE(hero):Ok;

        *!br;
      *!en;
    *!en;
  *!en;
*!en;
