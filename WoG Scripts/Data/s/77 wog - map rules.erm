ZVSE2

WoGify Name: script01.erm
Updated: Sep. 24, 2004 by Hermann the Weird
Updated: Dec 2022 by Archer30

WoGify ERM code: 101 (0-5) plus 111-130 (0-1) for individual rules
101 code value:
 0=choose map rules each game, defaulting to rules selected below
 1=choose map rules each game (no defaults)
 2=use rules selected in options dialogue
 3=use two random map rules
 4=use two random map rules from those selected in options dialogue
 5=disable all map rules

** Map Rules ERM script v2.0 - Donald X. Vaccarino
** Requires WOG version 3.58 or later
** Adds rules to a map on day one
** Several rules were suggested by Timothy Pulver
** WoGify Options editing by Timothy Pulver

** Modified by Thomas Franz (samot):
** - FU710 - 9th / 10th skill: added check for warfare
** - Heroes pick up double artifacts works only for artifacts that are on the map if you start the game
**   (modified ?OB5; new FU727, reuse of TM19 (script00), once at day 1);
*  - FU690 / FU701: Dwellings have Air Elementals instead of Boars if Neutral Town (script67) is active

** Rules: (Number in parenthesis is ERM code)
**   1. Fliers can't fly but instead aren't retaliated against. (111)
**   2. Monster speed is inverted. (112)
**   3. Monsters are half price on 7th day of week. (113)
**   4. Heroes create magic plains each day. (114)
**   5. All monsters attack twice. (115)
**   6. Monster stacks in hero armies grow by 4% each day, to 10000 max. (116)
**   7. Most dwellings also have boars. (117)
**   8. Heroes start at 5th level (+5000 experience). (118)
**   9. Heroes pick up double artifacts. (119)
**  10. Perpetual darkness. (120)
**  11. Heroes have double movement. (121)
**  12. Mines change resources once/week. (122)
**  13. +1 places can be revisited each month. (123)
**  14. Heroes get 9th-10th skills. (124) - replaced with Capitol can be built in every town by Archer30
**  15. A hero's upgraded 7th level monsters automatically become 8th level. (125)
**  16. Heroes gain an artifact each level. (126)
**  17. Rogues attack heroes at random. (127)
**  18. All creatures have a breath weapon. (128)
**  19. Shooters can't shoot but instead have +50% hit points. (129)
**  20. All towns have a grail (only used if no confluxes on map) (130)
**  21. All towns have Warlord's Banners in front of them. (239)

** To use this code, put it into a Global Event, set to never happen.
** Make sure this event is prior to other events that may be affected by it.

** Variables Used: z280-z299, z326-z328, z352-z354, v1-v4, v549-v560,
** v564-v579, v600-v602, v610-v639, v700-v739
** z680, z681-z697 (reserved for future rules!)
** w33 (bits 0-4 used by script02) ***JHV
** Flags Used: 1-3, 875
** Functions Used: 690-727
** Variables v549-v559, v573-v579, z280-z299, and z352-z354 must not be modified by other programs!
** PO:N(=15) for Artifacts on the map (OB-Type 5) if double artifact rule is on

** functions for use during initialization

** see if player x16 is with player x1 on team x2, if not use for their shroud

!?FU719;

!!OW:Tx16/?y1; [get team number if any]
!!VRy1&y1=-1:S-2; [treat no team as not the same team]
!!VRvv600&x1<>x16/x2<>y1:Sx16; [store player number if usable for shroud-placing]

** find nonteammate for player x16

!?FU720;

!!VRv600:S564 +x16; [number of variable holding non-teammate]
!!VRvv600:Sx16; [default for 8-player-team game]
!!OW:Tx16/?y1; [get team number if any]
!!DO719/0/7/1:Px16/y1; [check each player for not being on this team]

** end of initialization functions


** Initialization Code

!#VRv579:S0; [first 10 bits of rules - none chosen yet]
!#VRv578:S0; [previous day in game]
!#VRv577:S0; [creatures are normal price]
!#VRv576:S0; [second 11 bits of rules - none chosen yet]
!#UN:X?v574/?v575; [get size/underground]
!#VRv573:Sv574 :2; [get half of size = middle of map]
!#VRv550:C1/2/4/8/16/32/64/128/256/512/1024; [bit table]

!#DO720/0/7/1&v1<>5:P; [find an enemy for each player, for Perpetual Darkness]

** end of Initialization Code


** Timer routine

!?FU(OnEveryDay);
!!UN:P101/?v1; [check wogify options number - 5 means no rules]
!!FU&v1=5:E; [Exit timer if map rules are disabled in wogify options]

!!VRy1:Sc0; [get day of game]
!!VRy2:Sy1 %7; [get day of week in y2]
!!VRy3:S0;
!!VRy3&y1<>v578:S1; [y3=1 if this is the first human turn on this day]
!!VRv578:Sy1; [store day]
!!VRy4:Sy1 %28; [day of month]

!!FU690&y1=1/y3=1:P; [choose rules and implement some]

!!VRv600:S0; [flag for 1st rule announced]
!!UN:P230/?y7; [Check if Display Map Rules chosen at Map Start is enabled: y7]
!!DO691/1/21/1&1000/y1=1/y3<>1/y7=1:P; [announce rules to humans after 1st player on day 1]

!!FU(WOG_101_CheckMapRule):P3; [check for rule 3]
!!VRy5:S0; [assume creatures should be normal price: y5]
!!VRy5&3/-1000:S1; [for AI with this rule they're always half price]
!!VRy5&3/1000/y2=0:S1; [for humans just half price on sunday]
!!FU(GetMaxMonsterId):P?y30;   [fix max mon id - Archer]
!!DO694/0/y30/1&y5=1/v577=0:P; [make creatures half price when needed]
!!DO695/0/y30/1&y5=0/v577=1:P; [make creatures double price when needed]
!!VRv577:Sy5; [remember whether creatures currently are normal or half price]

!!FU(WOG_101_CheckMapRule):P6; [check for rule 6]
!!DO699/0/155/1&3:P; [grow hero monster stacks by 5%]

!!FU(WOG_101_CheckMapRule):P8; [check for rule 8]
!!OW:C?y5; [get current player: y5]
!!DO702/0/155/1&3/y1=1:Py5; [upgrade this player's heroes to 5th level on day 1]

!!FU(WOG_101_CheckMapRule):P11; [check for rule 11]
!!OW&3:H-1/2/0; [number of heroes current player has: v2]
!!DO703/1/v2/1&3/v2>0:P; [double hero movement of current player's heroes]

!!FU(WOG_101_CheckMapRule):P12; [check for rule 12]
!!UN&3/y2=1/y3=1/y1<>1:U53/-1/?y1; [count mines: y1]
!!VRv600:S-1; [reset coordinate index]
!!DO706/1/y1/1&3/y2=1/y3=1/y1<>1:P; [change mine production once/week]

!!FU(WOG_101_CheckMapRule):P13; [check for rule 13]
!!DO704/0/155/1&3/y4=1/y1<>1:P; [clear learning stones etc. on day 1 of month]

!!FU(WOG_101_CheckMapRule):P4; [check for rule 4]
!!DO696/0/155/1&3:P; [create magic plains by today's heroes]

!!FU(WOG_101_CheckMapRule):P15; [check for rule 15]
!!DO697/0/155/1&3:P; [upgraded 7th level creatures become 8th for all heroes]

!!FU(WOG_101_CheckMapRule):P10; [check for rule 10]
!!OW:C?y6; [get current player: y6]
!!OW:Iy6/?y5; [get AI 1 or human 0]
!!UN&3/y5=1:Sv573/v573/0/y6/v574; [reveal entire map, surface]
!!UN&3/y5=1/v575=1:Sv573/v573/1/y6/v574; [reveal entire map, underground]
!!FU721&3/y5=0:Py6; [replace shroud for human, to handle AI teammate]
!!UN&3/y5=0:R1; [redraw screen]

** end of timer routine


** function to choose rules and implement rules that only take effect at start

!?FU690;

!!VRv1:S0; [make sure v1 starts as 0]
!!VRv2:S0; [make sure v2 starts as 0]
!!VRv3:S0; [make sure v3 starts as 0]
!!VRv4:S0; [make sure v4 starts as 0]
!!VRv579:S0; [initialize map rules page 1 to none selected]
!!VRv576:S0; [intialize map rules page 2 to none selected]
!!UN:P101/?v1; [check wogify options num: 0=choose rules each game but default to selected]
[                                         1=choose rules each game (no defaults)          ]
[                                         2=use rules selected in wogify options          ]
[                                         3=use random, 4=random from selected, 5=disable]

!!IF:V2/0; [Clear flag 2]
!!IF&v1<>3:V2/1; [If v1=3 use random rules]

 [Use Map Rules selected in WoGify if this option was chosen]
 [or set these numbers to start if option 1 was chosen]
!!if|v1=0/v1=2;
  !!DO723/111/120/1:P;  [set v579]
  !!DO724/121/131/1:P;  [set v576]
!!en;

!!if&2/v1<=1;
  !!VRz326:Sz101020;
  !!IF:G0/579/v579/326/101000/101001/101002/101003/101004/101005/101006/101007/101008/101009; [get bit choices in v579]
  !!VRz326:Sz101021;
  !!IF:G0/576/v576/326/101010/101011/101012/101013/101014/101015/101016/101017/101018/101019/101051; [get bit choices in v576]
!!en;

!!UN|-2/v1=4:U(OBJ_TOWN)/(TOWN_CONFLUX)/?y1; [count confluxes]
!!VRy2|-2/v1=4:S19; [normally 20 rules]
!!VRy2&-2/y1=0:S20; [21 rules if no confluxes]
!!VRy2&v1=4/y1=0:S20; [21 rules if no confluxes]
!!VRy3&-2:S1 Ry2; [pick a random rule]
!!VRy3&-2/y1>0/y3>=20:+1; [skip conflux]
!!VRy4&-2:S1 Ry2; [pick another one]
!!VRy4&-2/y1>0/y4>=20:+1; [skip conflux]
!!VRy4&-2/y3=y4:S1 Ry2; [if the same, try again]
!!VRy4&-2/y1>0/y4>=20:+1; [skip conflux]
!!VRy4&-2/y3=y4:S1 Ry2; [if the same, try again]
!!VRy4&-2/y1>0/y4>=20:+1; [skip conflux]
!!VRy4&-2/y3=y4:S1 Ry2; [if the same, try again]
!!VRy4&-2/y1>0/y4>=20:+1; [skip conflux]
!!VRy4&-2/y3=y4:S1 Ry2; [if the same, try again, just one rule if still the same]
!!VRy4&-2/y1>0/y4>=20:+1; [skip conflux]
!!DO725/1/100/1&v1=4:Py2; [get 1st random rule from selected rules if that option was chosen]
!!DO726/1/100/1&v1=4:Py2; [get 2nd random rule from selected rules if that option was chosen]
!!VRy3&v1=4:Sv3; [random from selected rule 1]
!!VRy4&v1=4:Sv4; [random from selected rule 2]
!!FU722|-2/v1=4:Py3 Py4; [set the bits for our random rules]

!!DO718/1/21/1:P; [add papyrus messages for any rules that are active]

!!VRv600:S0; [flag for 1st rule announced]
!!UN:P230/?y6; [Check if Display Map Rules chosen at Map Start is enabled: y6]
!!DO691/1/21/1&y6=1:P; [announce rules to first player, who is always human]

!!UN:R5/1/1; [Change mouse cursor to "wait" hourglass symbol]
!!UN:R7/0/1; [Show mouse cursor and disable changing]

!!VRy31:S(FALSE);
!!VRy32:S(FALSE);
!!VRy33:S(FALSE);

!!FU(WOG_101_CheckMapRule):P2; [check for rule 2]
!!VRy31&3:S(TRUE);
!!FU(WOG_101_CheckMapRule):P5; [check for rule 5]
!!VRy32&3:S(TRUE);
!!FU(WOG_101_CheckMapRule):P18; [check for rule 18]
!!VRy33&3:S(TRUE);

!!if|y31/y32/y33;
  !!FU(GetMaxMonsterId):P?y30;

  !!re i/(MON_FIRST)/y30;               [all monsters attack/shoot twice]
    !!co|i=(MON_NOT_USED_1)/i=(MON_NOT_USED_2)/i=(MON_NOT_USED_3)/i=(MON_NOT_USED_4);
    !!co&i>=(MON_CATAPULT)/i<=(MON_ARROW_TOWERS);
    !!co&i>=(MON_COMMANDER_FIRST_A)/i<=(MON_COMMANDER_LAST_D);

    !!FU(WOG_112_InvertSpeed):Pi;
    !!MAi&y32:Xd|(MON_FLAG_ATTACKS_TWICE);
    !!MAi&y33:Xd|(MON_FLAG_WIDE_ATTACK);
  !!en;
!!en;

!!FU(WOG_101_CheckMapRule):P7; [check for rule 7]
!!UN&3:U17/-1/?y1; [count dwellings]
!!VRv600:S-1; [reset coordinate index]
!!VRy4:S140; // set y4 to boars
!!UN:P67/=1; // check if Neutral town is active (flag1)
!!VRy4&1:S112; // if yes set to Air Elementals instead of boars
!!DO701/1/y1/1&3:Py4; [add boars / Air Elementals to dwellings]

!!FU(WOG_101_CheckMapRule):P8; [check for rule 8]
!!DO702/0/155/1&3:P-1; [upgrade unowned heroes to 5th level]

!!FU(WOG_101_CheckMapRule):P14; [check for rule 14] - Capitol can be built in every town
!!UN&3:C4955234/(UNC_INT8)/?i^wog_124_patch^ C4955234/(UNC_INT8)/0;

!!FU(WOG_101_CheckMapRule):P20; [check for rule 20]
!!UN&3:U98/-1/?y1; [count towns: y1]
!!UN&3:U98/8/?y5; [count confluxes: y5]
!!VRv600:S-1; [reset coordinate index]
!!DO717/1/y1/1&3/y1>0/y5=0:P; [build grails in towns]

!!FU(WOG_101_CheckMapRule):P21; [check for rule 21]
!!UN&3:U98/-1/?y1; [Number of Towns on map: y1]
!!VRv1:S-1; [reset coordinate index]
!!DO26/1/y1/1&3/y1>0:P; [Place Warlord's Banners in front of towns]

!!UN:R7/0/0; [Show mouse cursor and enable changing]
!!UN:R5/0/0; [Restore default cursor]

** end of function


** function to announce a rule to human players if set

!?FU691;

!!FU(WOG_101_CheckMapRule):Px16; [check for rule x16]

!!VRz326:Sz101022;
!!VRz326&v600=1:Sz101023;
!!VRv600&3:S1;

!!IF&3/x16=1:M1/z101024;
!!IF&3/x16=2:M1/z101025;
!!IF&3/x16=3:M1/z101026;
!!IF&3/x16=4:M1/z101027;
!!IF&3/x16=5:M1/z101028;
!!IF&3/x16=6:M1/z101029;
!!IF&3/x16=7:M1/z101030;
!!IF&3/x16=8:M1/z101031;
!!IF&3/x16=9:M1/z101032;
!!IF&3/x16=10:M1/z101033;
!!IF&3/x16=11:M1/z101034;
!!IF&3/x16=12:M1/z101035;
!!IF&3/x16=13:M1/z101036;
!!IF&3/x16=14:M1/z101037;
!!IF&3/x16=15:M1/z101038;
!!IF&3/x16=16:M1/z101039;
!!IF&3/x16=17:M1/z101040;
!!IF&3/x16=18:M1/z101041;
!!IF&3/x16=19:M1/z101042;
!!UN&3/x16=20:U98/8/?y1; [count confluxes: y1]
!!IF&3/x16=20/y1=0:M1/z101043;
!!IF&3/x16=21:M1/z101052;


** end of function


!?FU(OnSetupBattlefield);
!!UN:P101/<5;
!!FU&-1:E; // exit, if map rules are not enabled

!!re i/(BATTLE_STACK_FIRST)/(BATTLE_STACK_LAST); // loop through all stacks (do work for monster-rules)
  !!FU(WOG_101_SetUpStack):Pi;
!!en;
** end of BF

!?FU(OnBattleStackObtainsTurn);         [needed for summoned creatures]
!#VA(stackSide:x) (stackInd:x);

!!UN:P101/<5;
!!FU&-1:E; // exit, if map rules are not enabled

!!FU(WOG_101_SetUpStack):Pi^battle_current_stack^;
** end of 77006

!?FU(WOG_101_SetUpStack);
!#VA(stack:x);

** function to make monster x1 lose flying but gain no-retaliation if it flew
** function to make monster x1 lose shooting but gain +50% hit points if it shot

!!BM(stack):T?(mon:y); // get creature type
!!FU&(mon)<0:E;           // exit, if there is no stack
!!FU&(mon)>=(MON_CATAPULT)/(mon)<=(MON_ARROW_TOWERS):E;  // exit, if it is a war machine
!!FU&(mon)>=(MON_COMMANDER_FIRST_A)/(mon)<=(MON_COMMANDER_LAST_D):E;  // exit, if it is a commander
!!FU|(mon)=(MON_NOT_USED_1)/(mon)=(MON_NOT_USED_2)/(mon)=(MON_NOT_USED_3)/(mon)=(MON_NOT_USED_4):E;  // exit, if it is a dummy-catapult (from the War Machine Scriptes)

!!FU(WOG_101_CheckMapRule):P1; [check for rule 1 fliers lose flying but can't be retaliated against]

!!if&3; if enabled
  !!BM(stack):Fd~(MON_FLAG_FLYER); [lose flying]
  !!BM(stack):Fd|(MON_FLAG_NO_RETALIATION); [can't be retaliated against]
!!en; // end if

!!FU(WOG_101_CheckMapRule):P19; [check for rule 19 - shooters lose shooting but gain +50% hit points]

!!if&3; if enabled
  !!BM(stack):F?(flags:y);
  !!VR(canShoot:y):S(flags) &(MON_FLAG_SHOOTER); [just look at shooting bit]
  
  !!if&(canShoot);
    !!BM(stack):Fd~(MON_FLAG_SHOOTER); [lose shooting]

    !!BM(stack):H?(health:y);
    !!VR(health):*3 :2; [+50% health if creature shot]
    !!BM(stack):H(health);
  !!en;
!!en; // end if

** end of function


** function to invert the speed of monster

!?FU(WOG_112_InvertSpeed);
!#VA(mon:x);

!!MA:S(mon)/?(speed:y); [get speed]

!!if&(speed)<=1;
  !!VR(newSpeed:y):S25;
!!el&(speed)=2;
  !!VR(newSpeed):S21;
!!el&(speed)=3;
  !!VR(newSpeed):S18;
!!el&(speed)=4;
  !!VR(newSpeed):S15;
!!el&(speed)=5;
  !!VR(newSpeed):S13;
!!el&(speed)=6;
  !!VR(newSpeed):S11;
!!el&(speed)=7;
  !!VR(newSpeed):S9;
!!el&(speed)=8;
  !!VR(newSpeed):S7;
!!el&(speed)=9;
  !!VR(newSpeed):S6;
!!el&(speed)>=10/(speed)<=12;
  !!VR(newSpeed):S5;
!!el&(speed)>=13/(speed)<=17;
  !!VR(newSpeed):S4;
!!el;
  !!VR(newSpeed):S3;
!!en;

!!MA:S(mon)/(newSpeed); [set speed]

** end of function


** function to make monster x16 cost half as much

!?FU694;

!!MA:Cx16/6/?y1; [get gold cost]
!!VRy1::2; [half price]
!!MA&x16<145|x16>149:Cx16/6/y1; [save gold cost, except for war machines]

** end of function


** function to make monster x16 cost twice as much

!?FU695;

!!MA:Cx16/6/?y1; [get gold cost]
!!VRy1:*2; [double price]
!!VRy2:Sy1 %10; [check low digit of price]
!!VRy1&y2=4:+1; [turn 4's to 5's]
!!MA&x16<145|x16>149:Cx16/6/y1; [save gold cost, except for war machines]

** end of function


** function to place magic plains by current player's hero

!?FU696;

!!OW:C?y1; [get current player]
!!HEx16:O?y2; [get hero's owner]
!!HEx16:P?y3/?y4/?y5; [get hero x/y/l]
!!VRy3:+2;
!!VRy4:+1; [place so that hero is kind of in the middle]
!!TRy3/y4/y5:P?y6; [get y6=0 if red square]
!!TRy3/y4/y5:E?y7; [get y7=0 if yellow square]
!!TRy3/y4/y5:T?y8/d/d/d/d/d/d/d; [get terrain in y8, 8 = water]
!!UN&y1=y2/y5=0/y6<>0/y7<>0/y8<>8:Iy3/y4/y5/46/0; [place magic plains]

 [If Passable Terrain script active, make squares passable again]
!!UN:P63/?y9; [Check if Passable Terrain script is enabled: y9]
!!FU:E;       [Exit if Passable Terrain isn't enabled]
!!UN:X?y10/?y11;          [Map size: y10]

!!VRy12:Sy4 -3;  [Starting y-coordinate for loop (Magic Plains/Cursed Land): y12]
!!VRy13:Sy4 +0;  [Ending y-coordinate for loop (Magic Plains/Cursed Land): y13]
!!VRy12&y12<0:S0;         [No y-coordinate below 0: y12]
!!VRy13&y13>=y10:Sy10 -1; [No y-coordinate above map size: y13]

!!DO8/y12/y13/1:P0/y3/y5; [Make trees, mountains etc. passable again]

** end of function


** function to make hero's upgraded 7th level troops into 8th level

!?FU697;

!!OW:C?y1; [get current player]
!!HEx16:O?y2; [get hero's owner]
!!DO708/0/6/1&y1=y2:Px16; [check each slot]

** end of function


** function to make monster x16 attack/shoot twice

!?FU698;

!!MA:Xx16/?y1; [get flags]
!!VRy1:|32768; [set attack twice bit]
!!MA&x16<145|x16>149:Xx16/y1; [save flags, except for war machines]

** end of function


** function to make hero x16's monster stacks grow by 4%, to 10000

!?FU699;

!!OW:C?y1; [get current player]
!!HEx16:O?y2; [get hero's owner]
!!DO700/0/6/1&y1=y2:Px16; [handle each slot if it's this hero's player's turn]

** end of function


** function to make slot x16 of hero x1's army grow by 4%, to 10000

!?FU700;

!!HEx1:C0/x16/?y1/?y2; [get y1 type y2 qty]
!!VRy3:Sy2 *104 :100; [add 4%]
!!VRy3&y3>10000/y2<10000:S10000; [limit to 10000]
!!HEx1&y2<10000:C0/x16/y1/y3; [store new qty]

** end of function


** function to add boars to dwelling number x16 if not first level

!?FU701;
** x1 = new type (140 = boars, 112 = Air Elemental)
!!UN:U17/-1/-1/600; [get dwelling location into v600-v602]
!!DW600:M0/?y1/?y2; [get y1 type y2 qty in slot 0]
!!MA:Ly1/?y3; // get monster Level
!!DW600&y3>0:M1/x1/12; [12 boars / Air Elementals in slot 1]

** end of function


** function to make hero x16 at least 5th level if it has owner x1

!?FU702;

!!HEx16:O?y1; [get hero's owner]
!!HEx16&y1=x1:Ed5000; [give 5000 experience]

** end of function


** function to double hero x16's movement

!?FU703;

!!OW:H-1/3/x16; [store hero number of hero x16 in v3]
!!HEv3:W?y1; [get hero's movement: y1]
!!VRy1:*2; [double hero's movement: y1]
!!HEv3:Wy1 Gy1; [set hero's new movement plus initial hero movement values]

** end of function


** artifact trigger

!$OB(OBJ_ARTIFACT);
!!FU(WOG_101_CheckMapRule):P9; [check for rule 9 (pick up double artifacts)]
!!FU&-3:E;

!!HE-1:O>-1; // check if hero has owner (hero could lost the battle vs guardians of the artifact)
!!FU&-1:E;

!!PO998:N?y5; // get custom number of the artifact-field
!!FU&y5=0:E; // exit if =0 (usually an artifact left by the player - it should not be doubled)

!!OB998:U?y1; [get artifact number]
!!FU&y1<7:E; // exit if lower than Centaur's Axe

!!UN:P904/1; // disable WOG error messages (because of bug with the AR receiver)
!!AR998:G0/?y98/?y99;
!!AR998&y99<1:G1/?y98/?y99;
!!AR998&y99<1:G2/?y98/?y99;
!!AR998&y99<1:G3/?y98/?y99;
!!AR998&y99<1:G4/?y98/?y99;
!!AR998&y99<1:G5/?y98/?y99;
!!AR998&y99<1:G6/?y98/?y99; // check for guardians in slots 1-7
!!FU&y99>0:E; // exit, if artifact is still guarded (hero chose not to fight)

!!UN:P904/0; // enable  WOG error messages again

!!UN:Ay1/=0;
!!FU&-1:E; // exit, if not enabled

!!HE-1:A2/y1/?y2/?y3; [get y2 number carried y3 number equipped]
!!HE-1&y2<2:Ay1; [give an extra copy if they don't already have one (<2, because the found artifact is given already to the hero in the after trigger]
!!UN:N0/-1/y1; [get name of artifact into z2]
!!IF&1000/y2<2:Q1/8/y1/1/z101044;

!!PO998&y5=15:N0; // set to 0 it was an "original" artifact (placed on the map by the map maker)

** end of artifact trigger

!?FU(OnEveryDay)&i^timerDay^=1/i^timerOnce^; // uses Timer, only once at day 1
!!UN:P119/=1;
!!FU&-1:E;  // check for double artifact rule, exit if disabled

!!VR(x:y):S-1;

; loop through all the artifacts on the map
!!re i;
  !!UN:U(OBJ_ARTIFACT)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  !!PO(x)/(y)/(z):N15; // set custom number for map field to 15 (used for double artifact rule)
!!en;



** hero movement trigger

!?HM-1;

!!FU(WOG_101_CheckMapRule):P10; [check for rule 10]
!!FU711&3:P; [handle replacing shroud]

** end of hero movement trigger


** function to let hero x16 revisit objects

!?FU704;

!!HEx16:O?y1; [get owner]
!!OW:C?y2; [get current player]
!!DO705/0/9/1&y1=y2:Px16; [mark learning stones through schools of war as unvisited]

** end of function


** function to let hero x1 revisit object x16

!?FU705;

!!HEx1:Vx16/0; [set hero to have not visited all objects of this type]

** end of function


** function to change a mine's produced resource

!?FU706;

!!UN:U53/-1/-1/600; [get mine location into v600-v602]
!!VRy1:S0 R6; [random 0-6]
!!MN600:Ry1/1; [set random resource produced]

** end of function


** hero level-up trigger

!?FU(OnHeroGainLevel);

!!FU(WOG_101_CheckMapRule):P16; [check for rule 16]
!!FU712&3:P; [give hero an artifact]

** end of hero level-up trigger


** function to convert a stack of upgraded 7th level to 8th level
** hero x1, slot x16

!?FU708;
!!HEx1:C0/x16/?y1/?y2; [get y1 type y2 qty]
!!FU&y1<0|y2<0/y2>3999:E;  [exit, if count >= 4000]
!!MA:Ly1/?y3;       [get mon lvl]
!!FU&y3<>6:E;       [exit, if not 7th level]
!!VRy1&y1=13:S150;  [archangel]
!!VRy1&y1=27:S151;  [gold dragon]
!!VRy1&y1=41:S152;  [titan]
!!VRy1&y1=55:S153;  [archdevil]
!!VRy1&y1=69:S154;  [ghost dragon]
!!VRy1&y1=83:S155;  [black dragon]
!!VRy1&y1=97:S156;  [ancient behemoth]
!!VRy1&y1=111:S157; [chaos hydra]
!!VRy1&y1=131:S158; [phoenix]
!!HEx1&y1>=150/y1<=158:C0/x16/y1/y2; [set creature type/qty]

** end of function


!?CO2; // is called after buying a Commander in a Town
!!FU(WOG_101_CheckMapRule):P8;
!!FU&-3:E; // exit, if 5th level rule is not on

!!CO(CURRENT_HERO):T?(commanderType:y);

!!if&(commanderType)=0;
  !!CO(CURRENT_HERO):X1/d7500; // give 5000 + 50% Experience to Paladins
!!el;
  !!CO(CURRENT_HERO):X1/d5000; // give 5000 Experience to other commanders
!!en;

** end of CO2


** function to set flag 3 if rule x1 has been chosen

!?FU(WOG_101_CheckMapRule);

!!IF:V3/0;
!!VRy1:S579; [variable # of rule]
!!VRy1&x1>10:S576;
!!VRx1&x1<=20:-1 %10 +550; [variable # of bit value]
!!VRx1&x1=21:S560; [variable # of rule 21's bit value]
!!VRy2:Svy1 &vx1; [get just our bit]
!!IF&y2>0:V3/1; [set flag 3 if our bit set]

** end of function


** function to handle replacing shroud for a hero

!?FU711;

!!HE-1:O?y1; [get owner]
!!OW:Iy1/?y2; [get AI 1 or human 0]
!!FU721&y2=0:Py1; [do a Cover Of Darkness for a non-teammate of a human player]

** end of function


** function to give hero an artifact based on experience

!?FU712;
!!HE(CURRENT_HERO):O?(owner:y) Ed/?(level:y); [get experience]

!!VR(level)::6 +1 F1/4;
!!VR(artLevel:y):S1 Sd<<(level);
!!UN:J6/(artLevel)/?(art:y);

!!HE(CURRENT_HERO):A4/(art); [give (equip) artifact]

!!if&(owner)<>(NO_OWNER);
  !!HE(CURRENT_HERO):B0/?z2; [get hero name]
  !!OW:I(owner)/?(isAi:y); [get AI 1 or human 0]
  !!IF&(isAi)<>(TRUE):Q2/(PIC_TYPE_ART)/(art)/(MSG_TYPE_MES)/z101048;
!!en;

** end of function


** Object triggers for Rogue fights

!?OB12/-1; [campfire]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB17/-1; [most creature dwellings]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB29/-1; [flotsam]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB32/-1; [garden of revelation]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB39/-1; [lean to]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB47/-1; [school of magic]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB51/-1; [mercenary camp]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB53/-1; [mine]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB55/-1; [mystical garden]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB57/-1; [obelisk]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB58/-1; [redwood observatory]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB60/-1; [pillar of fire]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB61/-1; [star axis]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB79/-1; [resource]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB82/-1; [sea chest]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB88/-1; [shrine of magic incantation]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB94/-1; [stables]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB100/-1; [learning stone]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB101/-1; [treasure chest]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB102/-1; [tree of knowledge]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB104/-1; [university]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB105/-1; [wagon]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB107/-1; [school of war]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB109/-1; [water wheel]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB112/-1; [windmill]
!!FU713:P; [handle generating roving bands of Rogues]

!?OB113/-1; [witch hut]
!!FU713:P; [handle generating roving bands of Rogues]

** end of set of object triggers


** function to generate roving bands of Rogues

!?FU713&i^timerDay^<>i^wog_127_lastRogueDate_%i(timerOwner)^;
; Check if the option is enabled (use only this way as the option can be enabled at the map start)
!!FU(WOG_101_CheckMapRule):P17;
!!FU&-3:E;

!!if&i^timerIsHuman^;
  !!VR(random:y):S0 R15; [1 in 16 chance for human]
!!el;
  !!VR(random):S0 R63; [1 in 64 chance for AI]
!!en;

!!IF:V875/0;

!!if&(random)=0; [continue if odds are met and rule active and no other Rogues today]
  ; Check if the terrain is water
  !!TR998:T?(terrain:y);

  ; Land - Rogues / Water - Water Elementals
  !!HE(CURRENT_HERO):N?(hero:y); [get hero number]
  !!HE(hero):B0/?z326; [get hero name]

  !!if&i^timerIsHuman^;
    !!if&(terrain)<>8;
      !!VR(mon:y):S(MON_ROGUE);
      !!IF:Q1/21/143/1^%Z101049^;
    !!el;
      !!VR(mon):S(MON_WATER_ELEMENTAL);
      !!IF:Q1/21/115/1^%Z101056^;
    !!en;
  !!en;

  !!VR(rogueNum:y):Si^timerWeek^ *10; [10 Rogues per elapsed week]


  !!HE(hero):Ed/?(lv:y)/1; [get hero level]
  !!VR(rogueNum):S(lv) *10 +(rogueNum); [#Rogues = 10*week + 10*level]

  !!IF:V875/1;           (For mithril and chest scripts)

  !!HE(hero):Tv998/v999/v1000/(mon)/(rogueNum); [provoke Rogue battle]
  !!HE(hero:y):O?(owner:y); [get hero owner]

  !!if&(owner)<>(NO_OWNER);
    !!if&(terrain)<>8;
      !!VR(gold:y):S(rogueNum) *10 +300; [10 gold per Rogue + 300]
      !!OW:R(owner)/(RES_GOLD)/d(gold); [give gold if hero lived]
      !!IF&i^timerIsHuman^:Q2/(PIC_TYPE_RES_GOLD)/(gold)/(MSG_TYPE_MES)/z101050;
    !!en;

    !!IF:V875/0;    (For mithril and chest scripts)
  !!en;

  !!VRi^wog_127_lastRogueDate_%i(timerOwner)^:Si^timerDay^; [set day of last Rogue fight]
!!en;

** end of function


** function to build a grail in town # x16

!?FU717;

!!UN:U98/-1/-1/600; [get town location into v600-v602]
!!CA600:B1/26; [build grail]
!!CA600:T?y1; [get town type]
!!CA600:O?y2; [get town owner]
!!UN&y1=2:Sv573/v573/0/y2/v574; [remove entire shroud, surface, for tower's skyship]
!!UN:X?y10/?y11;
!!UN&y1=2/y11=1:Sv573/v573/1/y2/v574; [remove entire shroud, underground]

** end of function


** function to add rule x16 to the papyrus if active

!?FU718;

!!FU(WOG_101_CheckMapRule):Px16; [check for rule x16]
!!VRy1:S331 +x16; [z variable for this rule]
!!VRy1&x16>20:S659 +x16; [z variable for rule 21+]
!!VRy2:S0; [initialize y2 to 0: y2]
!!UN&x16=20:U98/8/?y2; [count confluxes if rule 20: y2]
!!QW&3/y2=0:Ay1/-2/-2/y1; [set papyrus message]

** end of function


** function to replace shroud for player x1 via Cover Of Darkness for their enemy

!?FU721;

!!VRy1:S564 +x1; [variable # of non-teammate player]
!!UN:Hv573/v573/0/vy1/v574; [replace entire shroud, surface]
!!UN&v575=1:Hv573/v573/1/vy1/v574; [replace entire shroud, underground]

** end of function


** function to set rule bit for numbered rule x1

!?FU722;

!!VRy1:S579; [variable # of bit]
!!VRy1&x1>10:S576;
!!VRx1&x1<21:-1 %10 +550; [variable # of bit value]
!!VRx1&x1=21:S560; [Warlord's Banner]
!!VRvy1:|vx1; [set bit]

** end of function


** functions to add map rules selected in WoGify options dialogue

!?FU723;

!!UN:Px16/?y1;      [Check if each map rule is enabled (111-120)
!!VRy2:Sx16 -111;   [Get loop number]
!!VRy3&y1=1:S550 +y2;  [Get corresponding variable with bit number]
!!VRv579&y1=1:+vy3;  [If it's enabled, add bit number to v579]

!?FU724;

!!UN:Px16/?y1;      [Check if each map rule is enabled (121-130)
!!UN&x16=131:P239/?y1; [Check if Warlord's Banner (rule 21) is enabled]
!!VRy2:Sx16 -121;   [Get loop number]
!!VRy3&y1=1:S550 +y2;  [Get corresponding variable with bit number]
!!VRv576&y1=1:+vy3;  [If it's enabled, add bit number to v576]

** end of functions

** functions choose two random rules, calling themselves again if a rule wasn't selected
** If it can't find two unique selected rules after 100 loops, use only 1 or none.

!?FU725;

!!VRv3:S1 Rx1; [Random rule]
!!VRv3&x1=19/v3>=20:+1; [skip conflux]
!!VRy1:Sv3 +110; [Convert to ERM number]
!!VRy1&v3=21:S239; [Warlord's Banners ERM Number]
!!UN:Py1/?y2; [See if it's selected in Wogify options]
!!VRv3&y2=0:S0; [set no rule found if it wasn't a selected rule]
!!VRx16&y2=1:S101; [exit loop if a selected rule is found]

!?FU726;

!!VRv4:S1 Rx1; [Random rule]
!!VRv4&x1=19/v4>=20:+1; [skip conflux]
!!VRy1:Sv4 +110; [Convert to ERM number]
!!VRy1&v4=21:S239; [Warlord's Banners ERM Number]
!!UN&v3<>v4:Py1/?y2; [See if it's selected in Wogify options]
!!VRv4&y2=0:S0; [set no rule found if it wasn't a selected rule]
!!VRx16&y2=1/v3<>v4:S101; [exit loop if a unique selected rule is found]

** end of functions


 [Put Warlord's Banners in front of Towns]
!?FU26;
!!UN:U98/-1/-1/1; [Store Town Coordinates in v1/v2/v3]
!!CA1:T?y2 O?y3; [Town Type: y2, Owner: y3]
!!IF:V1/0 V2/0; [Set Flags 1 and 2 to False]
!!VRy4:Sv1;    [Copy x coordinate to y4]
!!VRy5:Sv2 +1; [Copy y+1 coordinate to y5]
!!UN:X?y6/?y7; [Size of map: y6]
!!FU&y5>=y6:E; [Exit Function if Y coordinate will be off the bottom of the map]
!!UN:Ey4/y5/v3; [Check space directly in front of Town: Flag 1=True if blocked]
!!VRy4&1:Sv1 -1; [X coordinate 1 to the left of entrance: y4]
!!IF&y4<0/1:V2/1; [Set Flag 2 to True if X coordinate will be off the map to the left]
!!UN&1/-2:Ey4/y5/v3; [Check space to left in front of Town: Flag 1=True if blocked]
!!VRy4&1:Sv1 +1; [X coordinate 1 to the right of entrance: y4]
!!IF:V2/0; [Reset Flag 2 to False]
!!IF&y4>=y6/1:V2/1; [Set Flag 2 to True if X coordinate will be off the map to the right]
!!UN&1/-2:Ey4/y5/v3; [Check space to right in front of Town: Flag 1=True if blocked]
!!FU|1/2:E; [Exit if all spaces blocked or off the map]
!!UN:Iy4/y5/v3/5/156/0; [Place Warlord's Banner, no redraw]
!!UN:J2/?y9; [Player Difficulty level (0..4): y9]
!!VRy8&y9<=2:Sy2 +1; [Add 1 to town type (y2) for Easy/Normal/Hard levels: y8]
!!VRy10&y9=0:Sy2 -2; [Upgraded level 6 for Easy difficulty: y10]
!!VRy10&y9=1:Sy2 -1; [Non-upgraded level 7 for Normal difficulty: y10]
!!VRy10&y9=2:Sy2;    [Upgraded level 7 for Hard difficulty: y10]
!!VRy8&y9<=2:*13 +y10; [Level 6 or 7 Guardian (for Easy/Normal/Hard difficulty): y8]
!!VRy8&y9=0/y2=8:S121; [Set Magic Elemental for Conflux Town (for Easy difficulty): y8]
!!VRy8&y9=1/y2=8:S130; [Set Firebird for Conflux Town (for Normal difficulty): y8]
!!VRy8&y9=2/y2=8:S131; [Set Phoenix for Conflux Town (for Hard difficulty): y8]
!!VRy8&y9>=3:S150 +y2; [Level 8 Guardian (for Expert/Impossible difficulty): y8]
!!ARy4/y5/v3&y3>=0:X0 G0/y8/0; [If Town is owned, set 0 guardians and don't turn them on]
!!POy4/y5/v3&y3>=0:Oy3; [Set PO:O to town owner (y3)]
!!FU&y3>=0:E; [Exit if Town is owned: Banner is unguarded until month 2]
!!UN&y8>=0:N3/-1/y8/0; [Name of single monster: z-1]
!!ARy4/y5/v3:X1 G0/y8/1 M1/z101053; [Set 1 Guardian with message]

** end of function

 [Weekly Timer, only activates once (for first colour)]
!?FU(OnEveryDay)&i^timerOnce^/i^timerWeekday^=1/i^timerDay^>7;
!!FU(WOG_101_CheckMapRule):P21; [check for rule 21]
!!FU&-3:E; [Exit if rule not enabled]

!!UN:U5/156/?y10; [Number of Warlord's Banners on map: y10]
!!FU&y10<1:E; [Exit if no Banners on map]
!!VRy11:Sc0 -1; [Current day -1: y11]
!!VRy1:Sy11 :7 +1; [Current week: y1]
!!VRy22:Sy1 :2 *2; [Check if it's every 2rd week: y22]
!!VRy2&y22=y1:S1; [Set y2 to 1 every 2nd (even) week: y2]
!!VRy33:Sy1 :3 *3; [Check if it's every 3rd week: y33]
!!VRy3&y33=y1:S1; [Set y3 to 1 every 3rd week: y3]
!!VRy44:Sy1 :4 *4; [Check if it's every 4th week: y44]
!!VRy4&y44=y1:S1; [Set y4 to 1 every 4th week: y4]
!!VRy12:Sy1 -1; [Current week -1: y12]
!!VRy55:Sy12 :4 *4; [Check if it's the 1st of every month: y55]
!!VRy5&y55=y1:S1; [Set y5 to 1 at the start of every month: y5]
!!UN:J2/?y6; [Player Difficulty level: y6]
!!VRy7&y6=0/y5=1:S1; [Set y7 to 1 for Easy if start of a month: y7]
!!VRy7&y6=1/y5=1:S1; [Set y7 to 1 for Normal if start of a month: y7]
!!VRy7&y6=2/y2=1:S1; [Set y7 to 1 for Hard every 2 weeks: y7]
!!VRy7&y6=3/y5=1:S1; [Set y7 to 1 for Expert if start of a month: y7]
!!VRy7&y6=4/y2=1:S1; [Set y7 to 1 for Impossible every 2 weeks: y7]
!!FU&y7<>1:E; [Exit if not a banner guard increase day]
!!VRv1:S-1; [reset coordinate index]
!!DO28/1/y10/1&y10>0:P; [Loop through all banners]

** end of timer

 [Add 1 to Banner Guardians on day 1 of each month]
!?FU28;
!!UN:U5/156/-1/1; [Store Banner Coordinates in v1/v2/v3]
!!PO1:O?y2; [Read PO:N for Warlord's Banner: y2]
!!FU&y2=-2:E; [Exit if not a Banner in front of a town. Check is not reliable!]
!!OB1:C?y10;  [y10 - object config]
!!FU&y10>=0:E; [Exit if 31-st bit is zero = positive value = no config set for artifact]
!!ARv1/v2/v3:G0/?y3/?y1; [Number of guards (y1), Type (y3)]
!!VRy1:+1; [Add 1 to number of guards: y1]
!!ARv1/v2/v3:X1 G0/d/y1; [Enable guards and set number of guards to y1]
!!UN&y3>=0/y1=1:N3/-1/y3/0; [Name of single monster: z-1]
!!UN&y3>=0/y1>1:N3/-1/y3/1; [Name of plural monsters: z-1]
!!ARv1/v2/v3&y1=1:M1/z101054; [Update message (if only 1 guard)]

!!ARv1/v2/v3&y1>1:M1/z101055; [Update message (if more than 1 guard)]

** end of function

; Capitol can be built in every town by Archer30 (replaces Heroes get 9th-10th skills)
!?FU(OnStartOrLoad);                    [Note: The start game part is included in FU690. Here it doesn't work]
!!FU(WOG_101_CheckMapRule):P14;
!!UN&3:C4955234/(UNC_INT8)/?i^wog_124_patch^ C4955234/(UNC_INT8)/0;

!?FU(OnGameLeave);
!!FU(WOG_101_CheckMapRule):P14;
!!UN&3:C4955234/(UNC_INT8)/i^wog_124_patch^;
