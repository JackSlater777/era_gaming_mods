ZVSE2

** Emerald Tower Script Version 1.0 Created by Timothy Pulver
** with thanks to Steve Hanna for extra naming ideas
** Requires WoG version 3.58 or later using ERM version 2.7 or later.
** WoGify Name: script44.erm
** Updated: September 24, 2004, 2004
** Updated: Feb 2022 by Archer30

** This script makes all golden-green roofed towers in the game (object type 63,
** subtype 65) into Emerald Towers where the Wizard who dwells there will
** improve any creature type in your army for a price. The price is a lot of
** resources of a specific type, depending on the improvement. In addition,
** one of the creatures of the type being improved must also be left for the
** Wizard.

** The improvement number is usually a percentage of the existing score. For
** example, 50% growth bonus, or 25% health bonus. In addition to standard
** stat improvements, new special abilities may be added. Special abilities
** all cost mithril.

** Each Emerald Tower may only be visited once per day. A maximum of 12
** types of creatures may be improved in any game, but each creature type
** may have many improvements made to it. A creature cannot be improved
** during a "Week of" that creature type, if the "Week of Monsters" script
** is active.

** The AI can also use the Emerald Tower but not quite the same way that
** a human player can. Instead, each AI player may get one free random
** upgrade for the AI's most valuable stack when an AI visits the tower.
** If the ability can't be granted for any reason, no bonus is given the AI
** for that particular visit.

------------------------------------------------------------------------

Permanent Variables: z818-z841, v1241-v1252, v1270-v1271
Temporary Variables: v1-v7, v360-v369, z1-z9, z480-z490
Temporary Flags: 1-5
Functions: Only named functions
Dialogues: 3

-----------------------------------------------------------------------


// Hint for mouse hovering
!?FU(OnAdvMapTileHint);
!#VA(x:x) (y:x) (z:x) (objType:x) (objSubtype:x);

!!FU(WOG_ShowNewWoGObjectInfo):P(WOG_OPT_EMERALD_TOWER)/(OBJ_OPT_EMERALD_TOWER)/0/(x)/(y)/(z);

// Right-clicking dialogue
!?FU(OnAdventureMapRightMouseClick);
!!FU(WOG_ShowNewWoGObjectInfo):P(WOG_OPT_EMERALD_TOWER)/(OBJ_OPT_EMERALD_TOWER)/1;

-----------------------------------------------------------------------

 [Timer resets the Emerald Towers' non-visited status each month]

!?FU(OnEveryDay)&i^timerMonthDay^=1/i^timerDay^>1/i^timerOnce^;
!!FU(WOG_ResetNewWoGObject):P(WOG_OPT_EMERALD_TOWER)/(OBJ_OPT_EMERALD_TOWER);

-----------------------------------------------------------------------

 [Tower with turret is trigger]

!?OB(OBJ_NEW_WOG_OBJECTS)/(OBJ_OPT_EMERALD_TOWER);
!!UN:P(WOG_OPT_EMERALD_TOWER)/?y-1; [Check if script is enabled: y-1]
!!FU&y-1<>1:E; [Exit if script isn't enabled]

 [Fix AI behaviours]
!!if&-(ERM_FLAG_IS_HUMAN);
  !!OB998:S;                              [disable pyramid feature]
  !!PM998:V(FALSE);
!!en;

!!HE(CURRENT_HERO):O?y30;
!!PM998:Py30/(TRUE);

 [Initialize Flag 5 to False]
!!IF:V5/0;

 [Store current player in v2 and convert to player bit number]
!!OW:C?y31;
!!VRv2:S1 Sd<<y31;

 [Check if current AI player has already gotten an improved creature]
 [v3=v2 if AI has already gotten an improved creature]
!!VRv3:Sv1271 &v2;

!!VRv1270:S0; [Initialize bonus bought variable to 0]
!!PO998:N?v1; [Check if tower has been visited this month: v1=1 if visited]

!!IF&v1=1/1000:M1/z144002;

 [Exit trigger if Tower has already been visited this]
 [month or AI has already gotten an improved creature]
!!FU|v1=1/v2=v3:E;

!!IF&1000:Q2/5/7/2/z144003;
!!IF&-1000:V2/1; [Set flag 2 to true for AI]

!!OW&2:R-1/5/?y-2; [Player's current gem total: y-2]
!!VRz9:S^^;
!!VRz9&2/y-2<7:Sz144004;
!!IF&y-2<7/1000:V2/0; [Set flag 2 to false if human player doesn't have at least 7 gems]

!!OW&2/1000:R-1/(RES_GEMS)/d-7; [Remove seven gems from human player's total]
!!UN&2/1000:R2;                         [refresh after gems are taken - Archer]
!!VRz1:Sz144005;
!!VRz-1:Sz144006;
!!VRz2:S^..\data\s\pic\emerald.bmp^;
!!VRz3:Sz144007;
!!UN:J8/2/2; [Check if image file exists: Flag 1=True if yes]
!!IF&1000/1:D3/1/0/0/2/0/0/0/3/0/0/0/0/0/0/0;
!!IF:F3/0/0/0/0/0; [Remove cancel button]

!!if&2/1000;
  !!IF&1:E1/3; [Display dialogue box]
  !!IF&-1:M^%Z-1^; [Display alternative standard dialogue if image file is missing]
!!en;

!!FU(WOG_44_ChooseSpeciesMain)&2:P; [Choose species to improve]

!!IF&-2/1000:M1/z144008;

-----------------------------------------------------------------------

!?FU(WOG_44_ChooseSpeciesMain);

  [Build a listing of different creature types in hero's army (v360-v366), v1=total number]
  [Store creature names in z480-z486 - skip this if AI]
!!FU(WOG_44_StoreUniqueCreatureID)&1000:P;

!!VRz1:Sz144009;
!!VRz2:Sz144010;
!!VRv367:S0; [Initialize v367 to 0]
!!IF&v1>0/1000:G1/367/128/1/480/481/482/483/484/485/486/2/0/0/0/0;

!!IF&v1=0/1000:M1/z144011;

 [Determine which box was checked - store result (creature number) in v2]
!!VRv2:S0;
!!VRv2&v367=1:Sv360;
!!VRv2&v367=2:Sv361;
!!VRv2&v367=4:Sv362;
!!VRv2&v367=8:Sv363;
!!VRv2&v367=16:Sv364;
!!VRv2&v367=32:Sv365;
!!VRv2&v367=64:Sv366;
!!VRv2&v367=128:S-1;

!!DO(WOG_44_AIChooseCreatureBonus)/0/6/1&-1000:P; [Choose creature for AI to buy a bonus for: v2]

!!IF:V4/1; [Set flag 4 to true]
!!IF&v2=-1/1000:Q4/z144012;

 [Check for "Week of Monsters" script activated and if it's the monster of the week.]
 [Flag 56 will be true if script is active, v170 is monster of the week]
!!if&v2>=0;
  !!UN:N3/3/v2/0; [Store monster name (singular) in z3]
  !!UN:N3/4/v2/1; [Store monster name (plural) in z4]
!!en;

!!if&56/v170>=0/v170=v2;
  !!IF&1000:Q4/21/v2/1/z144013;

  !!VRv2:S-1; [Set v2 to -1 if it's the monster of the week]
!!en;

  [Check if this is a new creature (if it is and if i^wog_44_speciesCounter^>12, set v2 to -1)]
  [If this is a new creature, set v6 to -1, if not new, set v6 to loop index number]
!!VRv6:S-1;

!!if&v2>=0;
  !!DO(WOG_44_IsNewMonsterSpecies)/1/i^wog_44_speciesCounter^/1&i^wog_44_speciesCounter^>0:P;
  !!IF&i^wog_44_speciesCounter^>=12/v6<0/1000:Q4/z144014;
!!en;

!!VRv2&i^wog_44_speciesCounter^>=12/v6<0:S-1; [Set v2 to -1 if i^wog_44_speciesCounter^ = 12 and creature isn't new]

!!FU(WOG_44_ChooseImprovementType)&v2>=0:P; [Display improvement options]

!!if&1000;
  !!FU(WOG_44_ChooseSpeciesMain)&v2=-1/-4:P; [Choose another species to improve]

   [If player didn't buy a bonus]
  !!if&4/-5;
    !!if&v1270=0;
      !!IF:Q1/5/6/1/z144015;
      !!OW:R-1/(RES_GEMS)/d6; [Give back 6 gems if nothing bought]
      !!IF:V5/1; [Set Flag 5 to True]

     [If player bought "24 shots" and nothing else]
    !!el&v1270=100;
      !!IF:Q1/5/6/1/z144016;
      !!OW:R-1/(RES_GEMS)/d6; [Give back 6 gems if only "24 shots" bought]
      !!IF:V5/1; [Set Flag 5 to True]
    !!en;
  !!en;
!!en;

-----------------------------------------------------------------------

 [Store unique creature numbers in v360-v366 (-1 equals no creature)]
 [v1=number of unique creature numbers in hero's army]

!?FU(WOG_44_StoreUniqueCreatureID);

!!VRv1:S0;
!!VRv360:C-1/-1/-1/-1/-1/-1/-1;
!!VRz480:S^^;
!!VRz481:S^^;
!!VRz482:S^^;
!!VRz483:S^^;
!!VRz484:S^^;
!!VRz485:S^^;
!!VRz486:S^^;

!!HE-1:C0/0/?y1/?y2;   [Slot 0]
!!VRv1&y2>0:+1;
!!VRv360&y2>0:Sy1;
!!UN&y2>0:N3/480/y1/1;

!!HE-1:C0/1/?y1/?y2;   [Slot 1]
!!VRy4:S0;
!!VRy4&v1=1/y1=v360:S99;
!!VRv1&y2>0/y4<>99:+1;
!!VRy3&y2>0/y4<>99:S359 +v1;
!!VRy5&y2>0/y4<>99:S479 +v1;
!!UN&y2>0/y4<>99:N3/y5/y1/1;
!!VRvy3&y2>0/y4<>99:Sy1;

!!HE-1:C0/2/?y1/?y2;   [Slot 2]
!!VRy4:S0;
!!VRy4&v1>=1/y1=v360:S99;
!!VRy4&v1=2/y1=v361:S99;
!!VRv1&y2>0/y4<>99:+1;
!!VRy3&y2>0/y4<>99:S359 +v1;
!!VRy5&y2>0/y4<>99:S479 +v1;
!!UN&y2>0/y4<>99:N3/y5/y1/1;
!!VRvy3&y2>0/y4<>99:Sy1;

!!HE-1:C0/3/?y1/?y2;   [Slot 3]
!!VRy4:S0;
!!VRy4&v1>=1/y1=v360:S99;
!!VRy4&v1>=2/y1=v361:S99;
!!VRy4&v1=3/y1=v362:S99;
!!VRv1&y2>0/y4<>99:+1;
!!VRy3&y2>0/y4<>99:S359 +v1;
!!VRy5&y2>0/y4<>99:S479 +v1;
!!UN&y2>0/y4<>99:N3/y5/y1/1;
!!VRvy3&y2>0/y4<>99:Sy1;

!!HE-1:C0/4/?y1/?y2;   [Slot 4]
!!VRy4:S0;
!!VRy4&v1>=1/y1=v360:S99;
!!VRy4&v1>=2/y1=v361:S99;
!!VRy4&v1>=3/y1=v362:S99;
!!VRy4&v1=4/y1=v363:S99;
!!VRv1&y2>0/y4<>99:+1;
!!VRy3&y2>0/y4<>99:S359 +v1;
!!VRy5&y2>0/y4<>99:S479 +v1;
!!UN&y2>0/y4<>99:N3/y5/y1/1;
!!VRvy3&y2>0/y4<>99:Sy1;

!!HE-1:C0/5/?y1/?y2;   [Slot 5]
!!VRy4:S0;
!!VRy4&v1>=1/y1=v360:S99;
!!VRy4&v1>=2/y1=v361:S99;
!!VRy4&v1>=3/y1=v362:S99;
!!VRy4&v1>=4/y1=v363:S99;
!!VRy4&v1=5/y1=v364:S99;
!!VRv1&y2>0/y4<>99:+1;
!!VRy3&y2>0/y4<>99:S359 +v1;
!!VRy5&y2>0/y4<>99:S479 +v1;
!!UN&y2>0/y4<>99:N3/y5/y1/1;
!!VRvy3&y2>0/y4<>99:Sy1;

!!HE-1:C0/6/?y1/?y2;   [Slot 6]
!!VRy4:S0;
!!VRy4&v1>=1/y1=v360:S99;
!!VRy4&v1>=2/y1=v361:S99;
!!VRy4&v1>=3/y1=v362:S99;
!!VRy4&v1>=4/y1=v363:S99;
!!VRy4&v1>=5/y1=v364:S99;
!!VRy4&v1=6/y1=v365:S99;
!!VRv1&y2>0/y4<>99:+1;
!!VRy3&y2>0/y4<>99:S359 +v1;
!!VRy5&y2>0/y4<>99:S479 +v1;
!!UN&y2>0/y4<>99:N3/y5/y1/1;
!!VRvy3&y2>0/y4<>99:Sy1;

-----------------------------------------------------------------------

 [Choose the type of improvement]

!?FU(WOG_44_ChooseImprovementType);

!!UN:N3/3/v2/0;

!!VRy2:S5; [+5 Attack bonus: y2]

!!VRy3:S5; [+5 Defense bonus: y3]

!!MA:Ev2/?y1; [Calculate 25% Damage bonus: y4]
!!VRy4:Sy1 :4;
!!VRy4&y4=0:S1;

!!MA:Pv2/?y1; [Calculate 25% Health bonus: y5]
!!VRy5:Sy1 :4;
!!VRy5&y5=0:S1;

!!MA:Sv2/?y1; [Calculate 25% Speed bonus: y6]
!!VRy6:Sy1 :4;
!!VRy6&y6=0:S1;

!!MA:Gv2/?y1; [Calculate 50% Growth bonus: y7]
!!VRy7:Sy1 :2;
!!VRy7&y7=0:S1;

!!MA:Nv2/?y8; [Determine number of shots: y8]

; Calculate the price for increasing spells according to creature level and the number of current spells
!!MA:Bv2/?y10; [Determine number of spell castings: y10]
!!MA:Lv2/?y30;

!!if&y10>0/y10<=12;
  !!if&y30<=3;
    !!VRy15:S6 -y10 F2/5;               [level 4 or lower]
  !!el&y30=4;
    !!VRy15:S11 -y10 F5/10;             [level 5]
  !!el&y30=5;
    !!VRy15:S16 -y10 F10/15;            [level 6]
  !!el;
    !!VRy15:S21 -y10 F15/20;            [level 7]
  !!en;
!!el;
  !!VRy15:S0;
!!en;

!!VRz1:Sz144017;
!!VRz2:Sz144018;
!!VRz480:Sz144019;
!!VRz481:Sz144020;
!!VRz482:Sz144021;
!!VRz483:Sz144022;
!!VRz484:Sz144023;
!!VRz485:Sz144024;
!!VRz486:S^^; [Initialize shots text to null string: z486]
!!UN:P900/?y13; [Check if Stack Experience is enabled: y13=1 if yes]
!!EAv2:F0/?y16; [Check next empty line for creature: y16]
!!EAv2:F102/83/?y17; [Check if stack can gain Shooting ability from stack experience: y17]
!!VRy14&y16<>y17/y8<24/y13=1:S99; [Set y14 to 99 if creature can gain Shooting ability and <24 shots: y14]
!!VRz486&y8>0/y8<24/v2<>14/v2<>15|y14=99:Sz144025;
!!VRz487&y10>0/y15>0:Sz144026;
!!VRz487|y10<1/y10>12:S^^;
!!VRz488:Sz144027;

!!IF&1000:G1/368/512/1/480/481/482/483/484/485/486/487/488/2/0/0;

 [Determine which box was checked (bonus type) - store result in v3]
!!VRv3:S0;
!!VRv3&v368=1:S2;
!!VRv3&v368=2:S3;
!!VRv3&v368=4:S4;
!!VRv3&v368=8:S5;
!!VRv3&v368=16:S6;
!!VRv3&v368=32:S7;
!!VRv3&v368=64:S8;                      [special ability for AI]
!!VRv3&v368=128:S9;
!!VRv3&v368=256:S10;                    [special ability]
!!VRv3&v368=512:S-1;

!!if&-1000;
  !!VRv3:S2 R6; [For AI, set v3 to random number from 2..8]
  !!VRv3&v3=8:S10; [For AI, if v3=8, set it to 10]
!!en;

!!VRv5:S0;
!!FU(WOG_44_ChooseSpecialAbility)&v3=10:P; [Give choice of Special Bonus]

!!VRv4:S0;
!!FU(WOG_44_PayForBonus)&v3>1/1000:Py15;  [Ask player to pay for Bonus: v4=1 if player pays]
!!VRv4&-1000/v3<>10:S(TRUE); [Set v4 to 1 if AI and not selecting special abilities]

!!VRy9&v3>=2/v3<=7:Syv3; [Bonus amount: y9]

!!if&v4;
  !!FU(WOG_44_AddBonusByCreatureType):Py9; [Add bonus to creature type if player paid for it]

  !!VRi^wog_44_speciesCounter^&v6<0:+1; [Increment Changed Creature Counter if v4=1 and v6<0]
  !!FU(WOG_44_ChangeMonsterNames):Pv2/v3/v5; [Change species name to reflect ability/bonus just gained]

  !!PO998:N1; [Set hint text to "visited"]
  !!PM998:V(FALSE);
!!en;

!!if&1000;
  !!IF&v3=-1:Q4/z144028;

  !!if&-4;
    !!VRv3&v3>1/v4=0:S-1; [Set v3 to -1 if player can't pay but doesn't leave]
    !!FU(WOG_44_ChooseSpeciesMain)&v3=-1:P; [Choose another species to improve]
  !!en;
!!en;

!!OW:C?y11;        [Store current player in y11]
!!VRy12:S1 Sd<<y11;[y12 is bit number for current player]
!!VRv1271&-1000/v3>0:+y12; [Add AI player number to v1271 so it won't get another bonus]

-----------------------------------------------------------------------

 [Player pays for bonus in resources plus creatures]
 [v2=creature type, v3=bonus type]

!?FU(WOG_44_PayForBonus);

 [Determine resource type and cost: y1=resource type, y2=resource amount]
!!VRy1&v3=2:S3;  [Attack]
!!VRy2&v3=2:S15;
!!VRz1&v3=2:Sz144029;
!!VRy1&v3=3:S2;  [Defense]
!!VRy2&v3=3:S30;
!!VRz1&v3=3:Sz144030;
!!VRy1&v3=4:S5;  [Damage]
!!VRy2&v3=4:S20;
!!VRz1&v3=4:Sz144031;
!!VRy1&v3=5:S4;  [Health]
!!VRy2&v3=5:S20;
!!VRz1&v3=5:Sz144032;
!!VRy1&v3=6:S1;  [Speed]
!!VRy2&v3=6:S20;
!!VRz1&v3=6:Sz144033;
!!VRy1&v3=7:S0;  [Growth]
!!VRy2&v3=7:S75;
!!VRz1&v3=7:Sz144034;
!!VRy1&v3=8:S6;  [Shots]
!!VRy2&v3=8:S1000;
!!VRz1&v3=8:Sz144035;
!!VRy1&v3=9:S7;  [Spells]
!!VRy2&v3=9:Sx1;
!!VRz1&v3=9:Sz144036;
!!VRy1&v3=10:S7;  [Special]
!!VRy2&v3=10/v5=1:S20;  [Flying]
!!VRy2&v3=10/v5=2:S10;  [Extended Attack]
!!VRy2&v3=10/v5=3:S10;  [Undead]
!!VRy2&v3=10/v5=4:S5;  [No Morale]
!!VRy2&v3=10/v5=5:S25;  [Two Attacks]
!!VRy2&v3=10/v5=6:S20;  [Attack All Adjacent]
!!VRy2&v3=10/v5=7:S15;  [No Retaliation]
!!VRy2&v3=10/v5=8:S5;  [Immune to Mind Spells]
!!VRy2&v3=10/v5=9:S10;  [Immune to Fire Spells]
!!VRy2&v3=10/v5=10:S10; [No Close Combat Penalty]
!!VRz1&v3=10:Sz144036;

!!IF:V4/1; [Set flag 4 to true]
!!OW:R(CURRENT_PLAYER)/y1/?y3; [Check if player can afford resource cost: y3=player's amount of resource]

!!IF&y2>y3/1000:Q4/y1/y2/(MSG_TYPE_QUESTION)/z144037;

 [Calculate number of creatures that must be left: y7]
!!MA:Gv2/?y6; [Growth of creature: y6]
!!VRy10:Sy6 :2; [50% of growth (rounded down): y10]
!!VRy7:Sy6 +y10; [150% of growth (rounded down): y7]

!!if&y7=1;
  !!VRz8:Sz3; [One]
  !!VRz9:Sz144038; [One]
!!el;
  !!VRz8:Sz4; [More than one]
  !!VRz9:S^^; [More than one]
!!en;

!!IF:V3/0;
!!VRy5:S65536 *y7; [Set number text for creature picture]
!!VRy5:+v2; [Set number text for creature picture]

!!if&y3>=y2;
  !!IF&1000:Q3/(PIC_TYPE_MONSTER)/y5/(MSG_TYPE_QUESTION)/z144039;

  !!VRv3&-3:S-1; [If the player doesn't agree, set v3 to -1]
!!en;

!!if&3;
  !!VRv7:S0;
  !!DO(WOG_44_CheckIfHeroHasEnoughCreature)/0/6/1:P; [See if hero has enough creatures of the type to be enchanted]
  !!UN:N3/4/v2/1;

  !!if&v7>=y7;
    !!DO(WOG_44_RemoveCreatures)/0/6/1:Py7; [Remove the creatures (if enough)]
    !!IF&1000:Q1/21/y5/y1/y2/1/z144041;

    !!VRy4:Sy3 -y2; [y4 = player's new amount of resource after payment]
    !!OW:R(CURRENT_PLAYER)/y1/y4; [Set player's resource amount to y4]

    !!VRv4:S(TRUE); [Set v4 to 1 to indicate the bonus should be given]
  !!el&1000;
    !!IF:Q4/21/y5/2/z144040;  [If not enough creatures, display this]
  !!en;
!!en;

!!if&v4;
  !!if&v3<>8;
    !!VRv1270:+1; [Increment v1270 to indicate at least one bonus bought this visit]
  !!el&v1270=0;
    !!VRv1270:S100; [Set v1270 to 100 to indicate "24 shots" was bought]
  !!en;
!!en;

-----------------------------------------------------------------------

 [Check if hero has enough creatures of specified type for "payment"]
 [v2=creature type, x16=slot number]
 [At end of loop, v7=total creatures of type v2 in hero's army]

!?FU(WOG_44_CheckIfHeroHasEnoughCreature);

!!HE(CURRENT_HERO):C0/x16/?y1/?y2; [y1=type, y2=number]
!!VRv7&y1=v2/y2>0:+y2; [Add number of creatures of right type in slot to v7 total]

-----------------------------------------------------------------------

 [Add bonus to creature type]
 [v2=creature type, v3=bonus type, x1=bonus amount]

!?FU(WOG_44_AddBonusByCreatureType);

!!MA&v3=2:Av2/dx1; [Attack bonus]
!!MA&v3=3:Dv2/dx1; [Defense bonus]
!!MA&v3=4:Ev2/dx1; [Damage high bonus]
!!MA&v3=4:Mv2/dx1; [Damage low bonus]
!!MA&v3=5:Pv2/dx1; [Health bonus]
!!MA&v3=6:Sv2/dx1; [Speed bonus]
!!MA&v3=7:Gv2/dx1; [Growth bonus]
!!MA&v3=8:Nv2/24;  [Shots bonus]
!!MA&v3=9:Bv2/d1;  [Spell casting bonus]

!!FU(WOG_44_AddSpesialAbility)&v3=10:P; [Special]

-----------------------------------------------------------------------

 [Choose Special Ability: v2=creature number]

!?FU(WOG_44_ChooseSpecialAbility);

!!VRz480:S^^; !!VRz481:S^^; !!VRz482:S^^; !!VRz483:S^^; !!VRz484:S^^;
!!VRz485:S^^; !!VRz486:S^^; !!VRz487:S^^; !!VRz488:S^^; !!VRz489:S^^; !!VRz490:S^^;

!!MA:Xv2/?v369; [Existing special abilities of monster v2: v369]

!!if&-1000;
  !!VRy3:S1 R9; [If AI, set y3 to random number from 1..10]
  !!VRy4:S-1; [If AI, initialize y4 to -1]
  !!FU(NewIntArray):P?y30;
!!en;

; Check if monster has the ability to teleport
!!FU(WOG_44_CheckIfMonCanTeleport):Pv2/?y33;

; Show Fly ability only when monster hasn't got teleportation
!!if&y33<>(TRUE);
  !!VRy1:Sv369; [Fly]
  !!VRy1:&(MON_FLAG_FLYER);
  !!VRz480&y1=0:Sz144042;
  !!VRz480&y1=(MON_FLAG_FLYER):S^^;
  !!FU(Array_Push)&-1000/y1=(FALSE):Py30/1;
!!en;

!!VRy1:Sv369; [Extended Attack]
!!VRy1:&(MON_FLAG_WIDE_ATTACK);
!!VRy5:Sv369; [Check for Attack All Adjacent]
!!VRy5:&(MON_FLAG_ATTACKS_ALL_AROUND);
!!VRz481&y1=0/y5=0:Sz144043;
!!VRz481|y1=(MON_FLAG_WIDE_ATTACK)/y5=(MON_FLAG_ATTACKS_ALL_AROUND):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE)/y5=(FALSE):Py30/2;

!!VRy1:Sv369; [Undead]
!!VRy1:&(MON_FLAG_UNDEAD);
!!VRz482&y1=0:Sz144044;
!!VRz482&y1=(MON_FLAG_UNDEAD):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE):Py30/3;

!!VRy1:Sv369; [No Morale]
!!VRy1:&(MON_FLAG_NO_MORALE);
!!VRz483&y1=0:Sz144045;
!!VRz483&y1=(MON_FLAG_NO_MORALE):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE):Py30/4;

!!VRy1:Sv369; [Two Attacks]
!!VRy1:&(MON_FLAG_ATTACKS_TWICE);
!!VRz484&y1=0:Sz144046;
!!VRz484&y1=(MON_FLAG_ATTACKS_TWICE):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE):Py30/5;

; Check if the monster has the ability to drain life or attract dead souls
!!FU(WOG_44_CheckIfMonDrainsLife):Pv2/?y32;

; Show Attact all Around only if hasn't got this ability
!!if&y32<>(TRUE);
  !!VRy1:Sv369; [Attack All Adjacent]
  !!VRy1:&(MON_FLAG_ATTACKS_ALL_AROUND);
  !!VRy5:Sv369; [Check for Extended Attack]
  !!VRy5:&(MON_FLAG_WIDE_ATTACK);
  !!VRz485&y1=0/y5=0:Sz144047;
  !!VRz485|y1=(MON_FLAG_ATTACKS_ALL_AROUND)/y5=(MON_FLAG_WIDE_ATTACK):S^^;
  !!FU(Array_Push)&-1000/y1=(FALSE)/y5=(FALSE):Py30/6;
!!en;

!!VRy1:Sv369; [No Retaliation]
!!VRy1:&(MON_FLAG_NO_RETALIATION);
!!VRz486&y1=0:Sz144048;
!!VRz486&y1=(MON_FLAG_NO_RETALIATION):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE):Py30/7;

!!VRy1:Sv369; [Immune to Mind Spells]
!!VRy1:&(MON_FLAG_MIND_IMMUNITY);
!!VRz487&y1=0:Sz144049;
!!VRz487&y1=(MON_FLAG_MIND_IMMUNITY):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE):Py30/8;

!!VRy1:Sv369; [Immune to Fire Spells]
!!VRy1:&(MON_FLAG_FIRE_IMMUNITY);
!!VRz488&y1=0:Sz144050;
!!VRz488&y1=(MON_FLAG_FIRE_IMMUNITY):S^^;
!!FU(Array_Push)&-1000/y1=(FALSE):Py30/9;

!!VRy1:Sv369; [No Close Combat Penalty]
!!VRy2:Sv369;
!!VRy1:&(MON_FLAG_NO_MELEE_PENALTY); (Check No Close Combat Penalty)
!!VRy2:&(MON_FLAG_SHOOTER);    (Check Shooter)
!!VRz489&y1=0/y2=(MON_FLAG_SHOOTER):Sz144051;
!!VRz489|y1=(MON_FLAG_NO_MELEE_PENALTY)/y2=0:S^^;
!!FU(Array_Push)&-1000/y1=(FALSE)/y2=(MON_FLAG_SHOOTER):Py30/10;

!!if&-1000;
  !!SN:My30/?y31;                       [check the size of the array]

  !!if&y31=0;
    !!VRv4:S0;                          [v4 = 0 if the targeted creature has learned all the special abilities]
  !!el;
    !!VRv4:S1;                          [v4 = 1 if there is any special abiltiy the targeted creature has not yet learned]
    !!FU(Array_Shuffle):Py30;           [shuffle the array and get the first element]
    !!SN:My30/0/?y4;
  !!en;
!!en;

!!VRz1:Sz144052;
!!VRz2:Sz144053;

!!IF&1000:G1/368/1024/1/480/481/482/483/484/485/486/487/488/489/2/0;

 [Determine which box was checked - store result in v5]
!!VRv5:S0;
!!VRv5&v368=1:S1;
!!VRv5&v368=2:S2;
!!VRv5&v368=4:S3;
!!VRv5&v368=8:S4;
!!VRv5&v368=16:S5;
!!VRv5&v368=32:S6;
!!VRv5&v368=64:S7;
!!VRv5&v368=128:S8;
!!VRv5&v368=256:S9;
!!VRv5&v368=512:S10;
!!VRv5&v368=1024:S-1;

!!VRv5&-1000:Sy4; [For AI, set v5 to special ability selected]

!!VRv3&v5=-1:S-1; [If player changes his or her mind, set v3 to -1]

-----------------------------------------------------------------------

 [Add Special Ability: v2=creature number, v5=bonus number]

!?FU(WOG_44_AddSpesialAbility)&v5>=1/v5<=10;

!!VRy2&v5=1:S(MON_FLAG_FLYER);          [Flying: y2]
!!VRy2&v5=2:S(MON_FLAG_WIDE_ATTACK);    [Extended Attack: y2]

!!VRy2&v5=3:S(MON_FLAG_UNDEAD) +(MON_FLAG_NO_MORALE) +(MON_FLAG_ALIVE); [Undead: y2]
!!VRy2&v5=4:S(MON_FLAG_NO_MORALE);      [Unaffected by Morale: y2]

!!VRy2&v5=5:S(MON_FLAG_ATTACKS_TWICE);  [Two Attacks: y2]
!!VRy2&v5=6:S(MON_FLAG_ATTACKS_ALL_AROUND); [Attack All Adjacent: y2]
!!VRy2&v5=7:S(MON_FLAG_NO_RETALIATION);   [No Retaliation: y2]
!!VRy2&v5=8:S(MON_FLAG_MIND_IMMUNITY);  [Immunity to Mind Spells: y2]
!!VRy2&v5=9:S(MON_FLAG_FIRE_IMMUNITY);  [Immunity to Fire Spells: y2]
!!VRy2&v5=10:S(MON_FLAG_NO_MELEE_PENALTY); [No Close Combat Penalty: y2]

!!MA:Xv2/?y1; [Read Creature Flags: y1]
!!VRy1:|y2; [OR Creature Flags (y1) with Special Ability bit (y2): y1]
!!VRy1&v5=3:-(MON_FLAG_ALIVE);
!!MA:Xv2/y1; [Set updated Creature Flags: y1]

-----------------------------------------------------------------------

 [Check if this is a new creature species to be enchanted]
 [If new, v6=-1, if not new, set v6 to loop index number (x16)]

!?FU(WOG_44_IsNewMonsterSpecies);

!!VRy1:S1240 +x16;  [Index of v variable, holding creature numbers]

!!if&vy1=v2;
  !!VRv6:Sx16; [If not new, set v6 to loop index number (x16)]
  !!VRx16:S99; [If not new, exit loop]
!!en;

-----------------------------------------------------------------------

 [Change species name to reflect ability or bonus just gained]
 [v6=loop index number, i^wog_44_speciesCounter^=changed creature counter]

!?FU(WOG_44_ChangeMonsterNames);
!#VA(mon:x) (choice:x) (specialAbility:x);

 [If a new species, store creature number in v(1240+i^wog_44_speciesCounter^)]
!!VR(vIndex:y):S1240 +i^wog_44_speciesCounter^;

!!if&v6<0;
  !!VRv(vIndex):S(mon);
  !!SN:H^monname^/(mon)/0/?(singName:z) H^monname^/(mon)/1/?(plurName:z);
  !!VRs^wog_44_monName_0_%i(wog_44_speciesCounter)^:S(singName);
  !!VRs^wog_44_monName_1_%i(wog_44_speciesCounter)^:S(plurName);
; Get the original name if not new
!!el;
  !!VR(singName):Ss^wog_44_monName_0_%i(wog_44_speciesCounter)^;
  !!VR(plurName):Ss^wog_44_monName_1_%i(wog_44_speciesCounter)^;
!!en;

 [Generate descriptor word to preface name: z5]
!!VR(random:y):R0/1/4;

; Normal stats
!!if&(choice)<=9;
  !!VR(zIndex:y):S(choice) -2 *4 +(random) -1 +144054;
; Special ability (choice was 10)
!!el;
  !!VR(zIndex):S(specialAbility) -1 *4 +(random) -1 +144086;
!!en;

!!VR(prefix:z):Sz(zIndex);

; Change the names
!!SN:H^monname^/(mon)/0/^%(prefix) %(singName)^ H^monname^/(mon)/1/^%(prefix) %(plurName)^;

-----------------------------------------------------------------------

 [Remove creatures of specified type from hero's army for "payment"]
 [v2=creature type, x1=number of creatures needed, x16=slot number]

!?FU(WOG_44_RemoveCreatures);

!!HE(CURRENT_HERO):C0/x16/?y1/?y2; [y1=type, y2=number]

!!if&y1=v2;
  !!if&y2>0/y2<=x1;
    !!HE(CURRENT_HERO):C0/x16/-1/0; [Remove entire stack if less than or equal to # needed]
    !!VRy4:Sx1 -y2; [Reduce x1 (y4) by amount in stack]
  !!en;

  !!if&y2>x1;
    !!VRy3:Sx1 *-1; [Store negative value of x1 in y3]
    !!HE(CURRENT_HERO):C0/x16/d/dy3/0/3; [Remove x1 (y3) troops from stack if more than # needed without changing exp.]
    !!VRy4:S0; [Reduce x1 (y4) to 0]
  !!en;

  !!VRx1&y2>0:Sy4; [Set x1 to y4]
!!en;

-----------------------------------------------------------------------

 [Select a creature type for AI to buy a bonus for]
 [based on highest AI value of a given stack: v2]

!?FU(WOG_44_AIChooseCreatureBonus);

!!HE(CURRENT_HERO):C0/x16/?y1/?y2;   [Slot x16: y1=creature type, y2=number of creatures]
!!VRy3:S0; [Initialize y3 to 0]
!!MA&y1>=0/y2>0:Iy1/?y3; [AI value for creature type y1: y3]
!!VRy4&y3>0:Sy3 *y2; [Total AI value for stack: y4]
!!VRv2&y4>x1:Sy1; [Creature type with highest AI value: v2]
!!VRx1&y4>x1:Sy4; [Highest AI value: x1]

-----------------------------------------------------------------------

; Check if a creature has the ability Drain Life or Attract Dead Souls
; This function is used to decide whether to show "Strike All Enemy Around" upgrade as it conflicts with drain life ability
; Customise this function if any mod has new creatures having these abilities
!?FU(WOG_44_CheckIfMonDrainsLife);
!#VA(mon:x) (result:x);

!!VR(result):S(FALSE);
!!FU&(mon)<=(NO_MON):E;

; Vampire Lords and Ghosts can drain life
!!VR(result)|(mon)=(MON_VAMPIRE_LORD)/(mon)=(MON_GHOST):S(TRUE);

; Check for possible upgrades for Vampire Lord and Ghost
!!FU(GetUpgradedMonster):P(MON_VAMPIRE_LORD)/?(updVampireLord:y);
!!FU(GetUpgradedMonster):P(MON_GHOST)/?(updGhost:y);

!!VR(result)&(mon)=(updVampireLord):S(TRUE);
!!VR(result)&(mon)=(updGhost):S(TRUE);

!?FU(WOG_44_CheckIfMonCanTeleport);
!#VA(mon:x) (result:x);

!!VR(result):S(FALSE);
!!FU&(mon)<=(NO_MON):E;

; Devils can teleport
!!VR(result)|(mon)=(MON_DEVIL)/(mon)=(MON_ARCH_DEVIL)/(mon)=(MON_HELL_BARON):S(TRUE);

; Check for possible upgrade for Hell Baron
!!FU(GetUpgradedMonster):P(MON_HELL_BARON)/?(updHellBaron:y);
!!VR(result)&(mon)=(updHellBaron):S(TRUE);

** End of Script **
