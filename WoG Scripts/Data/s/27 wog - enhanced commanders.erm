ZVSE2

** ENHANCED COMMANDERS  -  ERM script 51 (ERA II: 27-wog)

** By Arstahd
** Version: 1.11        updated October 2 2004
** Updated September 15, 2004 to change local y variables in instructions to v variables
** Version 1.2 updated July 2022 by Archer30
** Special Thanks to Hermann the Weird for help with bug fixing and script maintenance

** Note: Commander Enhancements are disabled for network human-to-human battles.

*** commander stats are calculated to new formulae
**    display will be inaccurate when hero levels up, re-open commander screen to update stat display, ignore skill descriptions
**    attack          - base 5 + 1/2 x level - skill adds +25%,+50%,+75%,+100%,+125%
**    defence         - base 5 + 1/2 x level - skill adds +25%,+50%,+75%,+100%,+125%
**    hit points      - base 30 + 15 x level - skill adds +25%,+50%,+75%,+100%,+125%
**    damage          - base 10 + 5 x level  - skill adds +25%,+50%,+75%,+100%,+125%
**    magic power     - base 3 + 3 x skill level  (Soul Eater & Astral Spirit: base 1 + 1 x skill level)
**    magic resistance- base 0 + 10 x skill level
**    speed           - base 5 - skill adds normal bonus
**    spell quantity  - functions as normal (increased by magic power skill)
*** commanders each start with a special ability
**    paladin         - endless retaliation
**    heirophant      - magic mirror (fire shield)
**    temple guardian - shoot
**    succubus        - fly
**    soul eater      - fear
**    brute           - no retaliation
**    ogre leader     - block
**    shaman          - 50% poison (death stare)
**    astral spirit   - ignore 50% defense
*** commander spells improved, most apply an additional spell (at adv. level) after they cast a spell
**    paladin         - cure/bless
**    heirophant      - shield/mirth
**    temple guardian - prayer                 (precision removed)
**    succubus        - fire shield/bloodlust  (displays Sacrifice animation)
**    soul eater      - animate dead           (no change)
**    brute           - bloodlust/stoneskin
**    ogre leader     - stoneskin/counterstrike
**    shaman          - haste/fortune
**    astral spirit   - summon elemental       (counterstrike removed)
*** commanders (except soul eater &astral spirit) are now living and can be resurrected (soul eater can still be raised with animate dead)
*** commanders are town based if bought, type depends on town not hero when you buy a new commander (dismiss old commander to buy a new one)
*** "Death Stare" ability replaced with 50% chance to cast Poison - attack or shoot
*** "Fire Shield" ability replaced with expert Magic Mirror

*** commander stones now give skills:
**    opal - gives random special ability
**    ruby - gives either +1 to Attack skill or Damage skill
**    sapphire - gives either +1 to Defense skill or Hit Points skill
**    emerald - gives either +1 to Magic skill or Speed skill

; Note: Currently Death Stare and Fire Shield from Random Heroes won't be replaced as Random Heroes executes later than this script


** initialization
!?FU(OnAfterErmInstructions);
!!UN:P51/?(enhCommander:y) P(WOG_OPT_DISABLE_COMMANDERS)/?(commanderDisabled:y); [check if Enhanced Commanders is enabled in WoGify Options and if Commanders are enabled]

!!VRi^wog_51_enabled^&(enhCommander)/(commanderDisabled)<>(TRUE):S(TRUE); [set var i^wog_51_enabled^ to true]
!!FU&i^wog_51_enabled^<>(TRUE):E;

; Set up basic stuff
!!CO-2&i^wog_51_enabled^:P1;                     [enable custom primary skill control]
!!UN:B6/1;                                       [set new chest 6 to advanced setting (disabled)]

** make commanders alive
!!re i/(MON_COMMANDER_FIRST_A)/(MON_COMMANDER_LAST_D); [iterate through all commander types and make alive]
  !!co|i=(MON_SOUL_EATER_A)/i=(MON_SOUL_EATER_D)/i=(MON_ASTRAL_SPIRIT_A)/i=(MON_ASTRAL_SPIRIT_D); [Skip if Soul Eater or Astral Spirit]

  !!MA:Xi/d|(MON_FLAG_ALIVE);
!!en;


** commander screen open trigger
!?FU(OnOpenCommanderWindow)&i^wog_51_enabled^;   [check if Enhanced Commanders is enabled]
!!FU(WOG_51_NPC_EditStats):P(CURRENT_HERO);
** end of hero level trigger


** start of pre-battle trigger **
!?FU(OnBeforeBattleUniversal)&i^wog_51_enabled^/-998;     [check if Enhanced Commanders is enabled]
!!VRi^wog_52_deathStare_0^:S0;
!!VRi^wog_52_deathStare_1^:S0;
!!VRi^wog_52_fireShield_0^:S0;
!!VRi^wog_52_fireShield_1^:S0;

!!FU(WOG_51_NPC_EditStats):Pi^battle_hero_0^; [modify commander stats - attacker]
!!COi^battle_hero_0^:B0/?(commFlag:y);  [check skill bits, get type - attacker]
!!VRi^wog_52_deathStare_0^:S(commFlag) &4096; [check death stare bit - attacker]
!!COi^battle_hero_0^&i^wog_52_deathStare_0^:B1/12/0; [remove death stare - attacker]
!!VRi^wog_52_fireShield_0^:S(commFlag) &128; [check fire shield bit - attacker]
!!COi^battle_hero_0^&i^wog_52_fireShield_0^:B1/7/0; [remove fire shield - attacker]

!!if&i^battle_hero_1^>(NO_HERO);
  !!FU(WOG_51_NPC_EditStats):Pi^battle_hero_1^; [modify commander stats - defender]
  !!COi^battle_hero_1^:B0/?(commFlag:y);[check skill bits, get type - defender]
  !!VRi^wog_52_deathStare_1^:S(commFlag) &4096; [check death stare bit - defender]
  !!COi^battle_hero_1^&i^wog_52_deathStare_1^:B1/12/0; [remove death stare - defender]
  !!VRi^wog_52_fireShield_1^:S(commFlag) &128; [check fire shield bit - defender]
  !!COi^battle_hero_1^&i^wog_52_fireShield_1^:B1/7/0; [remove fire shield - defender]
!!en;

** end of pre-battle trigger


** start of battlefield trigger **
!?FU(OnSetupBattlefield)&i^wog_51_enabled^/-998;  [continue if enabled]
!!DO(WOG_51_NPC_SetMagicMirror)/0/41/1:P;         [prepare to give magic mirror]
** end of battlefield trigger


** start of battle turn trigger **
!?FU(OnBattleRound)&i^wog_51_enabled^/-998;       [continue if enabled]
!!DO(WOG_51_NPC_SetMagicMirror)/0/41/1:P;         [prepare to give magic mirror]
** end of battle turn trigger **


; Manage spell casting
** pre-action trigger **
!?FU(OnBeforeBattleAction)&i^wog_51_enabled^/-998; [continue if enabled]
!!BG:A?(action:y);                      [get current stack, action type, destination stack]
!!BMi^battle_acting_stack^:T?(type:y);    [get type of current creature stack]

!!if&(action)=(BATTLE_ACTION_MONSTER_CAST);
  !!if|(type)=(MON_ASTRAL_SPIRIT_A)/(type)=(MON_ASTRAL_SPIRIT_D);
    !!VR(random:y):R0/(SPELL_FIRE_ELEMENTAL)/(SPELL_AIR_ELEMENTAL); [if astral spirit is casting - choose random elemental spell]
    !!BMi^battle_acting_stack^:U4/(random); [if astral spirit is casting - change spell to summon elemental]
  !!en;
!!en;

** end of pre-action trigger **


** post-action trigger **
!?FU(OnBattleActionEnd)&i^wog_51_enabled^/-998; [continue if enabled]
!!BG:A?(action:y);
!!FU&(action)<>(BATTLE_ACTION_MONSTER_CAST):E;

!!BMi^battle_acting_stack^:T?(type:y);  [get acting monster type and side]
!!FU(WOG_51_NPC_CastSpell)&(type)>=(MON_COMMANDER_FIRST_A)/(type)<=(MON_COMMANDER_LAST_D):P; [cast extra spell if commander cast]

; astral spirit - revert spell to counterstrike for easier casting of elementals
!!BMi^battle_acting_stack^|(type)=(MON_ASTRAL_SPIRIT_A)/(type)=(MON_ASTRAL_SPIRIT_D):U4/(SPELL_COUNTERSTRIKE);

!?FU(OnAfterBattleAction)&i^wog_51_enabled^/-998;
!!BU:C?(battleIsEnded:y);               [check for end of battle]

!!if&(battleIsEnded);
  !!COi^battle_hero_0^&i^wog_52_deathStare_0^:B1/12/1; [restore death stare - attacker]
  !!COi^battle_hero_0^&i^wog_52_fireShield_0^:B1/7/1; [restore fire shield - attacker]

  !!if&i^battle_hero_1^>(NO_HERO);
    !!COi^battle_hero_1^&i^wog_52_deathStare_1^:B1/12/1; [restore death stare - defender]
    !!COi^battle_hero_1^&i^wog_52_fireShield_1^:B1/7/1; [restore fire shield - defender]
  !!en;
!!en;
** end of post-action trigger **


** post-attck tigger (hook) **
!?FU(WOG_OnAfterAttack);
!#VA(atkStack:x) (defStack:x);

!!BM(atkStack):T?(atkType:y) I?(side:y);

!!if&(atkType)>=(MON_COMMANDER_FIRST_A)/(atkType)<=(MON_COMMANDER_LAST_D)/i^wog_52_deathStare_%(side)^<>0;
  !!BM(defStack):N?(num:y) F?(monFlag:y) P?(pos:y);
  !!VR(isAlive:y):S(monFlag) &(MON_FLAG_ALIVE);

  !!if&(num)>0/(isAlive);
    !!VR(random:y):R0/0/99;             [random roll]
    !!BM(atkStack)&(random)<50:C71/(pos)/1/3/1; [if target is alive have current stack cast poison]
  !!en;
!!en;
** end of post-attck tigger (hook) **


; Change the type of commander hero bought to match the type of town unless choose Commanders script is enabled
** post-buy commander trigger **
!?FU(OnAfterCommanderBuy)&i^wog_51_enabled^; [continue if enabled and "choose commanders" isn't]
!!UN:P186/?(chooseComm:y);              [check if choose Commanders is enabled in WoGify Options]
!!FU&(chooseComm):E;                    [exit if choose Commanders script is enabled]

!!HE(CURRENT_HERO):P?(x:y)/?(y:y)/?(z:y);[get hero position]
!!OB(x)/(y)/(z):U?(type:y);             [get subtype of town]
!!CO(CURRENT_HERO)&(type)<=(TOWN_LAST_WOG):T(type); [set commander type]
** end of post-buy commander trigger **


** function to edit commander stats
!?FU(WOG_51_NPC_EditStats);
* x1 - hero number
!!COx1:X2/?y2 T?y5;                              [get commander level & type]
** attack - base 5 + 1/2 x level - skill adds +25%,+50%,+75%,+100%,+125%
!!COx1:S0/?y3;                                   [get attack level]
!!VRy4&y3=0:Sy2 :2 +5;                           [if attack=0 set attack to 5 + 1/2 level]
!!VRy4&y3=1:Sy2 :2 +5 *125 :100 -2;              [if attack=1 set attack to 5 + 1/2 level x 125%]
!!VRy4&y3=2:Sy2 :2 +5 *150 :100 -5;              [if attack=2 set attack to 5 + 1/2 level x 150%]
!!VRy4&y3=3:Sy2 :2 +5 *175 :100 -9;              [if attack=3 set attack to 5 + 1/2 level x 175%]
!!VRy4&y3=4:Sy2 :2 +5 *2 -15;                    [if attack=4 set attack to 5 + 1/2 level x 200%]
!!VRy4&y3=5:Sy2 :2 +5 *225 :100 -25;             [if attack=5 set attack to 5 + 1/2 level x 225%]
!!COx1:P0/y4;                                    [set attack]
** defense - base 5 + 1/2 x level - skill adds +25%,+50%,+75%,+100%,+125%
!!COx1:S1/?y3;                                   [get defence level]
!!VRy4&y3=0:Sy2 :2 +5;                           [if defence=0 set defence to 5 + 1/2 level]
!!VRy4&y3=1:Sy2 :2 +5 *125 :100 -4;              [if defence=1 set defence to 5 + 1/2 level x 125%]
!!VRy4&y3=2:Sy2 :2 +5 *150 :100 -10;             [if defence=2 set defence to 5 + 1/2 level x 150%]
!!VRy4&y3=3:Sy2 :2 +5 *175 :100 -18;             [if defence=3 set defence to 5 + 1/2 level x 175%]
!!VRy4&y3=4:Sy2 :2 +5 *2 -30;                    [if defence=4 set defence to 5 + 1/2 level x 200%]
!!VRy4&y3=5:Sy2 :2 +5 *225 :100 -50;             [if defence=5 set defence to 5 + 1/2 level x 225%]
!!COx1:P1/y4;                                    [set defence]
** hit points - base 30 + 15 x level - skill adds +25%,+50%,+75%,+100%,+125%
!!COx1:S2/?y3;                                   [get hit points level]
!!VRy4&y3=0:Sy2 *20 +40;                         [if hit points=0 set hit points to 40 + 20 x level]
!!VRy4&y3=1:Sy2 *20 +40 *125 :110;               [if hit points=1 set hit points to 40 + 20 x level x 125%]
!!VRy4&y3=2:Sy2 *20 +40 *150 :125;               [if hit points=2 set hit points to 40 + 20 x level x 150%]
!!VRy4&y3=3:Sy2 *20 +40 *175 :145;               [if hit points=3 set hit points to 40 + 20 x level x 175%]
!!VRy4&y3=4:Sy2 *20 +40 *200 :170;               [if hit points=4 set hit points to 40 + 20 x level x 200%]
!!VRy4&y3=5:Sy2 *20 +40 *225 :200;               [if hit points=5 set hit points to 40 + 20 x level x 225%]
!!COx1:P2/y4;                                    [set hit points]
** damage - base 10 + 5 x level - skill adds +25%,+50%,+75%,+100%,+125%
!!COx1:S3/?y3;                                   [get damage level]
!!VRy4&y3=0:Sy2 *5 +10;                          [if damage=0 set damage to 10 + 5 x level]
!!VRy4&y3=1:Sy2 *5 +10 *125 :110;                [if damage=1 set damage to 10 + 5 x level x 125%]
!!VRy4&y3=2:Sy2 *5 +10 *150 :125;                [if damage=2 set damage to 10 + 5 x level x 150%]
!!VRy4&y3=3:Sy2 *5 +10 *175 :145;                [if damage=3 set damage to 10 + 5 x level x 175%]
!!VRy4&y3=4:Sy2 *5 +10 *200 :170;                [if damage=4 set damage to 10 + 5 x level x 200%]
!!VRy4&y3=5:Sy2 *5 +10 *225 :200;                [if damage=5 set damage to 10 + 5 x level x 225%]
!!COx1:P3/y4;                                    [set damage]
** magic power - base 3 + 3 x skill level   (Soul Eater: base 1 + 1 x skill level)
!!COx1:S4/?y3;                                   [get MP level]
!!VRy6:Sy3 +1 *3;                                [set power to (MP+1)x3]
!!VRy6&y5=4:Sy3 +1;                              [if Soul Eater set power MP+1]
!!VRy6&y5=8:Sy3 +1;                              [if Astral Spirit set power MP+1]
!!VRy4&y3=0:Sy6;                                 [if MP=0 set power]
!!VRy4&y3=1:Sy6 -1;                              [if MP=1 set power]
!!VRy4&y3=2:Sy6 -3;                              [if MP=2 set power]
!!VRy4&y3=3:Sy6 -7;                              [if MP=3 set power]
!!VRy4&y3=4:Sy6 -14;                             [if MP=4 set power]
!!VRy4&y3=5:Sy6 -29;                             [if MP=5 set power]
!!COx1:P4/y4;                                    [set power]
** speed - base 5 - skill adds normal bonus
!!COx1:P5/5;                                     [set base speed to 5]

** starting special bonus
!!COx1&y5=0:B1/5/1;                              [give paladin         - endless retaliation]
!!COx1&y5=1:B1/7/1;                              [give hierophant      - magic mirror (fire shield)]
!!COx1&y5=2:B1/4/1;                              [give temple guardian - shoot]
!!COx1&y5=3:B1/14/1;                             [give succubus        - fly]
!!COx1&y5=4:B1/1/1;                              [give soul eater      - fear]
!!COx1&y5=5:B1/3/1;                              [give brute           - no retaliation]
!!COx1&y5=6:B1/8/1;                              [give ogre leader     - block]
!!COx1&y5=7:B1/12/1;                             [give shaman          - poison (death stare)]
!!COx1&y5=8:B1/0/1;                              [give astral spirit   - ignore 50% defense]

** end of function


** function to cast spell
!?FU(WOG_51_NPC_CastSpell);
; Get the real power of the commander
!!BG:H?(hero:y) E?(targetStack:y);
!!CO(hero):S4/?(magicLv:y) T?(type:y);
!!VR(power:y):S(magicLv) *3 +3;           [Does Soul Eater and Astral Spirit cast with positive power?]

; Add an additional spell to casting
!!BM(targetStack)&(type)=(TOWN_CASTLE):V36 M(SPELL_BLESS)/(power)/(SKILL_ADVANCED); [apply bless - paladin]
!!BM(targetStack)&(type)=(TOWN_RAMPART):V20 M(SPELL_MIRTH)/(power)/(SKILL_ADVANCED); [apply mirth - heirophant]
!!BM(targetStack)&(type)=(TOWN_INFERNO):V51 M(SPELL_BLOODLUST)/(power)/(SKILL_ADVANCED); [apply bloodlust - succubus]
!!BM(targetStack)&(type)=(TOWN_DUNGEON):V54 M(SPELL_STONE_SKIN)/(power)/(SKILL_ADVANCED); [apply stoneskin - brute]
!!BM(targetStack)&(type)=(TOWN_STRONGHOLD):V7 M(SPELL_COUNTERSTRIKE)/(power)/(SKILL_ADVANCED); [apply counterstrike - ogre leader]
!!BM(targetStack)&(type)=(TOWN_FORTRESS):V18 M(SPELL_FORTUNE)/(power)/(SKILL_ADVANCED); [apply fortune - shaman]

** end of function **


** function to cycle through all stacks
!?FU(WOG_51_NPC_SetMagicMirror);
!!BMx16:T?(type:y);                                          [get stack's monster type]

; give magic mirror
!!if&(type)>=(MON_COMMANDER_FIRST_A)/(type)<=(MON_COMMANDER_LAST_D);
  !!BMx16&i^wog_52_fireShield_0^<>0/x16<=(BATTLE_ATTACKER_STACK_LAST):M(SPELL_MAGIC_MIRROR)/100/(SKILL_EXPERT);    [give commander with fire shield exp. magic mirror - attacker]
  !!BMx16&i^wog_52_fireShield_1^<>0/x16>=(BATTLE_DEFENDER_STACK_FIRST):M(SPELL_MAGIC_MIRROR)/100/(SKILL_EXPERT);    [give commander with fire shield exp. magic mirror - defender]
!!en;

; temple guardian - change spell to prayer (on turn 0)
!!if&i^battle_round^=0;
  !!BMx16|(type)=(MON_TEMPLE_GUARDIAN_A)/(type)=(MON_TEMPLE_GUARDIAN_D):U4/(SPELL_PRAYER);
!!en;

** end of function **


**  object trigger - opal
!?OB101/7&i^wog_51_enabled^;
!!VRy4:R0/0/14;                                  [random roll 0-14]
!!VRy2:S151000 +y4;                              [apply string]
!!VRz2:Szy2;                                     [set string]

!!CO(CURRENT_HERO):B1/y4/?y5 D?y6 E?y7 N?z1;     [check if commander has skill, is alive, is enabled, get name]

!!if&y6=0/y7=1;
  !!OB998:T101 U6;                               [set to chest 6 if commander is alive, enabled]

  !!if&y5=0;
    !!CO(CURRENT_HERO):B1/y4/1;                  [give skill if commander doesn't have it and is alive, enabled]

    !!IF&1000:M1/z151015;
  !!en;
!!en;

!!IF&y5=1/1000:M1/z151016;
** end of object trigger


**  object trigger - ruby
!?OB101/8&i^wog_51_enabled^;
!!FU(WOG_51_NPC_AddSSkill):P0/3/151017/151018;

**  object trigger - sapphire
!?OB101/9&i^wog_51_enabled^;
!!FU(WOG_51_NPC_AddSSkill):P1/2/151022/151023;

**  object trigger - emerald
!?OB101/10&i^wog_51_enabled^;
!!FU(WOG_51_NPC_AddSSkill):P4/5/151027/151028;

!?FU(WOG_51_NPC_AddSSkill)&i^wog_51_enabled^;
* refactoring by [igrik and Archer30]
* x1 - first  sskill
* x2 - second sskill
* x3 - ert string id
!#VA(skill1:x) (skill2:x) (string1:x) (string2:x);

!!HE(CURRENT_HERO):N?(commander:y);
; Exit if commander is killed or dismissed
!!CO(commander):D?(isDead:y) E?(hasRecruited:y);
!!FU|(isDead)/(hasRecruited)<>(TRUE):E;

; Get the skill about to learn
!!VR(skillIndex:y):S-1;
!!CO(commander):S(skill1)/?(skill1Lv:y) S(skill2)/?(skill2Lv:y) N?z1;

!!if&(skill1Lv)>(skill2Lv);
  !!VR(skillIndex):S1;
!!el&(skill1Lv)<(skill2Lv);
  !!VR(skillIndex):S0;
!!el&(skill1Lv)=(skill2Lv)/(skill2Lv)<5;
  !!VR(random:y):R0/0/99;

  !!if&(random)<=49;
    !!VR(skillIndex):S1;
  !!el;
    !!VR(skillIndex):S0;
  !!en;
!!en;

!!if&(skillIndex)>-1;
  ; Disable standard power stone feature
  !!VR(skillToLearn:y)&(skillIndex)=0:S(skill1);
  !!VR(skillToLearn)&(skillIndex)=1:S(skill2);

  !!CO(commander):S(skillToLearn)/?(skillToLearnLv:y); [get current skill level]

  !!if&(skillToLearnLv)>=5;
    !!FU:E;
  ; Check if learning the new basic skill could result in exceeding skills limit
  !!el&(skillToLearnLv)=0;
    ; Get the skills limit
    !!UN:C7770979/(UNC_INT8)/?(skillsLimit:y);

    ; Get the quanity of existing skills learned
    !!VR(learnedSkills:y):S0;

    !!re i/0/5;
      !!CO(CURRENT_HERO):Si/?(skillLv:y);

      !!VR(learnedSkills)&(skillLv)>0:+1;
    !!en;

    ; Exit if skills limit has been reached
    !!FU&(learnedSkills)=(skillsLimit):E;
  !!en;

  ; give one extra skill level
  !!CO(commander):S(skillToLearn)/d1;

  ; Increase Magic Resistance along with Magic Power, doesn't work automatically
  !!if&(skillToLearn)=4;
    !!CO(commander):S6/?(resistance:y);
    !!CO(commander)&(resistance)<5:S6/d1;
  !!en;

  ; Disable standard action
  !!OB998:T101 U6;

  !!if&1000;
    !!IF&(skillIndex)=0:M1/z(string2);
    !!IF&(skillIndex)=1:M1/z(string1);
  !!en;
!!en;

** end of object trigger


** update Magic Mirror and Poison skill icons and descriptions **
!?FU(OnStartOrLoad)&i^wog_51_enabled^;
; New skill iconcs - this no longer works for some reason
!!SN:F^PcxPngExists^/^mirror2d.pcx^;

!!if&v1;
  !!SN:R^dlg_npc2.def:0_86.png^/^mirror2d.png^;
  !!SN:R^dlg_npc2.def:0_87.png^/^mirror2l.png^;
  !!SN:R^dlg_npc2.def:0_96.png^/^poison2d.png^;
  !!SN:R^dlg_npc2.def:0_97.png^/^poison2l.png^;

  !!SN:R^dlg_npc3.def:0_15.png^/^mirror3l.png^;
  !!SN:R^dlg_npc3.def:0_16.png^/^mirror3d.png^;
  !!SN:R^dlg_npc3.def:0_25.png^/^poison3l.png^;
  !!SN:R^dlg_npc3.def:0_26.png^/^poison3d.png^;
!!en;

; New descriptions
; Magic Mirror basic desc
!!SN:E7827723/(CALLCONV_CDECL)/38/1/42338084;
!!SN:Bv1/d/z151032;
!!SN:E7827723/(CALLCONV_CDECL)/38/2/42338084;
!!SN:Bv1/d/z151033;
!!SN:E7827723/(CALLCONV_CDECL)/75/1/42338084;
!!VR(temp:y):Sv1;                            [fix broken string]
!!SN:B(temp)/d/?(msg:z);                     [fix broken string]
!!SN:E7827723/(CALLCONV_CDECL)/74/1/42338084;
!!SN:Bv1/d/z151034;
!!SN:B(temp)/d/(msg);                        [fix broken string]

; Poison basic desc
!!SN:E7827723/(CALLCONV_CDECL)/50/1/42338084;
!!SN:Bv1/d/z151035;
!!SN:E7827723/(CALLCONV_CDECL)/50/2/42338084;
!!SN:Bv1/d/z151036;
!!SN:E7827723/(CALLCONV_CDECL)/86/1/42338084;
!!SN:Bv1/d/z151037;

; Temple Guardian - Prayer
!!SN:E7827723/(CALLCONV_CDECL)/3/1/42338084;
!!SN:Bv1/d/z151038;
!!SN:E7827723/(CALLCONV_CDECL)/12/2/42338084;
!!SN:Bv1/d/z151039;
!!SN:E7827723/(CALLCONV_CDECL)/21/2/42338084;
!!SN:Bv1/d/z151040;

; Astral Spirit - Summon Elemental
!!SN:E7827723/(CALLCONV_CDECL)/9/1/42338084;
!!SN:Bv1/d/z151041;
!!SN:E7827723/(CALLCONV_CDECL)/18/2/42338084;
!!SN:Bv1/d/z151042;
!!SN:E7827723/(CALLCONV_CDECL)/27/2/42338084;
!!SN:Bv1/d/z151043;
** end of update Magic Mirror and Poison skill icons and descriptions**


** Maximum Commander Skills **
; Allow commanders to learn all the skills if Maximum Commander Skills is enabled
; Script by Archer30

!?FU(WOG_253_NPC_MaxSkills);
!!UN:P(WOG_OPT_DISABLE_COMMANDERS)/?(commanderDisabled:y) P253/?(maxCommSkills:y);

!!if&(commanderDisabled)<>(TRUE)/(maxCommSkills);
  !!UN:C7770979/(UNC_INT8)/?i^wog_253_patch^;
  !!UN:C7770979/(UNC_INT8)/6;
!!en;

!#FU(WOG_253_NPC_MaxSkills):P;

!?FU(OnAfterLoadGame);
!!FU(WOG_253_NPC_MaxSkills):P;

!?FU(OnGameLeave);
!!UN&i^wog_comm_patch^:C7770979/(UNC_INT8)/i^wog_253_patch^;
** end of commander skill limit **
