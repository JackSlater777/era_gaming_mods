ZVSE2

**   Altar of Tranformation Script Version 1.8 created by Timothy E. Pulver
**   Modified by Thomas Franz (alias samot)
**   - rewritten and optimized transfer routine, general optimizations (freed some variables etc.)
**   - ghosts can't be transfered and can't be get by transfer
**   - added: trolls, mummies and nomads to neutral creatures
**   - it will cost up to 100 spell points to control the result of the transformation, each spell point
**     lesser increase the chance to get another town instead of your selected by 1 %
**   Requires WoG version 3.58 or later using ERM version 2.8 or later.
**   WoGify Name: script14.erm
**   Updated: October 14, 2004
**   Updated: Dec 2021 by Archer30

** This script makes all "Lightning Altars" on a map function as transformation
** devices. When a hero climbs the altar, his or her army will be transformed
** into different creatures, while maintaining approximately the same level of
** power. This version differs from previous versions in that all creatures
** after transformation will be of the same town type, which will either be
** the hero's native town type, or if the hero already has all native creatures,
** it will be a random town type instead.

** All creatures are subject to transformation with the following exceptions:
** powerful neutral dragons will not be affected *except* for the Faerie
** Dragon, which may change into a WoG 8th level monster matching the
** new chosen town type, and God's Representatives (Emissaries) won't
** be affected either.

** If the town type is the Necropolis, there's a 50% chance that any non-upgraded
** level 3 creatures will become Mummies. Rampart has also a 50% chance to get Sylvan Centaurs
** instead of Grand Elves.

** Most creatures in the game have a chance of appearing from the
** altar if the right level (plus upgraded or non-upgraded) troops are in the
** hero's army. The exceptions are powerful neutral dragons (except for the
** Faerie Dragon), God's Representatives and the four elemental
** Messengers. Except the Messengers these creatures also will not be transformed.

** Edited by Archer30:
** Now all the level creatures with fight values bigger than Blood Dragon and lower than or equal to Darkness Dragon will be transformed to Level 8 creatures.
** All the creatures with fight values bigger than Darkness Dragons are immune to the transformation.
** All the creatures would only be transformed to non-upgraded. Eg. Battle Dwarves -> Archers (instead of Marksmen).

** Each Transformation Altar on the map can only be visited once per week.


Flags Used in this Script: 1,209-211
Variables Used in this Script: v1, x16, z451-z453
Function Variables Used in this Script: x1-x5, x16, y-1, y-2

Variables that MUST be preserved outside this script: z451-z453

[Check version of ERM to see if it's current enough]
[Display warning message if it isn't]

!?FU(transAlt_Initialization);
 [Check if script is enabled: v1]
!!UN:P14/?(altarOn:y);

 [Set up right-click hint text for Altar objects]
; Note: The right-click text does not put multi-player games into consideration - we don't use AoT in MP, right?

!!if&(altarOn);
  !!VRz451:Sz114001;
  !!VRz452:Sz114002;
  !!VRz453:Sz114003;
  !!HT(OBJ_NEW_WOG_OBJECTS)/20:P0/451;
  !!HT(OBJ_NEW_WOG_OBJECTS)/20:P1/452;
  !!HT(OBJ_NEW_WOG_OBJECTS)/20:P2/453;
!!en;

!#FU(transAlt_Initialization):P;

----------------------------------------------------------------------------------------

; Start of function to reset all Altar of Transformation right-click text
; This function also sets PM commands to attract AI to Altar objects
; This function also resets the Alter's control word to allow visiting
!?FU(OnEveryDay)&i^timerWeekday^=1/i^timerOnce^; [Timer triggers on day 1 each week]
!!UN:P14/?(altarOn:y); [Check if script is enabled: y-1]
!!FU&(altarOn)<>(TRUE):E; [Exit if script isn't enabled]

!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_NEW_WOG_OBJECTS)/20/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  ; Reset Altar text unless Altar hasn't yet been visited
  ; The N number is also used to determine if the Altar may be visited
  !!PO(x)/(y)/(z):N?(value:y);
  !!PO(x)/(y)/(z)&(value)>0:N2;         [Set to "not visited" if an altar has been visited once]
  ; Set Altar to attract AI
  !!PM(x)/(y)/(z):V(TRUE);
!!en;

----------------------------------------------------------------------------------------

!?OB(OBJ_NEW_WOG_OBJECTS)/20;  [Triggers when any "Lightning Altar" is visited]
** vars used
** v1 - answer for radioboxes
** y-19 : current number of spell points
** y-20 - y-26: invested spell points
** y1 : chance to get what you want
** y2 : selected town type

!!UN:P14/?y1; [Check if script is enabled: y1]
!!FU&y1=0:E; [Exit if script isn't enabled]

!!VRv1:S0;

!!PO998:N?y90;  // get current PO:N value to y-90;

!!if&y90=1;
  !!IF&1000:M1/z114005; // show message that already visited
  !!FU:E; // Exit function if altar has been visited yet
!!en;

; Set Altar right-click text to show it has not been visited this week
!!PO998:N2;

!!IF:V209/0 V210/0 V211/0;  [Sets flags 209, 210 and 211 to false]

 [Ask if hero wishes to visit the altar and how much of his mana he want to invest, return in v1]

!!HE(CURRENT_HERO):I?y19; // get number of spell points
!!VRy19:F0/(BITS_15_MASK);             [Fix hero's mana in case it is negative]
!!HE(CURRENT_HERO):Iy19;

!!VRy-20:Sy19 F0/100; // set y-20 to act. spell points but max. to 100
!!VRy-21:Sy-20 *3 :4; 
!!VRy-22:Sy-20 *2 :3; 
!!VRy-23:Sy-20 :2; 
!!VRy-24:Sy-20 :3;
!!VRy-25:Sy-20 *3 :4; 
!!VRy-26:Sy-20 :10;

!!if&1000;
  !!IF:M1/z114004;

  !!if&y-20=100;
    !!IF:G1/1/256/114013/114034/114035/114036/114037/114038/114039/114040/114021/114022;
  !!el;
    !!IF:G1/1/256/114013/114014/114015/114016/114017/114018/114019/114020/114021/114022;
  !!en;
!!en;

!!FU&v1=256:E; // exit if No Transformation is selected

!!VRy1&v1=1:Sy-20; // 100 SP or max Mana
!!VRy1&v1=2:Sy-21; 
!!VRy1&v1=4:Sy-22; 
!!VRy1&v1=8:Sy-23; 
!!VRy1&v1=16:Sy-24; 
!!VRy1&v1=32:Sy-25;
!!VRy1&v1=64:Sy-26; 
!!VRy1&v1=128:S0; // invested mana = chance

!!VRy98:Sy19 -y1; // get new mana (total - invested)

!!if&1000;
  !!HE(CURRENT_HERO):Iy98; // decrease mana of visiting hero if he is no AI
!!el;
  !!VRy1:S100; // AI has a 100 % chance to convert without mana costs
!!en;

** ask for the town type you want

!!if&1000;
  !!IF&y1>0:G1/1/1/114033/114023/114024/114025/114026/114027/114028/114029/114030/114031/114032/114022;
  !!FU(IntLog2):Pv1/?y2;

  ; Set neutral town
  !!if&y2=9;
    !!VRy2:S(NO_TOWN);
  !!el&y2>=10;
    !!FU:E; // exit if No Transformation is selected
  !!en;
; set town to hero's native town if AI visits
!!el;
  !!HE(CURRENT_HERO):B2/?y99;          [Get type of hero of AI]
  !!VRy2:Sy99 :2;
!!en;

; Set Altar right-click text to show it has been visited this week
; This value also determines if the Altar may be visited or not
!!PO998:N1;

!!DO(transAlt_CheckMonRoutine)/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST)/1:Py2/y1; // call transform-routine for each slot

 [If hero visits altar, display this message]
!!if&1000;
  !!SN:D;
  !!SN:P^TELPTOUT^; // make teleport sound

  !!VRz3:Sz114006 +z114007;
  ; Show msg about not being transformed if appropriate
  !!VRz3|209/210/211:+^

^ +z114041;
  ; Check if pictures exists
  !!VRz2:S^..\data\s\pic\script14.jpg^;
  !!UN:J8/2/2; [Check if file z2 is present in Data\s folder: Flag 1=0 if file missing]

  !!if&1;
    !!IF:D7/3/0/0/2/0/0/0/114012/0/0/0/0/0/0/0; [Set up custom dialogue box]
    !!IF:F7/0/0/0/0/0; [Disable Cancel button]
    !!IF:E1/7; [Display Custom Dialogue]
  !!el;
    !!IF:M1/z3; // if picture not exists show usual message
  !!en;
!!en;

!!PM998:V(FALSE);  [Set Altar to tell AI it has been visited this week]

----------------------------------------------------------------------------------------

 [Start of function to convert each creature stack to new town type (x1)]
!?FU(transAlt_CheckMonRoutine);
!#VA(townDesired:x) (chance:x);

 [Stores monster type found in hero's slot x16 in variable (mon), number in (qty)]
!!HE(CURRENT_HERO):C0/x16/?(mon:y)/?(qty:y);
!!FU&(mon)<0:E; // exit if slot is empty

!!MA:L(mon)/?(level:y); // Store creature's level in (level)

 [Set correct level for higher-level creatures]
!!if&(level)>=6;
  !!MA:F(mon)/?(fv:y) F(MON_BLOOD_DRAGON)/?(fvBloodDragon:y) F(MON_DARKNESS_DRAGON)/?(fvDarknessDragon:y);
  ; Set to level 8 if the creature is stronger than Blood Dragon
  !!if&(fv)>=(fvBloodDragon)/(fv)<=(fvDarknessDragon);
    !!VR(level):S7;
  ; If creature is more powerful than Darkness Dragon, set flag 209 to true
  !!el&(fv)>(fvDarknessDragon);
    !!VR(level):S99;
    !!IF:V209/(TRUE);
  !!en;
!!en;

; If creature is a God's Representative (level 12), set flag 211 to true
!!if&(mon)>=(MON_EMISSARY_OF_WAR)/(mon)<=(MON_EMISSARY_OF_LORE);
  !!VR(level):S99; [Emissaries]
  !!IF:V211/(TRUE);
; If creature is a ghost
!!el&(mon)=(MON_GHOST);
  !!VR(level):S99; // do not convert ghosts
  !!IF:V210/(TRUE);
!!en;

 [Convert the creature]
!!FU(transAlt_ConvertMon)&(level)<=7:P(mon)/(level)/(qty)/x16/(townDesired)/(chance); // give old type / level / number / slot / new town type / chance to convert correct

----------------------------------------------------------------------------------------

 [Start of function to convert level 7 or lower creatures]
!?FU(transAlt_ConvertMon);
!#VA(mon:x) (level:x) (qty:x) (slot:x) (townDesired:x) (chance:x);

; Get real new town
!!VR(random:y):R0/0/100; // random 0-100

; Set to wanted new town type; set it to the random if odds are bad
!!if&(random)<=(chance);
  !!VR(townNew:y):S(townDesired);
!!el;
  !!VR(townRandom:y):R0/(NO_TOWN)/(TOWN_LAST_WOG);
  !!VR(townNew):S(townRandom);
!!en;

!!MA:O(mon)/?(town:y);

!!if&(townNew)>=(TOWN_FIRST)/(townNew)<=(TOWN_LAST_WOG);
  !!if&(level)<7;
    !!UN:T(townNew)/(level)/(FALSE)/?(monNew:y); // get new monster type (town, Lvl, upgr) (if no neutral creature and Level 1-7)
  !!el;
    !!VR(monNew):S(townNew) +(MON_SUPREME_ARCHANGEL);  // L8-Units (town typ + 150)
  !!en;
!!el;
  !!FU(transAlt_GetNeutralMon):P(mon)/(level)/(FALSE)/?(monNew); // If town type is Neutral, calculate creature
!!en;

!!HE(CURRENT_HERO):C0/(slot)/(monNew)/d/0/3; // change creatures in the targeted slot to new type, don't change their quantity and experience

----------------------------------------------------------------------------------------

 [Start of function to calculate Neutral creatures, Return in v1]
!?FU(transAlt_GetNeutralMon);
!#VA(mon:x) (level:x) (isUpgr:x) (result:x);

; Initialize valuable
!!VR(result):S(mon);
; Get random numbers
!!VR(random:y):R0/1/2;                  [Random number 1..2]
!!VR(randomAlt:y):R0/1/3;               [Random number 1..3]

!!if&(isUpgr)=(FALSE);
  !!VR(result)&(level)=0:S(MON_HALFLING);    [Halfling]            - Level 1
  !!VR(result)&(level)=1:S(MON_ROGUE);       [Rogue]               - Level 2
  !!VR(result)&(level)=2:S(MON_MUMMY);       [Mummy]               - Level 3
  !!VR(result)&(level)=3:S(MON_SHARPSHOOTER);[Sharpshooter]        - Level 4
  !!VR(result)&(level)=4/(randomAlt)=1:S(MON_ARCTIC_SHARPSHOOTER); [Arctic Sharpshooter] - Level 5
  !!VR(result)&(level)=4/(randomAlt)=2:S(MON_LAVA_SHARPSHOOTER); [Lava Sharpshooter]   - Level 5
  !!VR(result)&(level)=4/(randomAlt)=3:S(MON_GOLD_GOLEM); [Gold Golem]         - Level 5
  !!VR(result)&(level)=5/(randomAlt)=1:S(MON_ENCHANTER); [Enchanter]            - Level 6
  !!VR(result)&(level)=5/(randomAlt)=2:S(MON_SORCERESS); [Sorceress]            - Level 6
  !!VR(result)&(level)=5/(randomAlt)=3:S(MON_DIAMOND_GOLEM); [Diamond Golem]       - Level 6
  !!VR(result)&(level)=6:S(MON_GORYNYCH);    [Gorynych]             - Level 7
; Convert the creature to upgraded ones (not used for now)
!!el;
  !!VR(result)&(level)=0:S(MON_HALFLING);    [Halfling]            - Level 1 Upgraded
  !!VR(result)&(level)=1:S(MON_BOAR);        [Boar]                - Level 2 Upgraded
  !!VR(result)&(level)=2/(random)=1:S(MON_NOMAD);  [Nomad]               - Level 3 Upgraded
  !!VR(result)&(level)=2/(random)=2:S(MON_SANTA_GREMLIN); [Santa Gremlin]       - Level 3 Upgraded
  !!VR(result)&(level)=3/(random)=1:S(MON_WEREWOLF);[Werewolf]            - Level 4 Upgraded
  !!VR(result)&(level)=3/(random)=2:S(MON_TROLL);  [Troll]               - Level 4 Upgraded
  !!VR(result)&(level)=4:S(MON_ZEALOT);      [War Zealot]          - Level 5 Upgraded
  !!VR(result)&(level)=5/(random)=1:S(MON_NIGHTMARE); [Nightmare]            - Level 6 Upgraded
  !!VR(result)&(level)=5/(random)=2:S(MON_HELL_STEED); [Hell Steed]           - Level 6 Upgraded
  !!VR(result)&(level)=6:S(MON_GORYNYCH);    [Gorynych]             - Level 7 Upgraded
!!en;

; Convert the creature to level 8
!!VR(result)&(level)=7:S(MON_FAERIE_DRAGON); [Faerie Dragon]        - Level 8


** End of Script **
