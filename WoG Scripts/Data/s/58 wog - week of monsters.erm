ZVSE2

** Updated: September 16, 2004
** Updated: June 2022 by Archer30

** Week of Monsters ERM Script Version 1.7 created by Timothy Pulver
** with minor modifications by Anders Jonnson
** and suggestions by Donald X. Vaccarino and the Qurqirish Dragon
** Requires WoG version 3.57 or later using ERM version 2.6 or later.

** This script replaces the standard "Week of the" results that appear each
** day 1, as well as eliminating the monthly "Month of the" results that
** "double population" and place new monsters on the map. Plague is also
** eliminated.

** Instead, EVERY week except week 1 is a week of a monster. This gives
** all monsters of that type a 33% bonus (rounding down but with a minimum
** bonus of +1) to Attack, Defense, Health, Speed, Damage, and a 50%
** bonus to Growth for the entire week. If the monster type is neutral, rather
** than one that may be recruited from a town, there is no Growth bonus.

** There are also weeks of the various War Machines but these bonuses are
** more limited -- usually to health and defense but sometimes also to
** attack and damage.

** To install this script in a map, simply copy & paste the code into a global
** (timed) event. Copy the entire code, from ZVSE to the end. Make sure
** that you disable ALL colours from receiving the event and/or change
** the event day to something like 500 or later to avoid the ERM script
** popping up as if it were a regular event message. The title of the event
** is unimportant, but I would suggest something like "Week of Monster".
** Have fun and enjoy the Monster Mash! :-)

** Version 1.1 adds a check for the Diety of Fire - if it's present, it will be
** "Week of the Imp" (with +15 Imp *and* +15 Familiar Growth).

** Version 1.2 adds special weeks for resources where mines of that type
** produce double the number (e.g., 2 crystals for Week of the Sparkling
** Crystals, 4 Wood for  Week of the Woodcutter).

** Version 1.3 switches from totally random monster weeks to a monster that
** is present in a hero's army, cycling through all the players in a random
** fixed order. Once per cycle, a completely random monster week will still
** occur, as well as a resource week. This version also adds some wandering
** monsters if it's a monster week or some resource piles if it's a resource
** week. In addition, any Refugee Camps on the map will offer the monster of
** the week unless it's a war machine or resource week in which case it's
** random as normal. Also, week 1 will always be a level 1 monster. The last
** feature this version adds is a reminder of the week's monster and bonuses
** by right-clicking on the End-Turn button.

** Version 1.4 fixes a bug with Imps not growing at all if a Diety of Fire
** is built.

** Version 1.5 is updated to work with new creatures in 3.58. It also reworks
** a function so that it's not recursive and prevents there being more than 48
** Wandering Monsters on a map at any one time due to the slow-downs that
** too many WMs cause.

** Version 1.6 makes the Refugee Camp synchonization a separate option so it
** can be disabled if desired. It also fixes a few related bugs.

** Version 1.7 gives Warlord's Banners to 33% of wandering/stationary monsters.

** Version 1.8 reduces the chance of generating Warlord's Banners to 10%. Added
** support for new monsters declared in FU(GetMaxMonsterId).

--------------------------------------------------------------------------------------

Flags Used in this Script: 1, 2, 56, 170-172, 205, 412
v Variables used: v1-v7, v166-v200, v205, v361-v367, v372-v373, v1200-v1210
z Variables used: z190-z199, z495
Functions used: FU(WOG_20P_ManageDietyOfFire)-FU184, FU5301-FU5310, FU8000
ERM Numbers used: 20, 134, 135, 136, 172, 200

--------------------------------------------------------------------------------------

 [Initialize variables]
!#VRv170:S-100;
!#VRv180:S0;
!#IF:V412/1;

 [Set up selection for player cycle for monster type selection]
!#VRv372:R0/0/9; [Random number for "X" for selecting next player]
!#VRv373:R0/1/9; [Random number for selecting "R" for selecting a player - constant]

!#VRv1200:C-1/-1/-1/-1/-1/-1/-1/-1/-1/-1;

 [Check if script is enabled: if it is, set flag 56 to true]
!#UN:P20/?v1;
!#IF&v1=1:V56/1;

--------------------------------------------------------------------------------------

 [Right-Click on End-Turn button will display current week's monster]
!?FU(OnAdventureMapRightMouseClick)&56;

!!CM:S?v1 I?v2; [Check if it's a right-click on the End-Turn button]

 [Set up v3 and v4 for type/subtype of message display picture]
!!if&v170>=0;
  !!VRv3:S21;
  !!VRv4&v170>=0:Sv170;
!!el&v170<0/v170<>-100;
  !!VRv3:Sv170 *-1 -1;
  !!VRv4:S0;
!!en;

 [Display Week of Monsters info]
!!if&v1=14/v2=12;
  !!if&v170<>-100;
    !!IF:Q1/v3/v4/4^%Z495^;
  !!el;

 [Display the following if it's the first week]
    !!IF:Q1/-1/-1/4/z120000;
  !!en;

  !!CM:R0; [Disable standard right-click message]
!!en;

--------------------------------------------------------------------------------------

>>[Set up new bonuses for "Week of" monster]
  [Only if Flag 56 is true meaning script is enabled]
!?FU(WOG_OnNewWeek)&56;

!!VRv188:Sc; [Set v188 to current day]

 [Continue command only if first time executed this day]
 [Also: only if Flag 56 is true - set in Map Enhancement dialogue box]
!?FU(WOG_OnNewWeek)&56/v189<v188;

!!VRv189:Sc; [Set day check to current day]

 [Function 181 checks if Diety of Fire is built and if so, makes it Week of the Imp]
!!FU(WOG_20P_ManageDietyOfFire):P;      [This is excuted twice every week, why?]

!!VRz190:S^^;  [Initialize z190 to a null string]

!!if&-171;
  !!VRv190:Sv181 :3;  [Calculate 33% bonus to Attack - store in v190]
  !!VRv190&v190=0/v180<>(MON_FIRST_AID_TENT)/v180<>(MON_AMMO_CART):S1;  [If 33% bonus = 0, set to 1]
  !!VRv191:Sv181 +v190;  [New Attack value - store in v191]
  !!VRz191:Sz120001;  [Attack bonus string - store in z191]
  !!VRz190&v180<>(MON_FIRST_AID_TENT)/v180<>(MON_AMMO_CART):+z191;  [Add Attack bonus string to z190]

  !!VRv190:Sv182 :3;  [Calculate 33% bonus to Defense - store in v190]
  !!VRv190&v190=0:S1;  [If 33% bonus = 0, set to 1]
  !!VRv192:Sv182 +v190;  [New Defense value - store in v192]
  !!VRz192:Sz120002;  [Defense bonus string - store in z192]
  !!VRz190:+z192;  [Add Defense bonus string to z190]

  !!VRv190:Sv186 :3;  [Calculate 33% bonus to Damage High - store in v190]
  !!VRv190&v190=0/v180<>(MON_FIRST_AID_TENT)/v180<>(MON_AMMO_CART):S1;  [If 33% bonus = 0, set to 1]
  !!VRv195:Sv185 +v190;  [New Damage Low value - store in v195]
  !!VRv196:Sv186 +v190;  [New Damage High value - store in v196]
  !!VRz196:Sz120003;  [Damage bonus string - store in z196]
  !!VRz190&v180<>(MON_FIRST_AID_TENT)/v180<>(MON_AMMO_CART):+z196;  [Add Damage bonus string to z190]

  !!VRv190:Sv184 :3;  [Calculate 33% bonus to Health - store in v190]
  !!VRv190&v190=0:S1;  [If 33% bonus = 0, set to 1]
  !!VRv194:Sv184 +v190;  [New Health value - store in v194]
  !!VRz194:Sz120004;  [Health bonus string - store in z194]
  !!VRz190:+z194;  [Add Health bonus string to z190]

  !!VRv190:Sv183 :3;  [Calculate 33% bonus to Speed - store in v190]
  !!VRv190&v190=0/v180<>(MON_CATAPULT)/v180<>(MON_BALLISTA)/v180<>(MON_FIRST_AID_TENT)/v180<>(MON_AMMO_CART):S1;  [If 33% bonus = 0, set to 1]
  !!VRv193:Sv183 +v190;  [New Speed value - store in v193]
  !!VRz193:Sz120005;  [Speed bonus string - store in z193]
  !!VRz190&v180<>(MON_CATAPULT)/v180<>(MON_BALLISTA)/v180<>(MON_FIRST_AID_TENT)/v180<>(MON_AMMO_CART):+z193;  [Add Speed bonus string to z190]

  !!VRv190:Sv187 :2;  [Calculate 50% bonus to Growth - store in v190]
  !!VRv190&v190=0:S1;  [If 50% bonus = 0, set to 1]
  !!VRz197:Sz120006;  [Growth bonus string - store in z197]
  !!VRv197:Sv187 +v190;  [New Growth value - store in v197]
  !!VRz190&v180<>(MON_GOLD_GOLEM)/v180<>(MON_DIAMOND_GOLEM)/v180<(MON_PHOENIX):+z197;  [Add Growth bonus string to z190]
!!en;

 [Sets up "Week of" monster with appropriate text]
!!if&-172;
  !!UN:N3/197/v180/0; [Lookup monster name - singular]
  !!UN:N3/198/v180/1; [Lookup monster name - plural]
!!en;

 [Set up "Week of" dialog box text string]
!!if&-171;
  !!VRz199:Sz120007;
!!el;

  ; Special, preset Dialogue for Week of the Imp from Diety of Fire
  !!VRz199:Sz120008;
!!en;

 [If week is "Week of Resources", set up special text]
!!FU183&v180<0/v180<>-100/-171:P;

!!UN:K1/1 K2/199 M1; [Change "Week of" text and disable possible "Month of" results]

 [Restore previous "Week of" monsters default Growth rate unless 1st monster week]
!!MA&170:Gv170/v177;

 [Set new "Week of" monsters Growth rate unless it's Week of Resources]
!!MA&-172:Gv180/v197;

 [If this week is Week of the Imp from the Diety of Fire, set new Imp values]
!!MA&171:A42/3 D42/4 S42/6 P42/5 M42/2 E42/3 G42/15;

--------------------------------------------------------------------------------------

>>[Set new "Week of" monster values and restore old ones]
  [Only if Flag 56 is true meaning script is enabled]
!?FU(OnEveryDay)&i^timerWeekday^=1/56;

 [Set z495 equal to z199 for End-Turn button right-click display]
!!VRz495:Sz199;

!!VRv179:Sc; [Set v179 to current day]

 [Continue command only if first time executed this day]
 [Also: only if Flag 56 is true - set in Map Enhancement dialogue box]
!?FU(OnEveryDay)&i^timerWeekday^=1/56/v178<v179;

!!VRv178:Sc; [Set day check to current day]

!!FU8000&v178<>1:P; [Set new stats if it's not day 1]

 [Store previous week's default monster values in v171-v177 - v170 = previous monster number]
 [Don't store if it's Week of the Imp (Flag 171 set) or Week of Resources (Flag 172 set)]
!!if&v178<>1;
  !!VRv170:Sv180;

  !!if&-171/-172;
    !!VRv171:Sv181;
    !!VRv172:Sv182;
    !!VRv173:Sv183;
    !!VRv174:Sv184;
    !!VRv175:Sv185;
    !!VRv176:Sv186;
    !!VRv177:Sv187;
  !!en;
!!en;

 [Function 5300 calculates the next player to base this week's monster type on]
!!FU(WOG_20_GetBasicTypeOfWeek):P;      [v372 is changed here]

 [Function 180 gets number for new "Week of" monster and stores in v180]
!!FU(WOG_20_SetActualTypeOfWeek):P;

 [Function 181 checks if Diety of Fire is built and if so, makes it Week of the Imp]
!!FU(WOG_20P_ManageDietyOfFire):P;

 [Store "Week of" monster's default values in v181-v187 unless it's Week of Resources]
!!MA&v180>=0:Av180/?v181 Dv180/?v182 Sv180/?v183 Pv180/?v184 Mv180/?v185 Ev180/?v186 Gv180/?v187;

---------------------------------------------------------------------------------------

!?FU8000;

 [Restore previous "Week of" monsters default values unless 1st monster week]
 [or if previous week was a Week of Resources]
!!MA&170/v178>8:Av170/v171 Dv170/v172 Sv170/v173 Pv170/v174 Mv170/v175 Ev170/v176;
!!IF:V170/1; [Flag is set to indicate no longer first monster week]

!!IF&172:V170/0; [If week is Week of Resources, reset "1st week flag" for next week]

 [Set new "Week of" monster values unless it's Week of Resources or Week of Imp from Diety of Fire]
!!MA&-171/-172:Av180/v191 Dv180/v192 Sv180/v193 Pv180/v194 Mv180/v195 Ev180/v196;

[Setup Imp's new stats if Week of Imp from Diety of Fire]
!!MA&171:A42/3 D42/4 S42/6 P42/5 M42/2 E42/3 G42/15;

!!VRv205&v180<0/v180<>-100:Sv180;  [Copy to v205 if week of the resource]
!!VRv205&v180>=0:S0;               [Reset if it's not]

--------------------------------------------------------------------------------------

>>[Calculates the next player to base monster type on]
!?FU(WOG_20_GetBasicTypeOfWeek);
; Create a new array for all the valid options of the week with 2 elements
!!FU(NewIntArray):P2/?(weekOptions:y);
; Set up initial elements (8 for a random monster from the pool, 9 for a random resource)
!!SN:V(weekOptions)/0/8/9;

!!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  !!OW:Ii/d/?(isAlive:y);

  !!FU(Array_Push)&(isAlive):P(weekOptions)/i;
!!en;

!!SN:M(weekOptions)/?(size:y);
!!VR(lastIndex:y):S(size) -1;
!!VR(random:y):R0/0/(lastIndex);
!!SN:M(weekOptions)/(random)/?v372;

--------------------------------------------------------------------------------------

>>[Gets number for new "Week of" monster and stores in v180]
!?FU(WOG_20_SetActualTypeOfWeek);

!!VRv180:S-100;  [Initialize new monster number to -100]
!!VRy9:S0;

!!IF:V172/0;  [Initialize flag 172 to false]

 [Check previous monster week for a given player]
!!VRy3:S1200 +v372;
!!VRy4:Svy3;

!!VRy1:R0/(HERO_FIRST)/(HERO_LAST_WOG); [Random start number for choosing a hero]
!!VRy2:Sy1 -1;  [End number for second loop]

!!if&v180=-100;
  !!if&v372<8;
    !!DO5301/y1/(HERO_LAST_WOG)/1:Py4;[Random monster type is based on a hero's army stack]
    !!DO5301/0/y2/1&y1>0:Py4; [2nd part of loop]
  !!en;

  !!VRy9&v372<9:S1; [If no monster found in hero's army choose random monster: y9=1]
!!en;

!!VRy9&v372=8:S1; [If random monster week, choose random monster: y9=1]

 [Random # for "Week of" monster, excluding "not used", Emissaries, Commanders if v372=8]
!!if|v372=8/y9=1;
  !!FU(WOG_20_GetRandomMonWithExclusion):Pv170/y4/?v180;
; Random resource week if v372=9
!!el&v372=9;
  !!VRv180:R0/-7/-1; [Random number for resource week]
  !!IF:V172/1;  [If week is less than 0 (but not -100), it's a resource week - set flag 172 to true]
!!en;

!!VRy5:Sc;  [set y5 to current day]
!!VRy6:Sy5 -1; [set y6 to current day -1]
!!VRy6::7; [set y6 to current week -1]
!!VRy6:+1; [set y6 to current week]
!!VRy10:Sy6 :2; [Half of current week]
!!VRy10&y10<1:S1;

!!if&v180>=0;
  !!MA:Lv180/?y7; [Store monster level (0-6) in y7]
  !!VRy7:+1;      [set y7 to "true" monster level (1-7)]
!!en;

 [Keep track of previous monster weeks for each player]
!!VRvy3:Sv180;

 [Place some wandering monster stacks and resources of this type unless it's the first week]
 [Don't call function if it's a war machine or ghost]
!!VRy8:S1; [Assume wandering monster stacks and resources can be placed]
!!VRy8&v170=-100:S0; [Must have been a monster chosen]
!!VRy8&v170>=(MON_AZURE_DRAGON)/v170<=(MON_RUST_DRAGON):S0; [No Level 8 Neutral Dragons]
!!VRy8&v170>=(MON_CATAPULT)/v170<=(MON_SACRED_PHOENIX):S0; [No War Machines or Level 8 Monsters]

!!UN:P135/?y15; [y15=1 if wandering monsters are enabled]
!!UN:P136/?y16; [y16=1 if stationary monsters are enabled]
!!VRy8&v170>=0/y15=0/y16=0:S0; [Don't call if a monster week and wandering and stationary monsters are both disabled]

!!UN:P134/?y17; [y17=1 if resource piles are enabled]
!!VRy8&v170<0/y17=0:S0; [Don't call if resource week and resource piles are disabled]

!!if&v170>=0;
  !!MA:Lv170/?y11; [Store monster level (0-6) in y11]
  !!VRy11:+1;      [set y11 to "true" monster level (1-7)]
!!el;
  !!VRy11:S0;       [set y11 to 0 if it's a resource week]
!!en;

!!VRy12:Sc; [Set y12 to current day]

!!FU5303&y8=1/y6>1/y6>=y11/y12<>v1210:P; [Place wandering monster stacks or resources]

 [Store v170 in y13 for purposes of changing Refugee Camps]
 [If week 1, set it to a level 1 creature]
!!VRy13:Sv170;

!!if&v170=-100;
  !!VRy14:S0 R8;
  !!VRy13:Sy14 *14;
  !!VRy13&y14=8:S118;
  !!VRy13:R1; [Add 0 or 1 for possible upgraded level 1]
!!en;

 [Change monster type of Refugee Camp to match "week of" Monster type]
 [Don't call function if it's a war machine, resource week or disabled]
!!UN:P200/?y19; [Check if Refugee Camp synchronization is enabled: y19]
!!FU(WOG_20_SyncRefugeeMonster)&y19=1/y13>=0/v170<>(MON_CATAPULT)/v170<>(MON_BALLISTA)/v170<>(MON_FIRST_AID_TENT)/v170<>(MON_AMMO_CART):Py13;

!?FU(WOG_20_GetRandomMonWithExclusion);
!#VA(excludeMon1:x) (excludeMon2:x) (mon:x);

!!VR(mon):S(NO_MON);
!!FU(GetMaxMonsterId):P?(lastMon:y);
!!FU(NewIntArray):P?(validMons:y);

!!re i/(MON_FIRST)/(lastMon);
  !!co|i=(MON_NOT_USED_1)/i=(MON_NOT_USED_2)/i=(MON_NOT_USED_3)/i=(MON_NOT_USED_4);
  !!co&i=(MON_ARROW_TOWERS);            [War Machines are valid except for Arrow Towers!]
  !!co&i>=(MON_EMISSARY_OF_WAR)/i<=(MON_EMISSARY_OF_LORE);
  !!co&i>=(MON_COMMANDER_FIRST_A)/i<=(MON_COMMANDER_LAST_D);

  !!FU(Array_Push):P(validMons)/i;
!!en;

!!SN:M(validMons)/?(size:y);

!!if&(size)>0;
  !!FU(Array_Shuffle):P(validMons);

  ; Loop for 5 times at most to find a monster not the same as the excluding monsters
  !!re i/0/4;
    !!FU(Array_Pop):P(validMons)/?(mon);

    !!br&(mon)<>(excludeMon1)/(mon)<>(excludeMon2);
  !!en;
!!en;

--------------------------------------------------------------------------------------

>>[Function 5301 locates a hero owned by the current player in the cycle to]
  [select a random troop type from]
!?FU5301;

!!HEx16:O?y1; [Check who owns hero]

!!VRy2:S(ARMY_SLOT_FIRST) R(ARMY_SLOT_LAST);  [Random starting stack number]
!!VRy3:Sy2 -1; [End number for second loop]

!!if&y1=v372/v180=-100;
  !!DO5302/y2/6/1:Px16/x1; [If a valid hero is found, call function loop 5302]
  !!DO5302/0/y3/1&y2>0:Px16/x1; [2nd part of loop]
!!en;

!!VRx16&v180<>-100:S999;  [Exit loop if a monster type is chosen]

--------------------------------------------------------------------------------------

>>[Function 5302 locates a monster stack from the]
  [chosen hero to use for this week's monster type]
!?FU5302;

 [Check monsters in hero's slot number x16 - store type in y1, number in y2]
!!HEx1:C0/x16/?y1/?y2;

 [Set monster type (v180) to y1 if y2 is greater than 0
 [and monster is different from previous week]
!!if&y2>0/y1<>v170/y1<>x2;
  !!VRv180:Sy1;

 [Exit loop if acceptable monster stack found]
  !!VRx16:S999;
!!en;

--------------------------------------------------------------------------------------

>>[Function 181 checks if Deity of Fire is built, and if so, makes it Week of the Imp]
!?FU(WOG_20P_ManageDietyOfFire);

!!UN:U98/3/?y1; [Count Infernos]
!!IF:V171/0;
!!VRv198:S-1; [Initialize v198 to -1 so that UN:U will work correctly]
!!DO182/1/y1/1&y1>0:P; [Check all Infernos for Grail - if Flag 171 is set, there's a Grail]

!!VRv180&171:S42; [If Deity of Fire present, set it to Week of Imp]
!!IF&171:V172/0;  [If Deity of Fire present, set Week of Resource flag to false]

--------------------------------------------------------------------------------------

>>[Function 182 checks each Inferno to see if Diety of Fire is built]
  [and set sets Flag 171 if it is]
!?FU182;

!!UN:U98/3/-1/198;  [store location of Inferno in v198-v200]
!!CA198:B3/26; [set Flag 1 if Grail found]
!!IF&1:V171/1; [set Flag 171 if Grail found]

--------------------------------------------------------------------------------------

>>[If week is "Week of Resources", set up special text]
!?FU183;

!!VRz199&v180=-1:Sz120009; [Wood]
!!VRz199&v180=-2:Sz120010; [Mercury]
!!VRz199&v180=-3:Sz120011; [Ore]
!!VRz199&v180=-4:Sz120012; [Sulfur]
!!VRz199&v180=-5:Sz120013; [Crystal]
!!VRz199&v180=-6:Sz120014; [Gems]
!!VRz199&v180=-7:Sz120015; [Gold]

--------------------------------------------------------------------------------------

>>[Set up new bonuses for "Week of Resources" if flag 173 set to true]
  [Also: only if Flag 56 is true - set in Map Enhancement dialogue box]
!?FU(OnEveryDay)&i^timerWeek^>=2/56/v205<0/v205<>-100;

!!VRv169:S0; [Initialize v169 to 0]

!!OW:C?y-1;           [Get current player - store in y-1]
!!VRy-2:Sv205 *-1 -1; [Get resource type - store in y-2]

!!UN:U53/y-2/?y-3;    [Count number of mines of bonus type - store in y-3]
!!UN:U53/7/?y-4;     [Count number of abandoned mines - store in y-4]

 [Count number of mines of bonus type owned by current player]
!!VRv166:S-1; [Initialize v166 to -1 so UN:U will work correctly]
!!DO184/1/y-3/1&y-3>0:Py-1/y-2/y-2;

 [Count number of abandoned mines of bonus type owned by current player]
!!VRv166:S-1; [Initialize v166 to -1 so UN:U will work correctly]
!!DO184/1/y-4/1&y-4>0:Py-1/7/y-2;

 [Calculate and give bonus resources]
!!if&v169>0;
  !!VRv169&y-2=0:Sv169 *2;     [Wood x 2]
  !!VRv169&y-2=2:Sv169 *2;     [Ore x 2]
  !!VRv169&y-2=6:Sv169 *1000;  [Gold x 1000]
!!en;

!!OW:Ry-1/y-2/dv169;

--------------------------------------------------------------------------------------

>>[Count number of mines of bonus type owned by current player]
!?FU184;

!!UN:U53/x2/-1/166;           [Get coordinates of each mine - v166/v167/v168]
!!MNv166/v167/v168:O?y1/1 R?y2/1;  [Get owner of mine (y1) and resource type (y2)]

 [v169 counts # of mines of bonus type belonging to current player]
!!VRv169&y1=x1/y2=x3:+1;

--------------------------------------------------------------------------------------

>>[Place some wandering monster stacks or random resources]
!?FU5303;

 [Set v1210 to current day]
!!VRv1210:Sc;

 [Get size of map (y1) and if it has an underground (y2=0 for no, 1 for yes)
!!UN:X?y1/?y2;
!!VRy9:Sy1 -1; [Map size for loop purposes]

 [Store v170 in y6 - convert value for resource week]
!!VRy6:Sv170;
!!VRy6&y6<0/y6<>-100:*-1 -1;

 [Set y7 to object number 54 for a monster and 79 for a resource]
!!VRy7:S54;
!!VRy7&v170<0/v170<>-100:S79;

 [Set y8 to number of monsters or resources appearing (resources = number x 2)]
!!VRy8:S0;
!!VRy8&y1<=36:S1; [Small map]
!!VRy8&y1>36/y1<=72:S2; [Medium map]
!!VRy8&y1>72/y1<=108:S4; [Large map]
!!VRy8&y1>108/y1<=144:S6; [Extra Large map]
!!VRy8&y1>144/y1<=180:S8; [Huge map]
!!VRy8&y1>180/y1<=216:S10; [Extra Huge map]
!!VRy8&y1>216:S12; [Giant map]
!!VRy8&v170<0/v170<>-100:*2; [Double for resources]

 [Calculate base creature numbers - store in y4]
!!if&v170>=0;
  !!MA:Gv170/?y3;  [Enhanced base value (+50% for Town creatures)]
  !!VRy4:Sc-1;  [Day minus 1]
  !!VRy4:Sy4 :7;  [Week number -1]
!!en;

!!VRy4:+1; [Week number]

!!if&v170>=0;
  !!VRy10:Sy3 :2; [Half of enhanced base value (rounded down)]
  !!VRy10&y10<1:S1; [Make sure y10 is at least 1]
  !!VRy5:Sy10 *y4; [Half enhanced base value x number of weeks]
  !!MA:Fv170/?y30 F(MON_BLOOD_DRAGON)/?y31; [Get the fight values of the creature and Blood Dragon]
  !!VRy5&y30>=y31::2; [Halve the number if it's a OP monster (fight value >= Blood Dragon)]
  !!VRy5&v170>=0/y3<1:S1; [Make sure y5 is at least 1]
!!en;

 [Generate random resource amount - store in y5]
!!if&v170<0/v170<>-100;
  !!VRy5:S3;
  !!VRy5|y6=0/y6=2:S5;
!!en;

 [Check if there are enough wandering monsters on the map]
!!if&y7=(OBJ_MONSTER);
  !!UN:P135/?y30;

  !!if&y30;
    !!FU(WOG_20_GetWanderingMonsterAvailQty):P?y31; [y31 = available wandering monster slots]
    !!VRy8:F0/y31;
  !!en;
!!en;

 [Set v3 and v4 to 0]
!!VRv3:S0;
!!VRv4:S0;

 [Place monsters/resources on upper level]

!!DO5304/1/y8/1:Py9/0/y5/y6/y7/y8/y3;

 [exit if the map has no underground]
!!FU&y2<>(TRUE):E;

 [Check if there are enough wandering monsters on the map]
!!if&y7=(OBJ_MONSTER)/y30;
  !!VRy32:Sy31 -y8;
  !!FU&y32<=0:E;                        [y32 = available wandering monster slots for underground]

  !!VRy8&y8<=y32:Sy8;
  !!VRy8&y8>y31:Sy32;
!!en;

 [Set v3 and v4 to 0]
!!VRv3:S0;
!!VRv4:S0;

 [Place monsters/resources on lower level if it exists]
!!DO5304/1/y8/1:Py9/1/y5/y6/y7/y8/y3;

--------------------------------------------------------------------------------------

>>[Place monster stacks]

  [x1=map size-1, x2=map level (0 or 1), x3=monster stack size/resource amount]
  [x4=resource type, x5=object type: monster(54) or resource (79), x6=# of stacks to place]
  [x7=enhanced monster growth value, x16=function loop number]

!?FU5304;
!!VRy10:S0 Rx1; [Random x value]
!!VRy11:S0 Rx1; [Random y value]
!!TRy10/y11/x2:T?y1/d/d/d/d/d/d/d; [Check terrain type]
!!OBy10/y11/x2:T?y3; [Check object type for free square]

!!UN&y1<8/y3=0:Iy10/y11/x2/x5/x4; [Place monster or resource on empty land square only]
!!VRy2&v170>=0/y1<8/y3=0:Sx3 Rx7; [Random number for number of monsters]
!!VRy12:S4 R6; [Random aggression level from 4 to 10: y12]
!!MOy10/y11/x2&v170>=0/y1<8/y3=0:O0 U0 Ry12/1 Gy2; [Set number of monsters, aggression, etc.]
!!VRy14:R0/0/9; [Random number 0..9: y14]

!!UN:P234/?y15; [Check if Warlord's Banner are disabled: y15=1 if disabled]
!!MOy10/y11/x2&v170>=0/y1<8/y3=0/y14=0/y15<>(TRUE):A(ART_WARLORDS_BANNER); [25% chance of carrying a Warlord's Banner]

!!if&v170<0/v179<>-100/y1<8/y3=0;
  !!VRy5:Sx3 Rx3; [Random number for value of resource pile]
  !!ARy10/y11/x2:Vy5; [Set value of resource pile]
!!en;

!!UN:P135/?y6; [y6=1 if wandering monsters are enabled]

!!if&v170>=0/y1<8/y3=0/y6=1;
  !!MW:My10/y11/x2/?y5; [Make monster a wandering monster: y5=WM number]
  !!MWy5:A2/0/0/0 A3/0/0/0/0/0/0/0; [Set WM defaults]
!!en;

!!VRx16&y3<>0/x16>0:-1; [Extend loop if a free space isn't available]

!!if&y3=0;
  !!VRx16&y1>=8/x16>0:-1; [Extend loop if terrain type is wrong]
  !!VRv3&y1<8:+1; [Count each monster placed]
!!en;

!!VRx16&v3>=x6:S99; [Failsafe 1: if all monsters placed, exit loop]
!!VRv4:+1; [Count each time through the loop]
!!VRx16&v4>999:S99; [Failsafe 2: if loop exceeds 999, exit loop]

--------------------------------------------------------------------------------------

>>[Check if all wanted wandering monster numbesr are used]
!?FU(WOG_20_GetWanderingMonsterAvailQty);
!#VA(result:x);

!!VR(result):S0;

; Check how many wandering monster slot is available. Max = 48.
!!re (wm:y)/1/48;
  !!MW(wm):E?(wmExisted:y);
  !!VR(result)&(wmExisted)<>(TRUE):+1;
!!en;

--------------------------------------------------------------------------------------

>>[Set up any Refugee Camps to match "Week of" Monster]
  [x1=monster type]
!?FU(WOG_20_SyncRefugeeMonster);

 [Store weekly growth of monster in y1]
!!MA:Gx1/?y1;

 [Get number of Mercenary Camps]
!!UN:U78/-1/?y2;

 [Loop through Camps, changing them to this week's monster]
!!DO5307/1/y2/1&y2>0:Py1/y2/x1;

--------------------------------------------------------------------------------------

>>[Change each camp to this week's monster]
  [x1=weekly growth of monster, x2=camp number, x3=monster type]
!?FU5307;

 [Loop backwards through camps to avoid possible errors]
!!VRy1:Sx2 +1 -x16;

 [Store coordinates of each camp in v1/v2/v3]
!!UN:U78/-1/y1/1;

 [Copy coordinates into y10/y11/y12]
!!VRy10:Sv1;
!!VRy11:Sv2;
!!VRy12:Sv3;

 [Check if a hero is visiting the camp - if so, get]
 [his number and owner, store his creatures, then kill him (temporarily)]
!!OBy10/y11/y12:T?y2;
!!DO5308/0/6/1&y2=34:Py10/y11/y12;
!!HEy10/y11/y12&y2=34:N?y3 O?y4 K;

 [Change each camp to this week's monster (subtype) and growth number (control word)]
!!OBy10/y11/y12:Ux3 Cx1;

 [Restore hero and creatures if one was visiting the camp]
!!HEy3&y2=34:Py10/y11/y12 Oy4;
!!DO5309/0/6/1&y2=34:Py10/y11/y12;

--------------------------------------------------------------------------------------

>>[Store hero's troops]
!?FU5308;

 [Store each slot's type in v1-v7, number in v361-v367]
!!VRy1:S1 +x16;
!!VRy2:S361 +x16;
!!HEx1/x2/x3:C0/x16/?vy1/?vy2;

--------------------------------------------------------------------------------------

>>[Restore hero's troops]
!?FU5309;

 [Restore each slot's type from v1-v7, and number from v361-v367]
!!VRy1:S1 +x16;
!!VRy2:S361 +x16;
!!HEx1/x2/x3:C0/x16/vy1/vy2;

** End of Script **
