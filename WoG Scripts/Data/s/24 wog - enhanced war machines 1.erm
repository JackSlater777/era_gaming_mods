ZVSE2

* Updated: September 12, 2004 by Hermann the Weird
* Updated: Febrary 26, 2012 by rennyo
* Further Updated: September 15, 2004 by Timothy to change local y variables
* used in triggers to y- variables.
* Updated by Archer30 and daemon_n on Feb 2023

*War Machine script 0.9 by Overlord
*Reserved: TM41, v591, v2000-v2074, FU903-FU927, w81-83
*Temporary: z1-z4
*
*ballista "base on ballista level" upgrades in towns
*x(#)*damage, target loose speed, att/def bonuses, increases hit
*
*ammo cart "base on ammo cart level" upgrades in town
*spell points every combat turn, def bonuses, increases hit
*
*first aid tent "base on first aid level" upgrades in town
*additional healing with resurrection, increases hit
*
*catapult "base on herolevel and ballistics skill"
*increases hit, with ballistics: shoot ability with 2,4 or 8 shoots
*

; To-do:
; Fix disabling Catapult not working (siege and non-siege)
; Recreate the whole battle functions


************************ before action combat screen ***************************

!#UN:P(WOG_OPT_ENHANCED_WAR_MACHINES_I)/?i^wog_54_enabled^; [Check if script is enabled]

; Fix stack becomes catapult and vice versa
; There should not be more than one catapult on one side of the battlefield, otherwise the script would break
!?FU(OnSetupBattlefield_Quit)&i^wog_54_enabled^;
!!VRi^wog_54_catapult_0^:S(NO_STACK);
!!VRi^wog_54_catapult_1^:S(NO_STACK);

!!re i/(BATTLE_STACK_FIRST)/(BATTLE_STACK_LAST);
  !!BMi:T?(type:y);

  !!if&(type)=(MON_CATAPULT)/i^wog_isSiege^<>(TRUE)/i^wog_isDwellOrCBBattle^<>(TRUE);
    !!BMi:I?(side:y);
    !!VRi^wog_54_catapult_%(side)^:Si;
  !!en;
!!en;

!!SN:H^monname^/(MON_CATAPULT)/0/?s^wog_54_catapultName_0^;
!!SN:H^monname^/(MON_CATAPULT)/1/?s^wog_54_catapultName_1^;

!!SN:H^monname^/(MON_MAGOG)/0/?s^wog_54_magogName_0^;
!!SN:H^monname^/(MON_MAGOG)/1/?s^wog_54_magogName_1^;

!?FU(OnBeforeBattleAction)&i^wog_54_enabled^; get before action
!!BG:E?(targetStack:y) H?(actingHero:y) A?(actionType:y);

!!BMi^battle_acting_stack^:T?(type:y) I?(side:y) N?(num:y);

!!FU(WOG_54_FixeMonsterInfo):P(targetStack) Pi^battle_acting_stack^;

; Catapult
!!if|i^battle_acting_stack^=i^wog_54_catapult_0^/i^battle_acting_stack^=i^wog_54_catapult_1^;
  !!if&i^wog_isSiege^<>(TRUE)/i^wog_isDwellOrCBBattle^<>(TRUE);
    !!FU(WOG_54_CatapultFirstStage)&(type)=(MON_CATAPULT):P(actionType); catapult first stage
    !!FU(WOG_54_CatapultSecondStage)&(type)=(MON_MAGOG)/i^wog_54_catapultActivity^=1:P1/(actionType)/(actingHero)/(num); catapult second stage
  !!en;
!!en;

; Ballista
!!FU(WOG_54_Ballista)&(type)=(MON_BALLISTA)/(actionType)=7:P0/(targetStack); ballista

!?FU(WOG_54_CatapultSecondStage)&i^wog_54_enabled^; catapult action * magog *
!#VA(mode:x) (actionType:x) (actingHero:x) (num:x);

* 1
!!if&(mode)=1;
  !!if&(actionType)<>(BATTLE_ACTION_SHOOT);
    !!BMi^battle_acting_stack^:T(MON_CATAPULT);
  !!el;
    !!VRi^wog_54_catapultActivity^:S3;
    !!VRv2054:Si^battle_acting_stack^;
  !!en;

  !!FU906:P(MON_CATAPULT)/(actingHero)/(num)/i^battle_acting_stack^; [For catapult, we use the catapult stack data, different from First Aid Tent (target stack data)]
* 2
!!el;
  !!BMv2054:T(MON_CATAPULT);
  !!VRi^wog_54_catapultActivity^:S0;
  !!SN:H^monname^/(MON_MAGOG)/0/s^wog_54_magogName_0^ H^monname^/(MON_MAGOG)/1/s^wog_54_magogName_1^; restore magog
!!en;

!?FU(WOG_54_Ballista)&i^wog_54_enabled^;
!#VA(mode:x) (targetStack:x);

* 1
!!if&x1=0;
  !!VRv2053:S2;
  !!BMx2:N?v2054 H?y2 L?y3;
  !!VRv2054:*y2 -y3; get before life
  !!VRv2055:Sx2;
* 2
!!el;
  !!VRv2053:S0;
  !!BMv2055:N?y1 H?y2 L?y3 I?y4 S?y13;
  !!BH0&y4=1:N?y5;
  !!BH1&y4=0:N?y5; get THE hero number
  !!VRy1:*y2 -y3; get after life
  !!HEy5:S20/?y11;
  !!IF:Wy5;
  !!VRy6:Sw81 +1;
  !!VRy7:Sy11 +y6 *20 -20; artillery + level * 20, +80
  !!FU&y7=0:E; exit if not more damage
  !!VRy8:Sv2054 -y1 *y7 :100;
  !!VRy15:Sy13;
  !!VRy13&y15>0:-y11;
  !!VRy13&y15>0/y13<1:S1; no less than 1 speed
  !!BMv2055:Ky8 Sy13; give additional damage and speed loss
  !!SN:D;
!!en;

!?FU(WOG_54_CatapultFirstStage)&i^wog_54_enabled^; check catapults avaiabitity
!#VA(action:x); 

!!BMi^battle_acting_stack^:U3/?(shots:y);
!!FU&(shots)<=0:E; exit if no shots

!!SN:H^monname^/(MON_MAGOG)/0/s^wog_54_catapultName_0^ H^monname^/(MON_MAGOG)/1/s^wog_54_catapultName_1^;

!!BMi^battle_acting_stack^:T(MON_MAGOG); change to magog

!!BG:A(BATTLE_ACTION_CANCEL); cancel action
!!VRi^wog_54_catapultActivity^:S1; set activity to 1

************************* after action combat screen ***************************

!?FU(OnBattleActionEnd)&i^wog_54_enabled^; get after action
!!FU(WOG_54_Ballista)&v2053=2:P1;
!!FU(WOG_54_CatapultSecondStage)&i^wog_54_catapultActivity^=3:P2;

************************* MOUSE HOVER combat screen ****************************

!?FU(OnBattleMouseHint)&i^mouse_battleHex^>=1/i^mouse_battleHex^<=185;
!!BU:Ei^mouse_battleHex^/?(stack:y); check monster position
!!FU&(stack)=(NO_STACK):E; exit if no monster

!!BM(stack):N?(num:y);
!!FU&(num)<=0:E;

!!FU(WOG_54_FixeMonsterInfo):P(stack);

************************* MOUSE CLICK combat screen ****************************

!?FU(OnBattleScreenMouseClick)&i^mouse_action^=(MOUSE_LMB_PRESSED)/i^mouse_battleHex^>=1/i^mouse_battleHex^<=185/i^wog_54_enabled^;
!#VA(usedY[10]:y);

!!BU:Ei^mouse_battleHex^/?y1; check monster position
!!FU&y1=(NO_STACK):E; exit if no monster
!!FU&y1=i^battle_current_stack^:E;

!!BMy1:T?y2 I?y3 L?y5 H?y6 N?y7 B?y9; y2 = monster , y3 = hero side
!!BHy3:N?y4; get hero number

; Catapult
!!if|y1=i^wog_54_catapult_0^/y1=i^wog_54_catapult_1^;
  !!FU(WOG_54_CatapultSecondStage)&y2=(MON_MAGOG)/i^wog_54_catapultActivity^=1:P1/y1/0/y3/y4/y7; catapult view
!!en;

!!BMi^battle_current_stack^:T?(currType:y);

; First Aid Tent
!!if&(currType)=(MON_FIRST_AID_TENT)/i^wog_54_Battle_HealPower^>0;
  !!FU(WOG_54_FirstAidTentHeals)|y2<(MON_CATAPULT)/y2>(MON_ARROW_TOWERS):P0/y1;
!!en;

; Change cursor to healable when a target is not full comparing with its initial status
!?FU(OnBattleMouseHint)&i^mouse_battleHex^>=1/i^mouse_battleHex^<=185/i^wog_54_enabled^;
!!BU:Ei^mouse_battleHex^/?(targetStack:y); check monster position
!!FU&(targetStack)=(NO_STACK):E; exit if no monster
!!FU&(targetStack)=i^battle_current_stack^:E;

!!BM(targetStack):T?(targetType:y);
!!BMi^battle_current_stack^:T?(currType:y);

!!if&(currType)=(MON_FIRST_AID_TENT);
  !!if|(targetType)<(MON_CATAPULT)/(targetType)>(MON_ARROW_TOWERS);
    !!BM(targetStack):L?(lostHp:y) N?(num:y) B?(startNum:y);

    !!UN|(lostHp)>0/(num)<(startNum):R5/2/17;
  !!en;
!!en;

!?FU(WOG_54_FirstAidTentHeals);
!#VA(mode:x) (targetStack:x);

; Exit if the target is full
!!BM(targetStack):L?(lostHp:y) N?(num:y) B?(startNum:y);
!!FU&(lostHp)<=0/(num)>=(startNum):E;

; Exit if the target is not the same side with the tent
!!BMi^battle_current_stack^:I?(currSide:y);
!!BM(targetStack):I?(targetSide:y);
!!FU&(currSide)<>(targetSide):E;

; Heal
!!CM:R0;

!!BM(targetStack):P?(pos:y);
!!BG:D(pos) E(targetStack);_
!!BG:A(BATTLE_ACTION_TENT_HEAL); 

!?FU(WOG_54_GetHealingPoints);
!#VA(side:x) (healHp:x);

!!VR(healHp):S0;

; Exit if the side has no hero
!!BH(side):N?(hero:y);
!!FU&(hero)<=(NO_HERO):E;

; Calculate healing points
!!HE(hero):S(SKILL_FIRST_AID)/?(firstAidLv:y);
!!IF:W(hero);
!!VR(tentLv:y):Sw82 +1;
!!VR(fullHealHp:y):S(firstAidLv) +(tentLv) *20 +80;
!!VR(coefficient:y):S(firstAidLv) +1 F1/4;
!!VR(healHp):S(coefficient) *(fullHealHp) :4;

*********************** Pre-Post Combat and ammo cart **************************

; Multiplayer support
!?FU(OnBeforeBattleBeforeDataSend)&i^wog_54_enabled^;
!!IP:Di^battle_owner_1^ Wi^battle_hero_0^/81/83;
!!IP:V2000/2074;                        [Legacy, not sure if it is necessary]

!?FU(OnBeforeBattleUniversal)&i^wog_54_enabled^;
!!FU915:P0/0 P1/0; store enabler

!?FU(OnBattleRound)&i^wog_54_enabled^/i^battle_round^>0; set mana for ammo cart
!!DO907/0/41/1:P1;

!?FU(OnSetupBattlefield)&i^wog_54_enabled^; set machines attributes
!!FU(WOG_54_SummonBallistaInNonSiege)&i^wog_isSiege^<>(TRUE):P0/119 P1/135; call if no siege battle
!!FU(WOG_54_ChangeWarMachineStats):P;

!?FU(OnAfterBattleUniversal)&i^wog_54_enabled^; after battle check & re-set enabler
!!FU912:P1/0 P1/1;
!!FU915:P0/1 P1/1;
!!VRv2048:C0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0; v2048-v2063
!!VRv2064:C0/0/0/0/0/0/0/0/0/0; v2064 - v2073

!?FU907&i^wog_54_enabled^;
!!BMx16:T?y1 I?y2;
!!FU&y1<>(MON_AMMO_CART):E; exit

!!BHy2:N?y3;
!!IF:Wy3;
!!VRy6:Sw83 +1; get addition
!!HEy3:I?y7/1; get current spell points
!!VRy8:S2066 +y2; get current side index
!!VRy9:Svy8 *10; get knowledge power * 10
!!FU&y7=>y9:E; exit if spell already enough
!!VRy6:+y7; set additioanl spell
!!VRy6&y6>y9:Sy9; set max if y6 > y9
!!HEy3:Iy6/1;

!?FU(WOG_54_ChangeWarMachineStats);
!!re i/(BATTLE_STACK_FIRST)/(BATTLE_STACK_LAST);
  !!BMi:T?(type:y) N?(num:y);

  !!if&(type)>=(MON_CATAPULT)/(type)<=(MON_AMMO_CART)/(num)>0;
    !!BMi:I?(side:y);

    !!if&i^battle_hero_%(side)^>(NO_HERO);
      !!VR(hero:y):Si^battle_hero_%(side)^;
      !!IF:W(hero);
      !!VR(index:y):S(type) -65;
      !!VR(machineLv:y):Sw(index) +1;

      !!if&(type)=(MON_CATAPULT);
        !!HE(hero):S(SKILL_BALLISTICS)/?(ballisticsLv:y) E?(exp:y)/?(heroLv:y)/1;
        !!VR(baiscHp:y)&(ballisticsLv)=(SKILL_NOT_LEARNED):S500;
        !!VR(baiscHp)&(ballisticsLv)>(SKILL_NOT_LEARNED):S(ballisticsLv) *(ballisticsLv) *50 +550;
        !!VR(hp:y):S(heroLv) *50 +(baiscHp) -50;
      !!el&(type)=(MON_BALLISTA);
        !!VR(hp):S(machineLv) *50 +200;
      !!el&(type)=(MON_FIRST_AID_TENT);
        !!VR(hp):S(machineLv) *25 + 125;
      !!el&(type)=(MON_AMMO_CART);
        !!VR(hp):S(machineLv) *10 +90;
      !!en;

      !!BMi:H(hp) L0;
    !!en;
  !!en;
!!en;

!?FU(WOG_54_SummonBallistaInNonSiege)&i^wog_54_enabled^;
!#VA(side:x) (pos:x);

* place real catapults *
!!BA:H(side)/?(hero:y);
!!FU&(hero)<=(NO_HERO):E; exit if no hero found

!!HE(hero):S(SKILL_BALLISTICS)/?(ballisticsLv:y); get ballistics secondary skills
!!FU912:P6/(pos)/(side)/1;

!!if&(ballisticsLv)>(SKILL_NOT_LEARNED)/v1=0; [v1 from FU912?]
  !!BU:S(MON_CATAPULT)/1/(pos)/(side)/-1/0;

  ; Set up data for the summoned Ballista
  !!BU:E(pos)/?(stack:y);

  !!if&(stack)>(NO_STACK);
    !!BM(stack):T?(type:y);

    !!if&(type)=(MON_CATAPULT);
      !!BM(stack):Fd~(MON_FLAG_SIEGE_WEAPON) U2/200;

      !!VR(shots:y)&(ballisticsLv)=(SKILL_BASIC):S2;
      !!VR(shots)&(ballisticsLv)=(SKILL_ADVANCED):S4;
      !!VR(shots)&(ballisticsLv)>=3:S8;

      !!BM(stack):U3/(shots);
    !!en;
  !!en;
!!en;

!?FU915&i^wog_54_enabled^;
!!BA:Hx1/?y1;
!!FU&y1<0:E;
!!HEy1&x1=0/x2=0:A2/4/d/?v2060 A2/5/d/?v2061 A2/6/d/?v2062 Fd/d/d/?v2066 S10/?v2070 Ed/?v2072/1;
!!HEy1&x1=1/x2=0:A2/4/d/?v2063 A2/5/d/?v2064 A2/6/d/?v2065 Fd/d/d/?v2067 S10/?v2071 Ed/?v2073/1;
!!FU912:P6/y1/4/2 P6/y1/5/3 P6/y1/6/4; call enabler
!!HEy1&v2=1/x2=0:A-4;
!!HEy1&v3=1/x2=0:A-5;
!!HEy1&v4=1/x2=0:A-6;
!!HEy1&v2=1/x1=0/x2=1/v2060=1:A1/4/13;
!!HEy1&v3=1/x1=0/x2=1/v2061=1:A1/5/14;
!!HEy1&v4=1/x1=0/x2=1/v2062=1:A1/6/15;
!!HEy1&v2=1/x1=1/x2=1/v2063=1:A1/4/13;
!!HEy1&v3=1/x1=1/x2=1/v2064=1:A1/5/14;
!!HEy1&v4=1/x1=1/x2=1/v2065=1:A1/6/15;

****************************** Adventure Map ***********************************

!?FU(OnEveryDay)&i^wog_54_enabled^;
!!VRv2000:C0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0; v2000-v2015
!!VRv2016:C0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0; v2016-v2031
!!VRv2032:C0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0; v2032-v2047

!?OB98&-1000/i^wog_54_enabled^; town - ai check only
!!HE(CURRENT_HERO):N?v2048;
!!FU912:P1/v2048;

!?OB106&i^wog_54_enabled^; war machine factory, entrance!
!!HE(CURRENT_HERO):N?v2048;
!!UN:A4/10/0 A4/9/0 A5/10/0 A5/9/0 A6/10/0 A6/9/0; restore desc
!!FU912:P2/v2048;

!?FU(OnTownMouseClick)&i^mouse_action^=(MOUSE_LMB_PRESSED)/i^wog_54_enabled^;
!#VA(usedY[17]:y);

; Exit if no visiting hero
!!CA(CURRENT_TOWN):H1/?(heroVisitor:y);
!!FU&(heroVisitor)=(NO_HERO):E;

; Exit if it was not clicked on the Blacksmith
!!CA(CURRENT_TOWN):T?(townType:y) U?(townId:y); get town type

!!VR(item:y):Si^mouse_item^;
!!VR(warMachineArt:y):S(NO_ART);

!!if&(item)=16;
  !!if|(townType)=(TOWN_CASTLE)/(townType)=(TOWN_DUNGEON)/(townType)=(TOWN_CONFLUX);
    !!VR(warMachineArt):S(ART_BALLISTA);
  !!el|(townType)=(TOWN_RAMPART)/(townType)=(TOWN_NECROPOLIS)/(townType)=(TOWN_FORTRESS);
    !!VR(warMachineArt):S(ART_FIRST_AID_TENT);
  !!el;
    !!VR(warMachineArt):S(ART_AMMO_CART);
  !!en;
!!en;

!!VR(warMachineArt)&(townType)=(TOWN_STRONGHOLD)/(item)=22:S(ART_BALLISTA);

!!FU&(warMachineArt)=(NO_ART):E;

; Exit if the visiting hero does not own the targeted war machine
!!VR(warMachineMon:y)&(warMachineArt)=(ART_BALLISTA):S(MON_BALLISTA);
!!VR(warMachineMon)&(warMachineArt)=(ART_AMMO_CART):S(MON_AMMO_CART);
!!VR(warMachineMon)&(warMachineArt)=(ART_FIRST_AID_TENT):S(MON_FIRST_AID_TENT);

!!IF:W(heroVisitor); set W var for hero
!!VRy5:S(warMachineMon) -65;
!!VRy6:Swy5 +1; get w-var for type, add 1 top skip 0
!!HE(heroVisitor):A2/(warMachineArt)/d/?y1 B0/?z3 Ed/?y9/1 O?y10; hero level y9

!!if&y1=0;
  !!VRwy5:S0; set w-var to 0
  !!FU:E; stop if not found
!!en;

; Exit if the Black Smith is a Ghosts' house (appear after demolishing the Village Hall)
!!CA(CURRENT_TOWN):B3/10;
!!FU&-1:E;

; Now the script starts
!!CM:R0; Disable standard reaction

!!VRy16:S2000 +(townId); get towns number store in v2000 + townnumber
!!VRy17:Svy16; get number from vy16

!!OW:Ry10/(RES_GOLD)/?y11; get gold from player
!!VRy8:Sy6 +1; next level
!!UN:N2/1/(townType)/(item) N3/2/(warMachineMon)/0; get ballista name & object name

!!FU913:P(warMachineArt)/(heroVisitor)/y8; get stats

; Change artifact name and description
; Using z5/z6 is necessary for the ert variable conversion
!!VRz5:Sz154016;
!!VRz6:Sz154015;
!!SN:H^art^/(warMachineArt)/0/?z30 H^art^/(warMachineArt)/1/?z31;
!!SN:H^art^/(warMachineArt)/0/z5 H^art^/(warMachineArt)/1/z6;

!!MA:C(warMachineMon)/(RES_GOLD)/?y7; y7 = gold cost
!!VRy7::5 *y8; gold cost is level * machine / 5
!!VRy15:S(MSG_TYPE_QUESTION); set to choices
!!VRz4&y11<y7:Sz154017;                 [Not enough money]
!!VRz4&y9<y8:Sz154018;                  [Level is too low]
!!VRz4&y17>0:Sz154019;                  [Usable once per day]
!!VRy15|y11<y7/y9<y8/y17>0:S(MSG_TYPE_MES); set to message with no choice
!!VRz4&y15=(MSG_TYPE_QUESTION):S^^;

!!IF:V1/0;
!!IF:Q1/(PIC_TYPE_ART)/(warMachineArt)/(PIC_TYPE_MONEY)/y7/y15/z154020;
!!SN:H^art^/(warMachineArt)/0/z30 H^art^/(warMachineArt)/1/z31;
!!FU&-1:E; stop function

!!OW:Ry10/(RES_GOLD)/d-y7; new money
!!VRwy5:+1; add level to W var for machine

!!VRvy16:+1; add for use only 1 time/castle/day

!?FU(OnHeroScreenMouseClick)&i^wog_54_enabled^/i^mouse_action^<>(MOUSE_LMB_RELEASED); inside hero screen
!!FU911&i^mouse_item^>14/i^mouse_item^<19:Pi^mouse_item^/0/i^mouse_hero_0^/1/i^mouse_flags^;/v2051/v2052;
!!FU914&i^mouse_item^=19/i^mouse_flags^=512:Pi^mouse_hero_0^/0;


!?FU(OnHeroesMeetScreenMouseClick)&i^wog_54_enabled^/i^mouse_action^<>(MOUSE_LMB_RELEASED); inside trade screen
!!FU911&i^mouse_item^>39/i^mouse_item^<44:Pi^mouse_item^/0/i^mouse_hero_0^/i^mouse_flags^/1;
!!FU911&i^mouse_item^>58/i^mouse_item^<63:Pi^mouse_item^/0/i^mouse_hero_1^/i^mouse_flags^/1;
!!FU914&i^mouse_item^=44:Pi^mouse_hero_0^/1;
!!FU914&i^mouse_item^=63:Pi^mouse_hero_1^/1;

!?FU911&i^wog_54_enabled^;
!#VA(clickedSlot:x) (warMachine:x) (heroId:x) (mouseFlagHeroSwap:x) (mouseFlagHero:x);  (idk3:x) (idk4:x);

!!VR(clickedSlot)&(clickedSlot)>58:-44; trade right hero fix
!!VR(clickedSlot)&(clickedSlot)>39:-25; trade left hero fix
!!VR(clickedSlot)&(clickedSlot)=15:S(MON_BALLISTA);
!!VR(clickedSlot)&(clickedSlot)=16:S(MON_AMMO_CART);
!!VR(clickedSlot)&(clickedSlot)=17:S(MON_FIRST_AID_TENT);
!!VR(clickedSlot)&(clickedSlot)=18:S(MON_CATAPULT);
!!VR(warMachine)&(clickedSlot)=(MON_CATAPULT):S(ART_CATAPULT);
!!VR(warMachine)&(clickedSlot)=(MON_BALLISTA):S(ART_BALLISTA);
!!VR(warMachine)&(clickedSlot)=(MON_AMMO_CART):S(ART_AMMO_CART);
!!VR(warMachine)&(clickedSlot)=(MON_FIRST_AID_TENT):S(ART_FIRST_AID_TENT);
!!HE(heroId):A2/(warMachine)/d/?(wmAmount:y) S(SKILL_BALLISTICS)/?(skilLvl:y) B0/?z7 R2/?(heroSex:y);

!!FU&(wmAmount)=0:E; exit if no found

!!CM:R0;

!!IF:W(heroId); set W var for hero
!!VRy5:S(clickedSlot) -65;
!!VRy6:Swy5 +1;

!!FU913&(mouseFlagHero)>0:P(warMachine)/(heroId)/y6; get stats
*
!!VRz1&(warMachine)=(ART_CATAPULT)/(skilLvl)=0:Sz154021;
!!VRz1&(warMachine)=(ART_CATAPULT)/(skilLvl)=1:Sz154022;
!!VRz1&(warMachine)=(ART_CATAPULT)/(skilLvl)=2:Sz154023;
!!VRz1&(warMachine)=(ART_CATAPULT)/(skilLvl)=3:Sz154024;
!!VRz1&(warMachine)=(ART_BALLISTA):Sz154025;
!!VRz1&(warMachine)=(ART_AMMO_CART):Sz154026;
!!VRz1&(warMachine)=(ART_FIRST_AID_TENT):Sz154027;
!!VRz6:S^^;
!!UN:A(warMachine)/9/6;
!!VRz2&(warMachine)=3:Sz154028;
!!VRz2&(warMachine)=4:Sz154029;

!!VRz2&(warMachine)=5:Sz154030;

!!VRz2&(warMachine)=6:Sz154031;
!!VRz2&x4=0:Sz154032;
!!IF&(mouseFlagHero)>(NO_MOUSE_FLAGS):Q1/(PIC_TYPE_ART)/(warMachine)/(MSG_TYPE_MES)^%Z1

%Z2^;
!!if&(mouseFlagHero)=(NO_MOUSE_FLAGS);
  !!FU912:P6/x3/x2/1;
  !!VRz4&v1=0:Sz154033;
  !!VRz4&v1=1:Sz154034;
  !!VRz5&v1=0:Sz154035;
  !!VRz5&v1=1:Sz154036;
!!en;

!!UN:Ax2/10/0;
!!VRz8&(heroSex)=0:Sz154037;
!!VRz8&(heroSex)=1:Sz154038;
!!IF&x5=0:Q1/8/x2/(MSG_TYPE_QUESTION)/z154039;

!!FU912&(mouseFlagHero)=(NO_MOUSE_FLAGS)/1:P7/x3/x2/v1;
!!FU&(mouseFlagHero)<>(NO_MOUSE_FLAGS):E; exit if not x5
!!FU&-1:E; exit if choosed no

!!VRz2&x2=3:Sz154040;
!!VRz2&x2=4:Sz154041;
!!VRz2&x2=5:Sz154042;
!!VRz2&x2=6:Sz154043;
!!VRz4&x5=0/v1=1:Sz154044;
!!VRz4&x5=0/v1=0:Sz154045;
!!IF:Q1/8/(warMachine)/(MSG_TYPE_MES)/z154046;

********************************* Functions ************************************

!?FU912&i^wog_54_enabled^;
* Ai get's upgrades - x1 = 1 *
!!IF&x1>0/x1<4:Wx2;
!!HEx2&x1>0/x1<4:A2/4/d/?y1 A2/5/d/?y2 A2/6/d/?y3 Ed/?y4/1; y1-Ballista,y2=Ammo Cart,y3=Aid Tent,y4=hero level
!!VRw81&x1=1/y1>0/w81<y4:+1; add 1 level ballista
!!VRw82&x1=1/y3>0/w82<y4:+1; add 1 level first aid
!!VRw83&x1=1/y2>0/w83<y4:+1; add 1 level ammo cart
* Erase Quantity - x2 = 2 *
!!VRw81&x1=2/y1=0:S0; zero if no ballista
!!VRw82&x1=2/y3=0:S0; zero if no ammo
!!VRw83&x1=2/y2=0:S0; zero if no tent
* Reset w81-w83 every hero *
!!IF&x1=3:Wx16;
!!VRw81&x1=3:S0;
!!VRw82&x1=3:S0;
!!VRw83&x1=3:S0;
* get quantity of spells *
!!HEx2&x1=4:Mx16/?y1;
!!VRvx3&x1=4/y1=1:+1;
* get spells
!!HEx2&x1=5:Mx16/?y1;
!!VRvx3&x1=5/y1=1:Sx16;
!!VRx3&x1=5/y1=1:+1;
* get enabler
!!VRy1&x1=6:S2000 +x2;
!!VRy2&x1=6:Svy1; ** get hero ** y2 = get number
!!VRy6&x1=6/y2>999:S1;
!!VRy2&x1=6/y2>999:-1000;
!!VRy5&x1=6/y2>99:S1;
!!VRy2&x1=6/y2>99:-100;
!!VRy4&x1=6/y2>9:S1;
!!VRy2&x1=6/y2>9:-10;
!!VRy3&x1=6/y2>0:S1;
!!VRy2&x1=6:S0;
!!VRy2&x1=6/x3>0/yx3=1:S1;
!!VRvx4&x1=6:Sy2;
* set enabler
!!VRy1&x1=7:S2000 +x2;
!!VRy2&x1=7:S30 -vy1; ** get hero ** y2 = get number
!!VRy3&x1=7/x3=3:S1;
!!VRy3&x1=7/x3=4:S10;
!!VRy3&x1=7/x3=5:S100;
!!VRy3&x1=7/x3=6:S1000;
!!VRvy1&x1=7/x4=0:+y3;
!!VRvy1&x1=7/x4=1:-y3;

!#DO912/0/155/1&i^wog_54_enabled^:P3;
************************** Get Z-var for warmachines ***************************

!?FU913&i^wog_54_enabled^;
!#VA(art:x) (heroId:x) (nextLv:x);
!#VA(usedY[10]:y);

!!HE(heroId):Ed/?(heroLevel:y)/1;

* catapult
!!if&(art)=(ART_CATAPULT);
  !!HE(heroId):S(SKILL_BALLISTICS)/?(skilLv:y) Ed/?(heroLevel:y)/1;

  !!if&(skilLv)>(SKILL_NOT_LEARNED);
    !!VR(hp:y):S(skilLv) *(skilLv) *50 +550;
    !!VRy10:S1;

    !!re i/1/(skilLv);
      !!VRy10:*2;
    !!en;

    !!VRz3:Sz154047;
  !!el;
    !!VR(hp:y):S500;
    !!VRz3:S^^;
  !!en;

  !!VRy8:S(heroLevel) *50 +(hp) -50;

  !!VRz5:Sz154048;
* first aid tent
!!el&(art)=(ART_FIRST_AID_TENT);
  !!HE(heroId):S(SKILL_FIRST_AID)/?(skilLv);

  !!if&(skilLv);
    !!VRz6:Sz154049;
  !!el;
    !!VRz6:S^^;
  !!en;

  !!VRy8:S(nextLv) *25 +125;
  !!VRy7:S(skilLv) +(nextLv) *20 +80; first aid + level * 20, +80

  !!VRz5:Sz154050;
* ammo cart
!!el&(art)=(ART_AMMO_CART);
  !!VRy8:S(nextLv) *10 +90;
  !!VRz4&(nextLv)=1:S^^;
  !!VRz4&(nextLv)>1:Sz154051;
  !!VRz5:Sz154052;
* Ballista
!!el&(art)=(ART_BALLISTA);
  !!HE(heroId):S(SKILL_ARTILLERY)/?(skilLv);

  !!if&(skilLv);
    !!VRz6:Sz154053;
  !!el;
    !!VRz6:S^^;
  !!en;

  !!VRy8:S(nextLv) *50 +200;
  !!VRy7:S(skilLv) +(nextLv) *20 +80; artillery + level * 20, +80

  !!VRz5:Sz154054;
!!en;

******************************** Spell Book ************************************

!?FU914&i^wog_54_enabled^;
!!HEx1:A2/1000/d/?y1 B0/?z3;
!!FU&y1=0:E;
!!CM:R0;
!!VRv1:S0;
!!DO912/0/69/1:P4/x1/1;
!!VRz2&v1=0:Sz154055;
!!VRz2&v1>3:Sz154056;
!!VRz2&v1=70:Sz154057;
!!UN:A0/9/2;
!!VRz1&x2=0:Sz154058;
!!VRz1&x2=1:Sz154059;
!!IF&v1=0|v1>3:Q1/8/0/4^%Z1^;
!!DO912/0/69/1&v1>0/v1<4:P5/x1/2;
!!VRz2:S^^;
!!VRz2&v1>1:Sz154060;
!!VRz1:Sz154061;
!!IF&v1=1:Q1/9/v2/4^%Z1^;
!!IF&v1=2:Q1/9/v2/9/v3/4^%Z1^;
!!IF&v1=3:Q1/9/v2/9/v3/9/v4/4^%Z1^;
!!UN:A0/9/0 A0/9/10;

**** Fix monster info for the given stack on the battlefield ****

!?FU(WOG_54_FixeMonsterInfo);
!#VA(stack:x);

!!FU|(stack)<(BATTLE_STACK_FIRST)/(stack)>(BATTLE_STACK_LAST):E;

!!BM(stack):T?(type:y);
!!FU&(type)<>(MON_MAGOG):E;

!!if|(stack)=i^wog_54_catapult_0^/(stack)=i^wog_54_catapult_1^;
  !!SN:H^monname^/(MON_MAGOG)/0/s^wog_54_catapultName_0^ H^monname^/(MON_MAGOG)/1/s^wog_54_catapultName_1^;
!!el;
  !!SN:H^monname^/(MON_MAGOG)/0/s^wog_54_magogName_0^ H^monname^/(MON_MAGOG)/1/s^wog_54_magogName_1^;
!!en;
