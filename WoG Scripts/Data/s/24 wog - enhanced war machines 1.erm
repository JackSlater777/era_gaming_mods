ZVSE2

* Updated: September 12, 2004 by Hermann the Weird
* Updated: Febrary 26, 2012 by rennyo
* Further Updated: September 15, 2004 by Timothy to change local y variables
* used in triggers to y- variables.
* Updated by Archer30 and daemon_n on Feb 2023

*War Machine script 0.9 by Overlord
*Reserved: TM41, v591, v2000-v2073, FU903-FU927, w81-83
*Temporary: z1-z4
*
*ballista "base on ballista level" upgrades in towns
*x(#)*damage, target loose speed, att/def bonuses, increases hit
*
*ammo cart "base on ammo cart level" upgrades in town
*spell points every combat turn, def bonuses, increases hit
*
*first aid tent "base on first aid level" upgrades in town
*additional healing with resurrection, increases hit
*
*catapult "base on herolevel and ballistics skill"
*increases hit, with ballistics: shoot ability with 2,4 or 8 shoots
*


!#UN:P(WOG_OPT_ENHANCED_WAR_MACHINES_I)/?i^wog_54_enabled^; [Check if script is enabled]

!?FU(OnAfterErmInstructions)&i^wog_54_enabled^;
  !!SN:H^monname^/(MON_CATAPULT)/0/?(single:z) H^monname^/(MON_CATAPULT)/1/?(plural:z);
  !!SN:H^monname^/(MON_NOT_USED_2)/0/(single) H^monname^/(MON_NOT_USED_2)/1/(plural);

  ; Set up flags for Catapult in non-siege
  !!MA:X(MON_NOT_USED_2)/132197 F(MON_NOT_USED_2)/650 C(MON_NOT_USED_2)/(RES_GOLD)/1000; [set NU2 flags {catapult flags (132197) + shooter (4)}    NU2 Fight Value 650  ]
  !!MA:A(MON_NOT_USED_2)/10 D(MON_NOT_USED_2)/10 P(MON_NOT_USED_2)/500 N(MON_NOT_USED_2)/2; [NU2 Attack 10 NU2 Defense 10 NU2 HP 500  NU2 Shots 2]

  ; creature descriptions
  !!SN:H^monname^/(MON_CATAPULT)/2/?(desc:z);
  !!VR(desc):+^%T(wog.54.desc)^;
  !!SN:H^monname^/(MON_CATAPULT)/2/(desc);

  ; Stack exp abilities
  !!UN:P(WOG_OPT_STACK_EXPERIENCE)/?(stackExp:y); [check if creature experience is enabled]
  !!EA(MON_NOT_USED_2)&(stackExp):O(MON_CATAPULT);

************************ before action combat screen ***************************

; Ballista
!?FU(OnBeforeBattleAction)&i^wog_54_enabled^; get before action
!!BG:E?(targetStack:y) H?(actingHero:y) A?(actionType:y);

!!BMi^battle_acting_stack^:T?(type:y) I?(side:y) N?(num:y);

!!FU(WOG_54_Ballista)&(type)=(MON_BALLISTA)/(actionType)=(BATTLE_ACTION_SHOOT):P0/(targetStack); ballista

!?FU(WOG_54_Ballista)&i^wog_54_enabled^;
!#VA(mode:x) (targetStack:x);

* 1
!!if&x1=0;
  !!VRv2053:S2;
  !!BMx2:N?v2054 H?y2 L?y3;
  !!VRv2054:*y2 -y3; get before life
  !!VRv2055:Sx2;
* 2
!!el;
  !!VRv2053:S0;
  !!BMv2055:N?y1 H?y2 L?y3 I?y4 S?y13;
  !!BH0&y4=1:N?y5;
  !!BH1&y4=0:N?y5; get THE hero number
  !!VRy1:*y2 -y3; get after life
  !!HEy5:S20/?y11;
  !!IF:Wy5;
  !!VRy6:Sw81 +1;
  !!VRy7:Sy11 +y6 *20 -20; artillery + level * 20, +80
  !!FU&y7=0:E; exit if not more damage
  !!VRy8:Sv2054 -y1 *y7 :100;
  !!VRy15:Sy13;
  !!VRy13&y15>0:-y11;
  !!VRy13&y15>0/y13<1:S1; no less than 1 speed
  !!BMv2055:Ky8 Sy13; give additional damage and speed loss
  !!SN:D;
!!en;

************************* after action combat screen ***************************

; Ballista
!?FU(OnBattleActionEnd)&i^wog_54_enabled^; get after action
!!FU(WOG_54_Ballista)&v2053=2:P1;

; Catapult
!?FU(WOG_OnAfterShoot)&i^wog_54_enabled^;
!#VA(atkStack:x) (defStack:x);

!!BM(atkStack):T?(type:y);

!!if&(type)=(MON_NOT_USED_2);
  ; Exit if the attacking (possible with Fire Shield) or defending stack is killed
  !!BM(atkStack):N?(atkNum:y);
  !!BM(defStack):N?(defNum:y);
  !!FU|(atkNum)<=0/(defNum)<=0:E;

  ; Exit if the targeted stack cannot receive the spell
  !!BM(atkStack):I?(atkSide:y);
  !!FU(WOG_Battle_CanStackReceiveSpell):P(defStack)/(SPELL_FIREBALL)/(atkSide)/?(canReceive:y);
  !!FU&(canReceive)=(FALSE):E;

  ; Cast the spell
  !!BM(defStack):P?(defPos:y);

  !!HEi^battle_hero_%(atkSide)^:S(SKILL_BALLISTICS)/?(ballisticsLv:y);
  !!BM(atkStack):C(SPELL_FIREBALL)/(defPos)/(ballisticsLv)/3/(FALSE);
!!en;

************************* MOUSE CLICK combat screen ****************************

; Change cursor to healable when a target is not full comparing with its initial status
!?FU(OnBattleMouseHint)&i^mouse_battleHex^>=1/i^mouse_battleHex^<=185/i^wog_54_enabled^;
!!BU:Ei^mouse_battleHex^/?(targetStack:y); check monster position
!!FU&(targetStack)=(NO_STACK):E; exit if no monster
!!FU&(targetStack)=i^battle_current_stack^:E;

!!BM(targetStack):T?(targetType:y) I?(stackSide:y);
!!BMi^battle_current_stack^:T?(currType:y);

!!if&(currType)=(MON_FIRST_AID_TENT)/(targetType)<>(MON_NOT_USED_2)/(stackSide)=i^battle_current_side^;
  !!if|(targetType)<(MON_CATAPULT)/(targetType)>(MON_ARROW_TOWERS);
    !!BM(targetStack):L?(lostHp:y) N?(num:y) B?(startNum:y);

    !!UN|(lostHp)>0/(num)<(startNum):R5/2/17;
  !!en;
!!en;

!?FU(OnBattleScreenMouseClick)&i^mouse_action^=(MOUSE_LMB_PRESSED)/i^mouse_battleHex^>=1/i^mouse_battleHex^<=185/i^wog_54_enabled^;
!!BU:Ei^mouse_battleHex^/?(targetStack:y); check monster position
!!FU&(targetStack)=(NO_STACK):E; exit if no monster
!!FU&(targetStack)=i^battle_current_stack^:E;

!!BM(targetStack):T?(targetType:y) I?(stackSide:y);
!!BMi^battle_current_stack^:T?(currType:y);

; First Aid Tent
!!if&(currType)=(MON_FIRST_AID_TENT)/(targetType)<>(MON_NOT_USED_2)/(stackSide)=i^battle_current_side^/^wog_54_Battle_HealPower^>0;
  !!FU(WOG_54_FirstAidTentHeals)|y2<(MON_CATAPULT)/y2>(MON_ARROW_TOWERS):P0/y1;
!!en;

!?FU(WOG_54_FirstAidTentHeals);
!#VA(mode:x) (targetStack:x);

; Exit if the target is full
!!BM(targetStack):L?(lostHp:y) N?(num:y) B?(startNum:y);
!!FU&(lostHp)<=0/(num)>=(startNum):E;

; Exit if the target is not the same side with the tent
!!BMi^battle_current_stack^:I?(currSide:y);
!!BM(targetStack):I?(targetSide:y);
!!FU&(currSide)<>(targetSide):E;

; Heal
!!CM:R0;

!!BM(targetStack):P?(pos:y);
!!BG:D(pos) E(targetStack);_
!!BG:A(BATTLE_ACTION_TENT_HEAL); 

!?FU(WOG_54_GetHealingPoints);
!#VA(side:x) (healHp:x);

!!VR(healHp):S0;

; Exit if the side has no hero
!!BH(side):N?(hero:y);
!!FU&(hero)<=(NO_HERO):E;

; Calculate healing points
!!HE(hero):S(SKILL_FIRST_AID)/?(firstAidLv:y);
!!IF:W(hero);
!!VR(tentLv:y):Sw82 +1;
!!VR(fullHealHp:y):S(firstAidLv) +(tentLv) *20 +80;
!!VR(coefficient:y):S(firstAidLv) +1 F1/4;
!!VR(healHp):S(coefficient) *(fullHealHp) :4;

*********************** Pre-Post Combat and ammo cart **************************

; Multiplayer support
!?FU(OnBeforeBattleBeforeDataSend)&i^wog_54_enabled^;
!!IP:Di^battle_owner_1^ Wi^battle_hero_0^/81/83;
!!IP:V2048/2073;

; store enabler
!?FU(OnBeforeBattleUniversal)&i^wog_54_enabled^;
!!FU(WOG_54_DisableOrRestoreWarMachines):P0/0 P1/0; 

; set machines attributes
!?FU(OnSetupBattlefield)&i^wog_54_enabled^;
; Initialise catapult variables
!!re i/(BATTLE_LEFT)/(BATTLE_RIGHT);
  !!VRi^wog_54_catapult_%i^:S(NO_STACK);
!!en;

; Restore the memory value for Arrow Tower Shoot Adjacent
!!UN:C4466213/(UNC_INT)/(MON_ARROW_TOWERS);

!!FU(WOG_54_PlaceCatapult)&i^wog_isSiege^<>(TRUE)/i^wog_isCBBattle^<>(TRUE):P(BATTLE_LEFT) P(BATTLE_RIGHT);

!!FU(WOG_54_SetUpWarMachinesHP):P;

; Set Mana for Ammo Cart
!?FU(OnBattleRound)&i^wog_54_enabled^/i^battle_round^>0; set mana for ammo cart
!!DO(WOG_54_SetManaForAmmoCart)/(BATTLE_STACK_FIRST)/(BATTLE_STACK_LAST)/1:P1;

; Change catapult ID to 124 - Must be after Tactics Phase due to HD mod compatibility
!?FU(OnAfterTacticsPhase)&i^wog_54_enabled^;
!!re i/(BATTLE_LEFT)/(BATTLE_RIGHT);
  !!BMi^wog_54_catapult_%i^&i^wog_54_catapult_%i^>(NO_STACK):T(MON_NOT_USED_2);
!!en;

; After battle check & re-set enabler
!?FU(OnAfterBattleUniversal)&i^wog_54_enabled^; 
!!FU(WOG_54_ManageWarMachines):P1/0 P1/1;
!!FU(WOG_54_DisableOrRestoreWarMachines):P0/1 P1/1;
!!VRv2048:C0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0; v2048-v2063
!!VRv2064:C0/0/0/0/0/0/0/0/0/0; v2064 - v2073

; Restore the memory value for Arrow Tower Shoot Adjacent
!!UN:C4466213/(UNC_INT)/(MON_ARROW_TOWERS);

; Functions
!?FU(WOG_54_SetManaForAmmoCart)&i^wog_54_enabled^;
!!BMx16:T?y1 I?y2;
!!FU&y1<>(MON_AMMO_CART):E; exit

!!BHy2:N?y3;
!!IF:Wy3;
!!VRy6:Sw83 +1; get addition
!!HEy3:I?y7/1; get current spell points
!!VRy8:S2066 +y2; get current side index
!!VRy9:Svy8 *10; get knowledge power * 10
!!FU&y7=>y9:E; exit if spell already enough

!!VRy6:+y7; set additioanl spell
!!VRy6&y6>y9:Sy9; set max if y6 > y9
!!HEy3:Iy6/1;

!?FU(WOG_54_SetUpWarMachinesHP);
!!re i/(BATTLE_STACK_FIRST)/(BATTLE_STACK_LAST);
  !!BMi:T?(type:y) N?(num:y);

  !!if&(type)>=(MON_CATAPULT)/(type)<=(MON_AMMO_CART)/(num)>0;
    !!BMi:I?(side:y);

    !!if&i^battle_hero_%(side)^>(NO_HERO);
      !!VR(hero:y):Si^battle_hero_%(side)^;
      !!IF:W(hero);
      !!VR(index:y):S(type) -65;
      !!VR(machineLv:y):Sw(index) +1;

      !!if&(type)=(MON_CATAPULT);
        !!HE(hero):S(SKILL_BALLISTICS)/?(ballisticsLv:y) E?(exp:y)/?(heroLv:y)/1;
        !!VR(baiscHp:y)&(ballisticsLv)=(SKILL_NOT_LEARNED):S500;
        !!VR(baiscHp)&(ballisticsLv)>(SKILL_NOT_LEARNED):S(ballisticsLv) *(ballisticsLv) *50 +550;
        !!VR(hp:y):S(heroLv) *50 +(baiscHp) -50;
      !!el&(type)=(MON_BALLISTA);
        !!VR(hp):S(machineLv) *50 +200;
      !!el&(type)=(MON_FIRST_AID_TENT);
        !!VR(hp):S(machineLv) *25 + 125;
      !!el&(type)=(MON_AMMO_CART);
        !!VR(hp):S(machineLv) *10 +90;
      !!en;

      !!BMi:H(hp) L0;
    !!en;
  !!en;
!!en;

; Restrain the quantities of First Aid Tents and Ballistas to max of 2 (1 from War Machine artifact, the other from Commander)
!?FU(WOG_54_PlaceCatapult);
!#VA(side:x);

!!if&i^battle_hero_%(side)^>(NO_HERO);
  !!HEi^battle_hero_%(side)^:S(SKILL_BALLISTICS)/?(ballisticsLv:y);

  !!if&(ballisticsLv)>(SKILL_NOT_LEARNED);
    !!if&(side)=(BATTLE_LEFT);
      !!VR(catPos:y):S119;
    !!el;
      !!VR(catPos):S135;
    !!en;

    !!BU:S(MON_CATAPULT)/1/(catPos)/(side)/-1/(FALSE); [add catapults]
    !!BU:E(catPos)/?(catStack:y);

    !!if&(catStack)>(NO_STACK);
      !!BM(catStack):T?(type:y);

      !!if&(type)=(MON_CATAPULT);
        ; Store stack number to be used later after Tactic Phase
        !!VRi^wog_54_catapult_%(side)^:S(catStack);
        ; Set up basic stats except for monster type as setting here would conflict with HD fast troop placements
        !!BM(catStack):U1/5 U2/200 B1 Fd|(MON_FLAG_NO_RETALIATION); [for some reason, Ballista's shooting is abled to be retailed, No Retaliation flag helps, but wouldn't prevent Fire Shield damge];

        !!if&(ballisticsLv)=(SKILL_BASIC);
          !!VR(shots:y):S2;
        !!el&(ballisticsLv)=(SKILL_ADVANCED);
          !!VR(shots):S4;
        !!el&(ballisticsLv)>=(SKILL_EXPERT);
          !!VR(shots):S8;
        !!en;

        !!BM(catStack):U3/(shots);

        ; Change the memory value of Arrow Tower to Catapult in order to have it shoot adjacent
        !!UN:C4466213/(UNC_INT)/(MON_NOT_USED_2);
      !!en;
    !!en;
  !!en;
!!en;

!?FU(WOG_54_DisableOrRestoreWarMachines)&i^wog_54_enabled^;
!!BA:Hx1/?y1;
!!FU&y1<0:E;

!!HEy1&x1=0/x2=0:A2/4/d/?v2060 A2/5/d/?v2061 A2/6/d/?v2062 Fd/d/d/?v2066 S10/?v2070 Ed/?v2072/1;
!!HEy1&x1=1/x2=0:A2/4/d/?v2063 A2/5/d/?v2064 A2/6/d/?v2065 Fd/d/d/?v2067 S10/?v2071 Ed/?v2073/1;
!!FU(WOG_54_ManageWarMachines):P6/y1/4/2 P6/y1/5/3 P6/y1/6/4; call enabler
!!HEy1&v2=1/x2=0:A-4;
!!HEy1&v3=1/x2=0:A-5;
!!HEy1&v4=1/x2=0:A-6;
!!HEy1&v2=1/x1=0/x2=1/v2060=1:A1/4/13;
!!HEy1&v3=1/x1=0/x2=1/v2061=1:A1/5/14;
!!HEy1&v4=1/x1=0/x2=1/v2062=1:A1/6/15;
!!HEy1&v2=1/x1=1/x2=1/v2063=1:A1/4/13;
!!HEy1&v3=1/x1=1/x2=1/v2064=1:A1/5/14;
!!HEy1&v4=1/x1=1/x2=1/v2065=1:A1/6/15;

**** First Aid Tents healing ****

!?FU(OnBattleStackObtainsTurn)&i^wog_54_enabled^;
!#VA(stackSide:x) (stackInd:x);

  !!BMi^battle_current_stack^:T?(monType:y);

  !!if&(monType)=(MON_FIRST_AID_TENT);
    !!FU(WOG_54_GetHealingPoints):Pi^battle_current_side^/?i^wog_54_Battle_HealPower^;
  !!en;

!?FU(WOG_BattleTent_BeforeIterateLoses)&i^wog_54_Battle_HealPower^>0;
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EDI)/4/?(side:y);
  !!VR(min:y):S(side) *21;
  !!VR(max:y):S(min) +20;
  !!VR(minLoses:y):S0;

  !!VR(maxLoses:y):S0;
  !!VR(stackToHeal:y):S(NO_STACK);

  !!re i/(min)/(max);
    !!BMi:F?f N?n;
    !!VRf:&(MON_FLAG_DIED);

    !!if&f=0/n>0;
      !!BMi:B?s H?h L?l;
      !!VR(minLoses:y):Ss -n*h +l Fd/(INT_MAX);

      !!if&(minLoses)>(maxLoses);
        !!VR(maxLoses):S(minLoses);
        !!VR(stackToHeal):Si -(min);
      !!en;
    !!en;
  !!en;

  !!if&(stackToHeal)>(NO_STACK);
    !!SN:X?y99/0;
    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/-8/4/(stackToHeal);
    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/4667564;
  !!en;

!?FU(WOG_BattleTent_PrepareHealing)&i^wog_54_Battle_HealPower^>0;
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_ESI)/4/?(stack:y);
  !!FU(WOG_54_BattleFunc_GetStackId):P(stack)/?(stackId:y);
  !!BM(stackId):L?l;

  !!if&i^wog_54_Battle_HealPower^>l;
    !!VRi:Si^wog_54_Battle_HealPower^;
    !!BM(stackId):N?(currentNum:y) B?(startNum:y) H?(health:y);
    !!VR(maxHeal:y):S(startNum) -(currentNum) *(health) +l;
    !!FU(WOG_54_BattleFunc_CalculateStackHealing):P(stackId)/i^wog_54_Battle_HealPower^/?(hpLost:y)/?(num:y);
    !!BM(stackId):N(num);
    !!VRi^wog_54_Battle_HealPower^:Fd/(maxHeal);

    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EAX)/4/i^wog_54_Battle_HealPower^;
    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/(hpLost);
  !!en;

  !!VRi^wog_54_Battle_HealPower^:S0;

!?FU(WOG_54_BattleFunc_GetStackId);
!#VA(stack:x) (stackId:x);

  !!UN:C(stack)/244/4/?(side:y) C(stack)/248/4/?(index:y);;
  !!VR(stackId):S(side)*21 +(index);

!?FU(WOG_54_BattleFunc_CalculateStackHealing);
!#VA(stackId:x) (healPower:x) (hpLost:x) (num:x);

  !!BM(stackId):H?(maxHp:y) B?(startNum:y) L?(hpLost) N?(num);

  !!if&(healPower)>(hpLost);

    !!BM(stackId):Z?(stack:y);
    !!SN:E4468128/(CALLCONV_THISCALL)/(stack)/0;       [get  current hp]

    !!VR(totalMaxHp:y):S(startNum) *(maxHp);
    !!VR(assumedHp:y):Sv1 +(healPower) Fd/(totalMaxHp);
    !!VR(remainder:y):S(assumedHp) %(maxHp);

    !!VR(num):S(assumedHp) :(maxHp); +1;

    !!if&(remainder:y)>0;
      !!VR(hpLost):S(maxHp) -(remainder);
      !!VR(num):+1;

    !!el;
      !!VR(hpLost):S0;
    !!en;
  !!el;
    !!VR(hpLost):-(healPower);
  !!en;

****************************** Adventure Map ***********************************

!?FU(OnEveryDay)&i^timerOnce^/i^timerDay^>1/i^wog_54_enabled^;
!!re i/(MAP_TOWN_FIRST)/(MAP_TOWN_LAST);
  !!VRi^wog_54_upgradeCounter_%i^:S0;
!!en;

!?OB(OBJ_TOWN)&-1000/i^wog_54_enabled^; town - ai check only
!!HE(CURRENT_HERO):N?v2048;
!!FU(WOG_54_ManageWarMachines):P1/v2048;

!?OB(OBJ_WAR_MACHINE_FACTORY)&i^wog_54_enabled^; war machine factory, entrance!
!!HE(CURRENT_HERO):N?v2048;
!!FU(WOG_54_ManageWarMachines):P2/v2048;

!?FU(OnTownMouseClick)&i^mouse_action^=(MOUSE_LMB_PRESSED)/i^wog_54_enabled^;
!#VA(usedY[20]:y);

; Exit if no visiting hero
!!CA(CURRENT_TOWN):H1/?(hero:y);
!!FU&(hero)=(NO_HERO):E;

; Exit if it was not clicked on the Blacksmith
!!CA(CURRENT_TOWN):T?(townType:y) U?(townId:y); get town type

!!VR(item:y):Si^mouse_item^;
!!VR(warMachineArt:y):S(NO_ART);

!!if&(item)=16;
  !!if|(townType)=(TOWN_CASTLE)/(townType)=(TOWN_DUNGEON)/(townType)=(TOWN_CONFLUX);
    !!VR(warMachineArt):S(ART_BALLISTA);
  !!el|(townType)=(TOWN_RAMPART)/(townType)=(TOWN_NECROPOLIS)/(townType)=(TOWN_FORTRESS);
    !!VR(warMachineArt):S(ART_FIRST_AID_TENT);
  !!el;
    !!VR(warMachineArt):S(ART_AMMO_CART);
  !!en;
!!en;

!!VR(warMachineArt)&(townType)=(TOWN_STRONGHOLD)/(item)=22:S(ART_BALLISTA);

!!FU&(warMachineArt)=(NO_ART):E;

; Exit if the visiting hero does not own the targeted war machine
!!VR(warMachineMon:y)&(warMachineArt)=(ART_BALLISTA):S(MON_BALLISTA);
!!VR(warMachineMon)&(warMachineArt)=(ART_AMMO_CART):S(MON_AMMO_CART);
!!VR(warMachineMon)&(warMachineArt)=(ART_FIRST_AID_TENT):S(MON_FIRST_AID_TENT);

!!IF:W(hero); set W var for hero
!!VR(index:y):S(warMachineMon) -65;
!!VR(machineLevel:y):Sw(index) +1; get w-var for type, add 1 top skip 0
!!HE(hero):A2/(warMachineArt)/d/?(equipped:y) Ed/?(heroLevel:y)/1 O?(owner:y); hero level y9

!!if&(equipped)=0;
  !!VRw(index):S0; set w-var to 0
  !!FU:E; stop if not found
!!en;

; Exit if the Black Smith is a Ghosts' house (appear after demolishing the Village Hall)
!!CA(CURRENT_TOWN):B3/10;
!!FU&-1:E;

; Now the script starts
!!CM:R0; Disable standard reaction
!!FU(WOG_54_UpgradeWarMachine):P(townType)/(item)/(hero)/(warMachineArt)/(warMachineMon)/(index)/(machineLevel)/(heroLevel)/(owner)/(townId);

!?FU(WOG_54_UpgradeWarMachine);
!#VA(townType:x) (item:x) (hero:x) (warMachineArt:x) (warMachineMon:x) (index:x) (machineLevel:x) (heroLevel:x) (owner:x) (townId:x);

!!HE(hero):B0/?z3;

!!OW:R(owner)/(RES_GOLD)/?y11; get gold from player
!!VRy6:S(machineLevel);
!!VRy8:Sy6 +1; next level
!!UN:N2/1/(townType)/(item) N3/2/(warMachineMon)/0; get ballista name & object name

!!FU(WOG_54_GetWarMachineStats):P(warMachineArt)/(hero)/y8; get stats

; Change artifact name and description
; Using z5/z6 is necessary for the ert variable conversion
!!VRz5:Sz154016;
!!VRz6:Sz154015;
!!SN:H^art^/(warMachineArt)/0/?z30 H^art^/(warMachineArt)/1/?z31;
!!SN:H^art^/(warMachineArt)/0/z5 H^art^/(warMachineArt)/1/z6;

!!MA:C(warMachineMon)/(RES_GOLD)/?y31; y31 = gold cost
!!VRy7:Sy31 *y8 :5; gold cost is level * machine / 5

!!VR(msgType:y):S(MSG_TYPE_QUESTION); set to choices
!!VRz4:S^^;

!!VRy9:S(heroLevel);

!!if|y11<y7/y9<y8/i^wog_54_upgradeCounter_%(townId)^>=3;
  !!VR(msgType):S(MSG_TYPE_MES); set to message with no choice
  !!VRz4&y11<y7:Sz154017;                 [Not enough money]
  !!VRz4&y9<y8:Sz154018;                  [Level is too low]

  !!SN&i^wog_54_upgradeCounter_%(townId)^>=3:T^wog.54.soldOut^/?z4; [Sold out]
!!en;

!!IF:V1/0;
!!IF:Q1/(PIC_TYPE_ART)/(warMachineArt)/(PIC_TYPE_MONEY)/y7/(msgType)/z154020;
!!SN:H^art^/(warMachineArt)/0/z30 H^art^/(warMachineArt)/1/z31;
!!FU&-1:E; stop function

!!VRy30:Sy11 -y7;
!!OW:R(owner)/(RES_GOLD)/y30;           [new money]
!!UN:R4/(CURRENT_TOWN);
!!VRw(index):+1;                        [add level to W var for machine]
!!VRi^wog_54_upgradeCounter_%(townId)^:+1; [add 1 to the upgrade counter of the town]

; Check if it is eligible for the next level
!!VRy7:Sy31 *y8 :5;
!!FU(WOG_54_UpgradeWarMachine)&y30>=y7/y9>y8/i^wog_54_upgradeCounter_%(townId)^<3:P(townType)/(item)/(hero)/(warMachineArt)/(warMachineMon)/(index)/y8/(heroLevel)/(owner)/(townId);

!?FU(OnHeroScreenMouseClick)&i^wog_54_enabled^/i^mouse_action^<>(MOUSE_LMB_RELEASED); inside hero screen
!!FU(WOG_ShowWarMachineInfo)&i^mouse_item^>14/i^mouse_item^<19:Pi^mouse_hero_0^/0;

!?FU(OnHeroesMeetScreenMouseClick)&i^wog_54_enabled^/i^mouse_action^<>(MOUSE_LMB_RELEASED); inside trade screen
!!FU(WOG_ShowWarMachineInfo)&i^mouse_item^>39/i^mouse_item^<44:Pi^mouse_hero_0^/1;
!!FU(WOG_ShowWarMachineInfo)&i^mouse_item^>58/i^mouse_item^<63:Pi^mouse_hero_1^/1;

!?FU(WOG_ShowWarMachineInfo)&i^wog_54_enabled^;
!#VA(heroId:x) (mode:x);
!#VA(usedY[10]:y);

!!VR(clickedSlot:y):Si^mouse_item^;
!!VR(clickedSlot)&(clickedSlot)>58:-44; trade right hero fix
!!VR(clickedSlot)&(clickedSlot)>39:-25; trade left hero fix
!!VR(clickedSlot)&(clickedSlot)=15:S(MON_BALLISTA);
!!VR(clickedSlot)&(clickedSlot)=16:S(MON_AMMO_CART);
!!VR(clickedSlot)&(clickedSlot)=17:S(MON_FIRST_AID_TENT);
!!VR(clickedSlot)&(clickedSlot)=18:S(MON_CATAPULT);
!!VR(warMachine:y)&(clickedSlot)=(MON_CATAPULT):S(ART_CATAPULT);
!!VR(warMachine)&(clickedSlot)=(MON_BALLISTA):S(ART_BALLISTA);
!!VR(warMachine)&(clickedSlot)=(MON_AMMO_CART):S(ART_AMMO_CART);
!!VR(warMachine)&(clickedSlot)=(MON_FIRST_AID_TENT):S(ART_FIRST_AID_TENT);
!!HE(heroId):A2/(warMachine)/d/?(wmAmount:y) S(SKILL_BALLISTICS)/?(skilLvl:y) B0/?z7 R2/?(gender:y);

!!FU&(wmAmount)=0:E; exit if no found

!!CM:R0;

!!IF:W(heroId); set W var for hero
!!VR(index:y):S(clickedSlot) -65;
!!VRy6:Sw(index) +1;

!!FU(WOG_54_GetWarMachineStats)&i^mouse_action^=(MOUSE_RMB_PRESSED):P(warMachine)/(heroId)/y6; get stats
*
!!if&(warMachine)=(ART_CATAPULT);
  !!VRz1&(skilLvl)=0:Sz154021;
  !!VRz1&(skilLvl)=1:Sz154022;
  !!VRz1&(skilLvl)=2:Sz154023;
  !!VRz1&(skilLvl)=3:Sz154024;
!!en;

!!VRz1&(warMachine)=(ART_BALLISTA):Sz154025;
!!VRz1&(warMachine)=(ART_AMMO_CART):Sz154026;
!!VRz1&(warMachine)=(ART_FIRST_AID_TENT):Sz154027;

!!VRz2&(warMachine)=3:Sz154028;
!!VRz2&(warMachine)=4:Sz154029;

!!VRz2&(warMachine)=5:Sz154030;

!!VRz2&(warMachine)=6:Sz154031;

!!IF&i^mouse_action^=(MOUSE_RMB_PRESSED):Q1/(PIC_TYPE_ART)/(warMachine)/(MSG_TYPE_POPUP)^%Z1

%Z2^;

!!if&i^mouse_action^=(MOUSE_LMB_PRESSED);
  !!FU(WOG_54_ManageWarMachines):P6/(heroId)/(warMachine)/1;
  !!VRz4&v1=0:Sz154033;
  !!VRz4&v1=1:Sz154034;
  !!VRz5&v1=0:Sz154035;
  !!VRz5&v1=1:Sz154036;
!!en;

!!SN:T^wog.whose%(gender)^/?z8;

!!if&i^mouse_action^=(MOUSE_LMB_PRESSED);
  !!IF:Q1/(PIC_TYPE_ART)/(warMachine)/(MSG_TYPE_QUESTION)/z154039;
  !!FU(WOG_54_ManageWarMachines)&i^mouse_action^=(MOUSE_LMB_PRESSED)/1:P7/(heroId)/(warMachine)/v1;
!!en;

********************************* Functions ************************************

!?FU(WOG_54_ManageWarMachines)&i^wog_54_enabled^;
!!IF&x1>0/x1<4:Wx2;
!!HEx2&x1>0/x1<4:A2/4/d/?y1 A2/5/d/?y2 A2/6/d/?y3 Ed/?y4/1; y1-Ballista,y2=Ammo Cart,y3=Aid Tent,y4=hero level
* Ai get's upgrades - x1 = 1 *
!!VRw81&x1=1/y1>0/w81<y4:+1; add 1 level ballista
!!VRw82&x1=1/y3>0/w82<y4:+1; add 1 level first aid
!!VRw83&x1=1/y2>0/w83<y4:+1; add 1 level ammo cart
* Erase Quantity - x2 = 2 *
!!VRw81&x1=2/y1=0:S0; zero if no ballista
!!VRw82&x1=2/y3=0:S0; zero if no ammo
!!VRw83&x1=2/y2=0:S0; zero if no tent
* Reset w81-w83 every hero *
!!IF&x1=3:Wx16;
!!VRw81&x1=3:S0;
!!VRw82&x1=3:S0;
!!VRw83&x1=3:S0;
* get quantity of spells *
!!HEx2&x1=4:Mx16/?y1;
!!VRvx3&x1=4/y1=1:+1;
* get enabler
!!VRy1&x1=6:S2000 +x2;
!!VRy2&x1=6:Svy1; ** get hero ** y2 = get number
!!VRy6&x1=6/y2>999:S1;
!!VRy2&x1=6/y2>999:-1000;
!!VRy5&x1=6/y2>99:S1;
!!VRy2&x1=6/y2>99:-100;
!!VRy4&x1=6/y2>9:S1;
!!VRy2&x1=6/y2>9:-10;
!!VRy3&x1=6/y2>0:S1;
!!VRy2&x1=6:S0;
!!VRy2&x1=6/x3>0/yx3=1:S1;
!!VRvx4&x1=6:Sy2;
* set enabler
!!VRy1&x1=7:S2000 +x2;
!!VRy2&x1=7:S30 -vy1; ** get hero ** y2 = get number
!!VRy3&x1=7/x3=3:S1;
!!VRy3&x1=7/x3=4:S10;
!!VRy3&x1=7/x3=5:S100;
!!VRy3&x1=7/x3=6:S1000;
!!VRvy1&x1=7/x4=0:+y3;
!!VRvy1&x1=7/x4=1:-y3;

!#DO912/(HERO_FIRST)/(HERO_LAST_WOG)/1&i^wog_54_enabled^:P3;

************************** Get Z-var for warmachines ***************************

!?FU(WOG_54_GetWarMachineStats)&i^wog_54_enabled^;
!#VA(art:x) (heroId:x) (nextLv:x);
!#VA(usedY[10]:y);

!!HE(heroId):Ed/?(heroLevel:y)/1;

* catapult
!!if&(art)=(ART_CATAPULT);
  !!HE(heroId):S(SKILL_BALLISTICS)/?(skilLv:y) Ed/?(heroLevel:y)/1;

  !!if&(skilLv)>(SKILL_NOT_LEARNED);
    !!VR(hp:y):S(skilLv) *(skilLv) *50 +550;
    !!VRy10:S1;

    !!re i/1/(skilLv);
      !!VRy10:*2;
    !!en;

    !!VRz3:Sz154047;
  !!el;
    !!VR(hp:y):S500;
    !!VRz3:S^^;
  !!en;

  !!VRy8:S(heroLevel) *50 +(hp) -50;

  !!VRz5:Sz154048;
* first aid tent
!!el&(art)=(ART_FIRST_AID_TENT);
  !!HE(heroId):S(SKILL_FIRST_AID)/?(skilLv);

  !!if&(skilLv);
    !!VRz6:Sz154049;
  !!el;
    !!VRz6:S^^;
  !!en;

  !!VRy8:S(nextLv) *25 +125;
  !!VRy7:S(skilLv) +(nextLv) *20 +80; first aid + level * 20, +80

  !!VRz5:Sz154050;
* ammo cart
!!el&(art)=(ART_AMMO_CART);
  !!VRy8:S(nextLv) *10 +90;
  !!VRz4&(nextLv)=1:S^^;
  !!VRz4&(nextLv)>1:Sz154051;
  !!VRz5:Sz154052;
* Ballista
!!el&(art)=(ART_BALLISTA);
  !!HE(heroId):S(SKILL_ARTILLERY)/?(skilLv);

  !!if&(skilLv);
    !!VRz6:Sz154053;
  !!el;
    !!VRz6:S^^;
  !!en;

  !!VRy8:S(nextLv) *50 +200;
  !!VRy7:S(skilLv) +(nextLv) *20 +80; artillery + level * 20, +80

  !!VRz5:Sz154054;
!!en;
