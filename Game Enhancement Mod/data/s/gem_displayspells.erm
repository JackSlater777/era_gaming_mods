ZVSE2

;Author: Valery
;material: Algor

;Display spells, retals, casts left and action
;edit: daemon_n; added translations and correct "wait" phases support;


; ========= GAME RESOLUTION ==========
!#DC(HD_X) = 4199496;
!#DC(HD_Y) = 4199503;
!#DC(NULL) = 0;
; ======= END GAME RESOLUTION ========

!?FU(OnBattleScreenMouseClick)&i^mouse_action^=(MOUSE_RMB_PRESSED)/i^key_leftCtrl^/i^mouse_battleHex^=>0/i^mouse_battleHex^<=(BATTLE_HEX_LAST);


!!BU:Ei^mouse_battleHex^/?(stackId:y); check if stack alive at position

!!if&(stackId)>=0;
  !!DL27:N^gem_abh.txt^;
  !!if&(TRUE);
    !!UN:C(COMBAT_MANAGER)/4/?(cmbMgr:y);
    *!VRy11:Sy10 +81380;
    !!UN:C(cmbMgr)/81380/1/?(isWaitPhase:y); роверка на фазу ожидани
    !!FU(gem_CheckGameLang):P;

    !!if&(isWaitPhase)<>1:;
      !!BM(stackId):F?i;
      !!SN:T^%s(gem_b).active^/?(actionC:z);
      !!VRi:&(MON_FLAG_WAITING);
      !!SN&i>0:T^%s(gem_b).wait^/?(actionC:z);
      !!BM(stackId):F?i;
      !!VRi:&(MON_FLAG_ACTED);
      !!SN&i>0:T^%s(gem_b).done^/?(actionC:z);
      !!BM(stackId):F?i;
      !!VRi:&(MON_FLAG_DEFENDING); [just look at waiting bit]
      !!SN&i>0:T^%s(gem_b).def^/?(actionC:z);
    !!el:;
      !!SN:T^%s(gem_b).wait^/?(actionC:z);
      !!BM(stackId):F?i;
      !!VRi:&(MON_FLAG_ACTED);
      !!SN&i>0:T^%s(gem_b).done^/?(actionC:z);
      !!BM(stackId):F?i;
      !!VRi:&(MON_FLAG_DEFENDING); [just look at waiting bit]
      !!SN&i>0:T^%s(gem_b).def^/?(actionC:z);
    !!en;

    !!BM(stackId):R?y4; [check retaliations left]
    !!SN&y4<1:T^%s(gem_b).no^/?(retailC:z);
    !!SN&y4>0/y4<101:T^%s(gem_b).some^/?(retailC:z)/^quantity^/y4;
    !!SN&y4>100:T^%s(gem_b).endl^/?(retailC:z);

    !!BM(stackId):E?y5; [check spells number remaining]
    !!SN&y5<1:T^%s(gem_b).no^/?(spellQ:z);
    !!SN&y5>0:T^%s(gem_b).some^/?(spellQ:z)/^quantity^/y5;;
    !!SN:T^%s(gem_b).1^/?(line1:z);
    !!SN:T^%s(gem_b).2^/?(line2:z);
    !!SN:T^%s(gem_b).3^/?(line3:z);

    !!DL27:A32/3/(line1)/0 A33/3/(line2)/0 A34/3/(line3)/0;
    !!DL27:A35/3/(retailC)/0;
    !!DL27:A36/3/(spellQ)/0;
    !!DL27:A37/3/(actionC)/0;
    *!DO321456986/1/10/1:P; reset spells frames
    !!re i/1/10:;
      !!DL27:Ai/4/76/0;
    !!en:;

    !!if&i^srm_MAX_SPELL_ID^>(SPELL_LAST_WOG);
      !!VR(maxSpell:y):Si^srm_MAX_SPELL_ID^;
    !!el;
      !!VR(maxSpell:y):S75;
    !!en;

    !!DO321456987/0/(maxSpell:y)/1:P(stackId)/1;
    !!FU(gem_BattleScreenClickHDShift):Pi^mouse_x^/i^mouse_y^/(FALSE)/?(hdX:y)/?(hdY:y);

    !!FU(DL_Coords):P27/(hdX)/(hdY);

    !!FU(DL_ShowPopup):P27;

    !!CM:R0;
  !!en;
!!en;




!?FU321456987;
!!BMx1:Gx16/?y1/?y2; spell/duration/power
!!FU&y1<1:E; exit if not applied
!!DL27:Ax2/4/x16/0;
!!VRy3:Sx2+10; get the ID of hint area
!!VRzx2:S^x%Y1^;
!!DL27:Ay3/3/zx2/0;
!!VRx2:+1;


!?FU(gem_DL_ChangeCoords);
!#VA(dlgId:x) (x:x) (y:x);
; x1 - WoG dialog id
; x2 - coord X (-1 center)
; x3 - coord Y (-1 center)
*!IF:L^%(xBefore) %(yBefore)^;


!!SN:E7510739/(CALLCONV_CDECL)/(dlgId);
!!VR(ptrDlg:y):Sv1;
!!if&(ptrDlg)<>(NULL):;
  !!UN:C(ptrDlg)/(UNC_UINT32)/?(strDlg:y);
  !!UN:C(strDlg)/32/(UNC_UINT32)/?(dlgWidth:y);
  !!VR(centerX:y):S(dlgWidth) :2;
  !!UN:C(strDlg)/36/(UNC_UINT32)/?(dlgHight:y);
  !!VR(centerY:y):S(dlgHight) :2;
  
  !!VR(clickCoordX:y):S(x);+(centerX) -40;
  !!VR(clickCoordY:y):S(y); -40;+(centerY) -40;
  !!VR(rightBorderDistance:y):S800 -(dlgWidth); -(dlgWidth);
  !!VR(botBorderDistance:y):S600 -(dlgHight);



  !!if&i^gem_IsHdModLoaded^<>(FALSE);
    !!UN:C(HD_X)/(UNC_INT16)/?(gameResolutionX:y);
    !!UN:C(HD_Y)/(UNC_INT16)/?(gameResolutionY:y);

    !!if&(gameResolutionY)>=664/(gameResolutionX)>=1180;
      !!VR(clickCoordX)&(x)>(dlgWidth):-(centerX); -40;
      !!VR(clickCoordX)&(x)<(rightBorderDistance):+(centerX) -40; -40;
      !!VR(clickCoordY)&(y)>(botBorderDistance):-(dlgHight); +(dlgHight);
    *!en;

    !!el;
    *!IF:L^234^;
        !!VR(clickCoordX)&(x)>(dlgWidth):-(dlgWidth); -40;
        !!VR(clickCoordX)&(x)>(rightBorderDistance)/(x)<=(dlgWidth):-(centerX); -40;
        !!VR(clickCoordY)&(y)>=(botBorderDistance):-(dlgHight); 
    !!en;
  !!el;
        !!VR(clickCoordX)&(x)>(dlgWidth):-(dlgWidth); -40;
        !!VR(clickCoordX)&(x)>(rightBorderDistance)/(x)<=(dlgWidth):-(centerX); -40;
        !!VR(clickCoordY)&(y)>=(botBorderDistance):-(dlgHight); 
  !!en;
    *!FU(gem_BattleScreenClickHDShift):P(clickCoordX)/(clickCoordY)/(FALSE)/?(hdX:x)/?(hdY:y);
    !!UN:C(strDlg)/24/(UNC_UINT32)/(clickCoordX);
    !!UN:C(strDlg)/28/(UNC_UINT32)/(clickCoordY); 
    *!IF:L^%(x) %(y) //// %(clickCoordX) %(clickCoordY)^;
!!en;

!?FU(gem_BattleScreenClickHDShift);
!#VA(x:x) (y:x) (isFirstPacking:x);
!!UN:C(HD_X)/(UNC_INT16)/?(gameResolutionX:y);
!!UN:C(HD_Y)/(UNC_INT16)/?(gameResolutionY:y);
!!VR(xCoordinateShift:y):S(gameResolutionX) -800 :2;
!!VR(yCoordinateShift:y):S(gameResolutionY) -600 :2;

!!if&(isFirstPacking)=(TRUE);
  !!VR(yCoordinateShift)&(gameResolutionY)>=664:-10;
  !!VR(xRealCoordinate:x):S(x) +(xCoordinateShift);
  !!VR(yRealCoordinate:x):S(y) +(yCoordinateShift);
!!el;
  !!VR(yCoordinateShift):+20;
  !!VR(yCoordinateShift)&(gameResolutionY)>=664:+20;
  !!VR(xRealCoordinate:x):S(xCoordinateShift) +(x) -200; +400; -(x);
  !!VR(yRealCoordinate:x):S(yCoordinateShift) +(y) -150;
!!en;
*!IF:L^x = %(x), y = %(y) /%(isFirstPacking)/ X = %(xRealCoordinate), Y = %(yRealCoordinate);^;