ZVSE2
_WARNING_#1=IMPORTANT! This file is not in a plain text format. NEVER use any editor except ERM_S for making any kind of changes!
ERMS_PoweredBy=ERM Scripter v. 2005.9.7.814

  79 wog - igrik.erm
  version 1.32 - 08.08.2020
  autheroOwnerrs: igrik, daemon_n, PerryR
*!VRs^ddd_daemonName^:S^DIMA^;
*!SN:W^ddd_daemonName^/^DIMA^; ?? ????
*!VRs^ddd_daemonName^:S^DIMA ^ +^KOLMOGOROV^; ??????????s^...??..^ ?????????????????
i^...??..^ ?????????????????
SN:W ?? ?????, ????????????? ????????? key functions 
*?FU(gem_StartGame);
*?FU(gem_CreateERMheroOwnerok);
*?FU(gem_CheckGameLang);
*?FU(gem_Autobattle_Check_And_Sound);
*?FU(OnOpenTownScreen);
*?FU(OnHeroesMeetScreenMouseClick);
*!IF&i^mouse_action^=(MOUSE_LMB_PRESSED):M^%i(mouse_item)^;


78528

    /** @brief [132B8] */
    INT32 currentMonSide;

    /** @brief [132BC] */
    INT32 currentMonIndex;

    /** @brief [132C0] */
    INT32 currentActiveSide;

*?FU(OnCombatRound);
*!UN:C6911888/1/4/?y1;
*!IF:L^%y1^;
*!IP:D;
*!FU(FunctionName):D12;
*?FU(FunctionName);
*!IF:M^%x1^;
  *!BM21:Z?(crt:y);
  *!UN:C(COMBAT_MANAGER)/(UNC_INT)/?(cmbMgr:y);
  *!UN:C(cmbMgr)/78536/(UNC_INT)/(crt:y);

  *!UN:C(cmbMgr)/78528/(UNC_INT)/?y1;
  *!FU(ClearScreenLog):P;
*!OW:C?y1/?y2;
*!IF:L^%y1 ^;
*!if&y1=y2;
  *!re i/221/226;
    *!VRv12:S34;
    *!IF:L^%vi^;
  *!en;

  *!IP:D-1;
  *!IP:Di^battle_owner_1^ V12/12;
*!el;
  *!re i;
    *!if&v12=34;
      *!br;
    *!en;
    *!IF:L^%i^;
  *!en;
*!IP:D-1;
*!IP:V221/226;
*!en;

*!IF:L^%v997^;



!?FU(OnAfterErmInstructions);
  *!FU(gem_GetModList):P?(modListArrayID:y)/?(modsAmount:y)/?(modList:z);
  *!OW:Cd/?(clickedPlayer:y);

  *!SN:M(M_AUTO_ID)/(modsAmount)/(M_STR)/(M_STORED)/?i^gem_ModListOf_%(clickedPlayer)_Player^;
  *!FU(Array_Copy):P(modListArrayID)/i^gem_ModListOf_%(clickedPlayer)_Player^;

!?FU(OnAfterLoadGame)&i^timerDay^<2;
*!FU(getdat):P;

  *!if&i^gem_amount_of_players^/i^gem_several_PC^;
    *!OW:Cd/?(clickedPlayer:y);

    *!if&i^gem_ModListOf_%(clickedPlayer)_Player^=0;

      *!FU(gem_GetModList):P?(modListArrayID:y)/?(modsAmount:y);
      *!SN:M(M_AUTO_ID)/(modsAmount)/(M_STR)/(M_STORED)/?i^gem_ModListOf_%(clickedPlayer)_Player^;
      *!FU(Array_Copy):P(modListArrayID)/i^gem_ModListOf_%(clickedPlayer)_Player^;
    *!en;

  *!en;

!?FU(OnGameEnter);
*?FU(OnKeyPressed_AdvMap)&x1=(KEY_Q);

*!if&i^gem_amount_of_players^/i^gem_several_PC^;
  *!OW:Cd/?(clickedPlayer:y);
  *!if&i^gem_ModListOf_%(clickedPlayer)_Player^=0;
    *!FU(gem_GetModList):P?(modListArrayID:y)/?(modsAmount:y);
    *!SN:M(M_AUTO_ID)/(modsAmount)/(M_INT)/(M_TEMP)/?i^gem_ModListOf_%(clickedPlayer)_Player^;
    *!FU(Array_Copy):P(modListArrayID)/i^gem_ModListOf_%(clickedPlayer)_Player^;
  *!en;

  *!re i/(PLAYER_FIRST)/(PLAYER_LAST);
    *!OW:Ii/?(isAi:y)/?(isDeath:y);

    *!if&(isAi)<>(TRUE)/i<>(clickedPlayer)/(isDeath)<>(TRUE);
      *!SN:M^gem_ModListOf_%(clickedPlayer)_Player^
        *!IF:M^%^;

      *!FU(gem_CompareModLists):Pi^gem_ModListOf_%(clickedPlayer)_Player^/i^gem_ModListOf_%i_Player^/?(areSameModLists:y);
      
    *!en;

  *!en;

  *!SN:M


  *!en;

*!en;

!?FU(gem_CompareModLists);
!#VA(currentPlayerModListArrayId:x) (anotherPlayerModLisrArrayId:x) (result:x);
!#VA(myModsName:z) (otherModsName:z);
*!SN:M(currentPlayerModListArrayId)/?(srcArraySize:y) M(anotherPlayerModLisrArrayId)/?(dstArraySize:y);

*!SN:M(anotherPlayerModLisrArrayId);

*!if&(srcArraySize)=(dstArraySize);
  *!re i/0/(srcArraySize)/1/-1;
    *!SN:M(currentPlayerModListArrayId)/i/?(myModsName);
    *!SN:M(anotherPlayerModLisrArrayId)/i/?(otherModsName);

    *!if&(myModsName)<>(otherModsName);
      *!IF:M^%(myModsName) <> %(otherModsName)^;
    *!el;
      *!IF:M^%(myModsName) = %(otherModsName)^;
    *!en;
  *!en;


  
*!el;

*!en;



*!FU(gem_GetModList):P?(modListArrayID:y)/?(modsAmount:y)/?(modList:z);
*!OW:Cd/?(clickedPlayer:y);
*!VRs^gem_player%(clickedPlayer)^:S(modList) +^%(modListArrayID)^;
*!VRs^gem_player0^:S(modList) +^%(modListArrayID)^;



*?FU(OnKeyPressed_AdvMap)&x1=(KEY_Q);
*!FU(gem_GetModList):P?(modListArrayID:y)/?(modsAmount:y)/?(modList:z);
*!IF:M^%(modList)^;
*!IF:M^%i(gem_ModListOf_0_Player)

%i(gem_ModListOf_1_Player)^;
*!IF:M^%i(timerDay)^;
*!FU(CheckModFolderNameExists):P1/?(isExist:y);
*!IF:L^%(isExist)^;



; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------
*                       [BATTLE SCRREN - scripts for the battles]
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------


; --------------------------------------------------------------------------------------------------
*?BR1;
*!SN:W^gem_SheroOwnerW_COMBAT_MOUSE_HEX_OPT^/?y1;
*!UN:C6916112/4/y1;
; --------------------------------------------------------------------------------------------------
** Shackles of war (retreat vs neutrals bttles with SW)
!?BG0; !!BG:A?y1; !!BA:H1/?y2;          [??? ????????]
!!UN&y1=4/y2=-2:C4689325/1/2;           [????? ?????]
!?BA52;  !!UN:C4689325/1/125;           [???? ?????]

** War Machines Cost 1 gold when surrend
!?BA52;
!!UN:P73/?(isEnabled:y);                       [check if option is enabled]

!!if&(isEnabled)=(FALSE);
  !!re i/(MON_CATAPULT)/(MON_AMMO_CART);
    !!MA:Ci/(RES_GOLD)/?i^gem_%i_machine_cost^ Ci/(RES_GOLD)/1;
  !!en;
!!en;


!?BA53;
!!UN:P73/?(isEnabled:y);                       [check if option is enabled]
!!if&(isEnabled)=(FALSE);

  !!re i/(MON_CATAPULT)/(MON_AMMO_CART);
    !!MA:Ci/(RES_GOLD)/i^gem_%i_machine_cost^;
    !!VRi^gem_%i_machine_cost^:S(NULL);
  !!en;
!!en;
; --------------------------------------------------------------------------------------------------
** ** ????? ?????? ??????/ Fast tactic troop replacement (by igrik)
!?CM4;
  !!CM:S?y1 F?y2 I?y3 D?y4;
  !!FU|y1<>13/y3>10/y2<>0/y4<0/y4>186:E;
  *!IF:L^%y1 %y2 %y3^;

  *!SN:L/?y1 L^HD_MCR.dll^/?y2;
  !!SN:F^GetModuleHandleA^/^HD_WOG.dll^;
  !!BU:T?y3;
  !!FU|v1<>0/y3<>1:E; 
  !!BU:Ey4/?y5;
  !!FU&y5=-1:E;
  !!BG:N?y6 Q?y7;
  !!BMy5:I?y8 T?y9;
  !!FU&y9>144/y9<150:E;
  !!FU&y7<>y8|y6=y5:E;
  !!VRy5&y7=1:-21;
  !!CM:R0;
  !!UN:C6919200/4/?y1;
  !!SN:E4607760/2/y1/y8/y5;

** open heroscreens in the battle by right click

!?FU(OnBattleScreenMouseClick)&i^mouse_action^=(MOUSE_RMB_PRESSED)/i^mouse_battleHex^>=252/i^mouse_battleHex^<=253;

  !!VR(side:y):Si^mouse_battleHex^ -252;
  !!OW:Cd/?(clickOwner:y);
  !!FU&(side)=(BATTLE_RIGHT)/i^battle_hero_1^=(NO_HERO):E;

  !!if&i^gem_enemy_window_option_%(clickOwner)^/i^battle_humanOnly^=(FALSE);
    !!VR(showHeroDlg:y):S(TRUE);
  !!el&i^gem_window_option_%(clickOwner)^/i^battle_owner_%(side)^=(clickOwner);
    !!VR(showHeroDlg:y):S(TRUE);
  !!en;

  !!if&(showHeroDlg);
    !!FU7026&v7195=1:Pi^battle_hero_%(side)^/(TRUE); [reset skill levels - i^battle_hero_%(side)^]
    !!SN:E5118576/3/i^battle_hero_%(side)^/1/1/1;
    !!FU7026&v7195=1:Pi^battle_hero_%(side)^/(FALSE); [reset skill levels - i^battle_hero_%(side)^]
    !!CM:R0;
  !!en;

; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------

  ; --------------------------------------------------------------------------------------------------
**Magogs Fireball-Attack doesnt damage own troops (by PerryR)
!?MF1;
!!SN:W^Magog_Fireball_Enable^/?y1;
!!FU&y1=0:E;
!!BG:N?y1;                             [Get attacking stack number]
!!MF:N?y4;                             [Get defending stack number]
!!BMy1:I?y5;                           [Get attacking stack side]
!!BMy4:I?y6;                           [Get defending stack side]
!!UN:C42149568/4/?y10;                 [Judgement basis (028326c0)]
!!MF&y10=4454752/y5=y6:E0;             [Disable taking damage if Magog Fireball and own team]

!?MR2;                                 [Magogs Fireball-Cast that comes with Stack Expierence doesnt damage own troops]
!!SN:W^Magog_Fireball_Enable^/?y1;
!!FU&y1=0:E;
!!BG:A?y1;                             [Aktion in y1]
!!if|y1=7/y1=6;                        [if ranged or melee attack]
  !!MR:S?y2 F?y3;

  !!if&y2=21/y3<=105;                    [Fireball always does 105 damage]
    !!MR:N?y10;
    !!BMy10:I?y11;
    !!MR&y11=0:F100;                       [Disable Magic damage for attacker side from Fireball]
  !!en;
!!en;

!?FU(OnBattleRegeneratePhase);
!!SN:W^Magog_Fireball_Switch^/-1;
!!BA:Q?y1;
!!FU&y1=1:E;                           [Exit in Quick Combat]
!!SN:X?y1;                             [Event parameter]
!!BMy1:T?y2;                           [Acting Monster Type]
!!SN&y2=45|y2=(MON_CATAPULT):W^Magog_Fireball_Switch^/y1;

!?CM4;
!!CM:F?y1 I?y2;
!!FU|y1<>512/y2<>2010:E;                [Exit if not rightclick on defend Icon]
!!BG:N?y3;
!!BMy3:T?y4 U3/?y31;                            [Acting Monster Type]

!!if&y4=(MON_MAGOG)/y31>0;
  !!SN:W^gem_CheckGameLang^/?y5;
  !!SN:T^%Y5_gem_battle.magog1^/?z1 T^%Y5_gem_battle.magog2^/?z2 T^%Y5_gem_battle.magog3^/?z3;
  !!VRv3:S0;
  !!VRy30:Si^Magog_Fireball_Enable^ +1;
  !!IF:G1/3/y30/1/2/3/0/0/0/0/0/0/0/0/0/;
  !!SN&v3=1:W^Magog_Fireball_Enable^/0;
  !!SN&v3=2:W^Magog_Fireball_Enable^/1;
!!en;

!?BA0;
!!SN:W^Magog_Fireball_Enable^/1;
* end
; --------------------------------------------------------------------------------------------------
Fix the Luck and Morale bug from 8th level creatures in WoG (by PerryR)

!?FU(OnSetupBattlefield)&1000/i^battle_isQuick^=(FALSE); 

  !!FU(Set_Morale_and_Luck):Pi^battle_hero_0^/i^battle_hero_1^/0;

  !?FU(OnCombatRound)&1000/i^battle_isQuick^=(FALSE);                                                       

  !!FU(Set_Morale_and_Luck):Pi^battle_hero_0^/i^battle_hero_1^/1;

  !?FU(OnAfterBattleAction)&1000/i^battle_isQuick^=(FALSE);

  !!FU(Set_Morale_and_Luck):Pi^battle_hero_0^/i^battle_hero_1^/1;

  !?FU(Set_Morale_and_Luck); 
    x1=Attacker Hero, x2=Defender Hero, x3=battle state 0=BF and 1=BG and BR

    Attacker

    !!re i/0/10/1;                                                                                                       
      !!BMi:T?y3;                           [Get Creature Type]
      !!if&y3=(MON_SUPREME_ARCHANGEL);                         [if 150  SupremeArchangel  found]
        *!HEx1&x3=0:R0/d1; add 1 temporary morale
        !!br;
       !!en;                              
    !!en;

    !!re i/0/10/1;
      !!BMi:T?y3;                                  [Get Creature Type]
      !!if&y3=(MON_HELL_BARON);                                [if 153  Antichrist  found]
        !!HEx2&x3=0/x2>=0/x2<=155:R1/d-1;          [add -1 temporary Luck]
        !!DO(Reduce_Luck_Fix)/21/31/1&x2=-2/x3=1:P; 
        !!br;
      !!en;
    !!en;

    !!re i/0/10/1;
      !!BMi:T?y3; Get Creature Type 
      !!if&y3=(MON_BLOOD_DRAGON);                                   [if 154  Blood Dragon  found]
        *!HEx2&x3=0/x2>=0/x2<=155:R0/d-1; add -2 temporary morale
        !!DO(Reduce_Morale_Fix)/21/31/1&x3=1/x2=-2:P; [Reduce Morale only if no enemy hero]
        !!br;
      !!en;
    !!en;

    !!re i/0/10/1;
      !!BMi:T?y3; Get Creature Type 
      !!if&y3=(MON_GHOST_BEHEMOTH); if 156  GheroOwnerst Behemoth found
        *!HEx1&x3=0/x2>=0/x2<=155:R1/d1; add 1 temporary Luck
        !!br;
      !!en;
    !!en;


    Defender

    !!re i/21/31/1;
      !!BMi:T?y3;                                      [Get Creature Type]
      !!if&y3=(MON_SUPREME_ARCHANGEL);                                    [if 150  SupremeArchangel  found]
        *!HEx2&x3=0/x2>=0/x2<=155:R0/d1; add 1 temporary morale
        *!HEx2&x3=0/x2=-2:R0/d1; add 1 temporary morale for neutrals witheroOwnerut Hero at Defending side
        !!DO(Increase_Morale_Fix)/21/31/1&x2=-2/x3=1:P; 
        !!br;
      !!en;
    !!en;

    !!re i/21/31/1;
    !!BMi:T?y3;                                        [Get Creature Type]
      !!if&y3=(MON_HELL_BARON);                                    [if 153  Antichrist  found]
        !!HEx1&x3=0/x2>=0/x2<=155:R1/d-1;              [add -1 temporary Luck]
        !!br;
      !!en;
    !!en;

    !!re i/21/31/1;
      !!BMi:T?y3; Get Creature Type 
      !!if&y3=(MON_BLOOD_DRAGON); if 154  Blood Dragon  found
        *!HEx1&x3=0/x2>=0/x2<=155:R0/d-2; add -2 temporary morale
        !!br;
        !!en;
      !!en;
    !!re i/21/31/1;
      !!BMi:T?y3;                                    [Get Creature Type]
        !!if&y3=(MON_GHOST_BEHEMOTH);                                [if 156  GheroOwnerst Behemoth found]
        !!HEx2&x3=0/x2>=0/x2<=155:R1/d2;             [add 2 temporary Luck]
        !!DO(Increase_Luck_Fix)/21/31/1&x2=-2/x3=1:P; 
        !!br;
      !!en;
    !!en;

  !?FU(Reduce_Luck_Fix);   
  !!BMx16:G213/d-1/d;                              [213 Luck]

  !?FU(Increase_Luck_Fix);   
  !!BMx16:G213/d2/d;                               [213 Luck]

  !?FU(Reduce_Morale_Fix); 
  !!BMx16:F?i;                                     [read flags]
  !!VRi:&131072;                                   [just look at waiting bit]
  !!BMx16&i=0:G212/d-2/d;                          [212 Moral]

  !?FU(Increase_Morale_Fix); 
  !!BMx16:F?i;                                     [read flags]
  !!VRi:&131072;                                   [just look at waiting bit]
  !!BMx16&i=0:G212/d1/d;                           [212 Moral]
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------
*                 [Adventure Map  - scripts for adventure map]
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------
** script that displays the distance to the end of the route is triggered by Alt/Alt + RMB on the map:
!?CM0&i^mouse_item^=(ITEM_ADVMAP_ADVENTURE_MAP)/i^mouse_action^=(MOUSE_RMB_PRESSED)/i^key_leftAlt^;

  !!OW:Cd/?(clickedPlayer:y) A(clickedPlayer)/?(heroId:y);

  !!if&(heroId)<>(NO_HERO);
    !!CM:R0;

    !!FU(gem_MovePointsLeft):Pi^mouse_mapX^/i^mouse_mapY^/i^mouse_mapZ^/(heroId)/?(pathLenght:y)/?(heroMp:y);;
    !!SN&(pathLenght)<1:T^%s(gem_m).route_1^/?z-1/^hero_name^/z3;/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);
    !!SN&(pathLenght)>=1/(heroMp)<0:T^%s(gem_m).route_2rmb^/?z-1/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);/^days_requires^/i^way_days^;
    !!SN&(pathLenght)>=1/(heroMp)>=0:T^%s(gem_m).route_3rmb^/?z-1/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);  
    !!IF:M0/4/^%z-1^;

  !!en;
!?FU(OnAdvMapTileHint)&999;
  !#VA(x:x) (y:x) (z:x);             Object entrance coordinates
  !#VA(objType:x) (objSubtype:x);    Type and subtype of object. For active hero it's object under hero.
  !#VA(tileX:x) (tileY:x) (tileZ:x); Real tile coordinates.
  !!FU(GetKeyModsState):P;
  !!if&i^key_leftAlt^=0;
    !!if|(objType)=(OBJ_HERO)/(objType)=(OBJ_FIRST);

      !!OW:C?(currPlayer:y)/?(clickedPlayer:y);
        !!re i/0/7;
          !!OW:O(clickedPlayer)/i/?(heroInTable:y);
          !!co&(heroInTable)<(HERO_FIRST);

          !!HE(heroInTable):P?(x)/?(y)/?(z);

          !!if&(x)=(tileX)/(y)=(tileY)/(z)=(tileZ);
            !!HE(x)/(y)/(z):G?(heroMovePoints:y) W?(heroMovePointsLesft:y)/1 O?(heroOwner:y);
            !!br;
          !!en;
        !!en;
          !!FU&i>7:E;
          !!MM:M?(currHint:z);
          !!VRs^gem_OriginalTileHint^:S(orHint:z);
          !!VRi^gem_OriginalTileHint^:S(TRUE);

          !!FU(gem_CheckGameLang):P;
          !!SN:T^%s(gem_m).mp_left^/?(newHint:z);
          !!MM:M^%(currHint)  {%(newHint)} %(heroMovePointsLesft) / %(heroMovePoints){)}^;

    !!FU:E;
    !!en;
  !!el;

    !!if&(objType)<=(OBJ_WITCH_HUT)|(objType)=(OBJ_FREELANCERS_GUILD)/(objType)=(OBJ_QUEST_GUARD)/(objType)=(OBJ_TRADING_POST_2);
      !!OW:C?(currPlayer:y)/?(clickedPlayer:y);
      !!OW:A(clickedPlayer)/?(activeHero:y);

      !!if&(activeHero)>(NO_HERO)/(activeHero)<=(HERO_LAST_WOG);

        !!FU(gem_MovePointsLeft):P(x)/(y)/(z)/(activeHero)/?(pathLenght:y)/?(heroMp:y)/?(isMemoryIssue:y);
        !!FU&(isMemoryIssue)=1:E;
        !!FU(gem_CheckGameLang):P;
        !!MM:M?(orHint:z);
        !!VRs^gem_OriginalTileHint^:S(orHint:z);
        !!VRi^gem_OriginalTileHint^:S(TRUE);

        !!SN&(pathLenght)<1:T^%s(gem_m).route_1^/?z-6/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);
        !!SN&(pathLenght)>=1/(heroMp)<0:T^%s(gem_m).route_2^/?z-6/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);/^days_requires^/i^way_days^;
        !!SN&(pathLenght)>=1/(heroMp)>=0:T^%s(gem_m).route_3^/?z-6/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);  ;
        !!MM:M^%z-6^;
      !!en;
    !!en;
  !!en;


!?FU(OnKeyPressed_AdvMap)&i^key^=(KEY_ALT)/999/i^key_down^;
  !!OW:Cd/?(clickedPlayer:y) A(clickedPlayer)/?(activeHero:y);
  !!if&(activeHero)>(NO_HERO)/(activeHero)<=(HERO_LAST_WOG);
    !!UN:X?(mapWidth:y)/?(isUnd:y);
    !!UN:C(ADV_MANAGER)/(UNC_INT)/?(advMgr:y);
    !!UN:C(advMgr)/232/2/?(x:y) C(advMgr)/234/2/?(y:y) C(advMgr)/235/1/?(z:y);
    
    !!if&(z)=(UNC_INT32);
      !!VR(z):F(FALSE)/(UNC_INT8);
      !!VR(y):-1024;
    !!en;

    !!if&(x)<=(mapWidth)/(y)<=(mapWidth);
      !!FU(gem_MovePointsLeft):P(x)/(y)/(z)/(activeHero)/?(pathLenght:y)/?(heroMp:y)/?(isMemoryIssue:y);


      !!if&(isMemoryIssue)<>(TRUE);
        !!FU(gem_CheckGameLang):P;
        !!MM:M?(orHint:z);
        !!VRs^gem_OriginalTileHint^:S(orHint:z);
        !!VRi^gem_OriginalTileHint^:S(TRUE);
        !!SN&(pathLenght)<1:T^%s(gem_m).route_1^/?z-6/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);
        !!SN&(pathLenght)>=1/(heroMp)<0:T^%s(gem_m).route_2^/?z-6/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);/^days_requires^/i^way_days^;
        !!SN&(pathLenght)>=1/(heroMp)>=0:T^%s(gem_m).route_3^/?z-6/^hero_name^/z3/^path_lenght^/(pathLenght)/^hero_movepoints^/(heroMp);  ;
        !!FU(AdvMap_SetHint):Pz-6;
      !!en;


    !!en;

  !!en;

!?FU(OnKeyReleased_AdvMap)&i^key^=(KEY_ALT)/999/i^gem_OriginalTileHint^;
  !!FU(AdvMap_SetHint):Ps^gem_OriginalTileHint^;
  !!SN:W^gem_OriginalTileHint^;
  
!?FU(GetRealObjectOnMap);
; x1/x2/x3 - ????? ???? ? ???; ?x4/?x5 - ????????: ????? ????
  !!VRx4:S-1;  !!VRx5:S-1;
  !!UN:C6918840/4/?y1;
  !!VRy1:+92;
  !!UN:Cy1/4/?y2;
  !!SN:E4228816/2/y2/x1/x2/x3;
  !!VRy1:Sv1 +30;  !!UN:Cy1/2/?x4;
  !!VRy1:+4;       !!UN:Cy1/2/?x5;

fill refugees by mons
!?FU(OnEveryDay)&i^timerWeekDay^=1/i^timerOnce^;

    !!FU(GetMaxMonsterId):P?(lastMon:y);
    !!UN:P200/?(isRefugeeSync:y);
    !!if&(lastMon)=(MON_DRACOLICH)/(isRefugeeSync)<>(TRUE);

      !!UN:U(OBJ_REFUGEE_CAMP)/(ANY_OBJ)/?(campsAmount:y);
      !!if&(campsAmount);
        !!re i/1/(campsAmount);
          !!UN:U(OBJ_REFUGEE_CAMP)/(ANY_OBJ)/i/2;
          !!FU(gem_GetRandomMon):P?(mon:y)/5/(MON_AZURE_DRAGON)/(MON_RUST_DRAGON)/(MON_FAERIE_DRAGON)/(MON_CRYSTAL_DRAGON)/(MON_DRACOLICH);
          !!MA:G(mon)/?(growth:y);
          !!OB2:U(mon) C(growth);
          !!SN:H^monname^/(mon)/0/?z-1;
        !!en;
      !!en;
    !!en;

!?FU(gem_GetRandomMon);
  !#VA(mon:x) (monsToExcl:x) (mons[10]:x);

  !!FU(GetMaxMonsterId):P?(result:y);
  !!VR(mon):R0/0/(result);

  !!VR(flag:y):S(TRUE);
  !!VR(flag)|(mon)=(MON_NOT_USED_1)/(mon)=(MON_NOT_USED_2)/(mon)=(MON_NOT_USED_3)/(mon)=(MON_NOT_USED_4):S(FALSE); [not used]
  !!VR(flag)&(mon)>=(MON_EMISSARY_OF_WAR)/(mon)<=(MON_EMISSARY_OF_LORE):S(FALSE); [Emissaries]
  !!VR(flag)&(mon)>=(MON_PALADIN_A)/(mon)<=(MON_ASTRAL_SPIRIT_D):S(FALSE); [Commanders]
  !!VR(flag)&(mon)>=(MON_CATAPULT)/(mon)<=(MON_ARROW_TOWERS):S(FALSE); [war_machines]
  
  !!if&(monsToExcl);
    !!re i/0/(monsToExcl)/1/-1;
      !!VR(flag)&(mon)=(mons[i]):S(FALSE); [ultra dragons]
    !!en;
  !!en;

  !!FU(arena_GetRandomMon)&(flag)=(FALSE):P?(mon)/(monsToExcl)/(mons[0])/(mons[1])/(mons[2])/(mons[3])/(mons[4])/(mons[5])/(mons[6])/(mons[7])/(mons[9]);

//  script set correct hint for artifacts - by @Archer30;
!?FU(OnAfterErmInstructions);
  *!re i/(ART_FIRST)/(ART_LAST_WOG);
    *!SN:H^art^/i/0/?(artName:z);
    *!SN:H^object^/(OBJ_ARTIFACT)/i/(artName);
  *!en;

// The following is for the compatibility with artifacts from Emerald
!?FU(OnAdvMapTileHint);
  !#VA(x:x) (y:x) (z:x) (objType:x) (objSubtype:x);

  !!FU&(objType)<>(OBJ_ARTIFACT):E;

  !!if&(objSubtype)>(ART_LAST_WOG);
    !!SN:H^art^/(objSubtype)/0/?z2;
    !!OB(x)/(y)/(z):H2;
  !!en;




!?FU(gem_MovePointsLeft);
  !#VA(x:x) (y:x) (z:x);             Object entrance coordinates
  !#VA(heroId:x) (path:x) (mPoints:x);
  !!HE(heroId):W?(heroMp:y)/1 B0/?z3;
  !!UN:X?(mapSize:y)/?(isDung:y);                      
  !!VR(tile:y):S(mapSize) *30 *(mapSize) *2 *(z);
  !!VR(mapSize): *(y) +(x);
  !!VR(mapSize): *30;                            [???? ? ????????]
  !!UN:C6918868/4/?(tileStruct:y);                    [6992D4]
  !!VR(tileStruct:y):+36;
  !!UN:C(tileStruct:y)/4/?(mapAddr:y);                         [????????]
  !!if&(mapAddr:y)=0;
    !!VRx7:S1;
    !!FU:E;
  !!en;
  !!VR(tile):+(mapSize) +(mapAddr:y) +24;
  !!UN:C(tile)/2/?(pathLength:y);
  !!VR(mPoints):S(heroMp:y)-(pathLength:y);
  !!VR(path):S(pathLength:y);


*set AB and dragon vial Blood been able to be generated on the map;

*!SN:W^gem_CheckGameLang^/?y5;
    *!SN&y8<1:T^%s(gem_m).route_1^/?z-6/^hero_name^/z3/^path_lenght^/y8/^hero_movepoints^/y10;
    *!SN&y8>=1/y10<0:T^%s(gem_m).route_2^/?z-6/^hero_name^/z3/^path_lenght^/y8/^hero_movepoints^/y10/^days_requires^/i^way_days^;
    *!SN&y8>=1/y10>=0:T^%s(gem_m).route_3^/?z-6/^hero_name^/z3/^path_lenght^/y8/^hero_movepoints^/y10;  
*!SN:D;
    *!MM:M?(existingHint:z);
    *!MM:M^%z-6^;
*!MM:Mz2;
*!VRz-1:S^%i(gem_x) %i(gem_y) %i(gem_z)^;
*!MMz-1;
*!IF:M0/4/z2; ??????: %i(way_days) ?? ??^;         *!SN:Q;


*?FU(gem_WayDays);
  *!SN:X?y1;
  *!VRy2:Sy1 +8;   *!UN:Cy2/4/?y3;  [EBP]
  *!VRy4:Sy3 +12;  *!UN:Cy4/4/?y5;  [EBP+12]
  *!VRy6:Sy5 :6;
  *!SN:W^way_days^/y6;
  *!IF:L^??????: %Y6 ?? ??^;
  *!IF:L^%^;
; --------------------------------------------------------------------------------------------------

** Script to select (make active) Hero on Adventure Map by Shift+Leftclick on Hero* (by PerryR)
** by Shift+Alt+Leftclick delete at the one moment (by daemon_n)

!?FU(OnAdventureMapLeftMouseClick)&i^mouse_item^=(ITEM_ADVMAP_ADVENTURE_MAP)/i^mouse_action^=(MOUSE_LMB_PRESSED)/999;
  !!OBi^mouse_mapX^/i^mouse_mapY^/i^mouse_mapZ^:T?(objectType:y) U?(objSubtype:y);                                                      [get type of clicked object]
  !!if&(objectType)=(OBJ_HERO);
    !!if&i^mouse_flags^=(MOUSE_FLAG_SHIFT)|i^mouse_flags^=33;
      !!OW:Cd/?(clickOwner:y) A(clickOwner)/?(activeHero:y);
      !!HEi^mouse_mapX^/i^mouse_mapY^/i^mouse_mapZ^:O?(heroOwner:y) N?(objSubtype:y);

      !!if&(heroOwner)=(clickOwner)/(activeHero)<>(objSubtype)/(objSubtype)>-1;
          !!HE(activeHero):Z?(struct:y);
          !!re i/0/7;
            !!OW:O(clickOwner)/i/?(heroInTable:y);

            !!if&(heroInTable)=(objSubtype);
              !!if&i^mouse_flags^=(MOUSE_FLAG_SHIFT);
                *!VRy1:Si+39;
                !!UN:C(ADV_MANAGER)/4/?(advMgr:y);
                !!SN:E4291200/(CALLCONV_THISCALL)/(advMgr)/(objSubtype)/0/0/1;
                !!CM:R0;                
              !!el;
                !!HE(objSubtype):B0/?z1;
                !!CM:R0;
                !!SN:T^%s(gem_m).herokill^/?z-1/^hero_name^/z1;
                !!IF:Q1/^%Z-1^;
                !!HE(objSubtype)&1:K;
              !!en;
              !!br;
            !!en;
          !!en;
      !!en;
    !!en;  
  !!en;
; --------------------------------------------------------------------------------------------------
* Show current mithril message;
!?CM5&i^mouse_item^=1008/i^mouse_flags^=(NO_MOUSE_FLAGS)/i^mouse_action^=(MOUSE_LMB_PRESSED);
    !!FU(gem_DlgItemSize):P3234/?(width:y)/?(height:y);
    !!FU(gem_DlgItemPosition):P3234/?(x:y)/?(y:y);

    !!VR(xDif:y):Si^mouse_x^ -(x) +20;
    !!VR(yDif:y):Si^mouse_y^ -(y);
    !!if|(xDif)<(width)/(yDif)>(height);
      !!FU(gem_DisplayMithrilMessage):P;
    !!en;
!?CM0&i^mouse_item^=1008/i^mouse_flags^=(MOUSE_FLAG_RMB);

    !!FU(gem_DlgItemSize):P3234/?(width:y)/?(height:y);
    !!FU(gem_DlgItemPosition):P3234/?(x:y)/?(y:y);

    !!VR(xDif:y):Si^mouse_x^ -(x) +20;
    !!VR(yDif:y):Si^mouse_y^ -(y);
    !!if|(xDif)<(width)/(yDif)>(height);
      !!OW:Cd/?(clickedPlayer:y);
      !!OW:R(clickedPlayer)/(RES_MITHRIL)/?(resNumber:y);

      !!if&(resNumber)>0;
          !!SN:T^%s(gem_s).line7+^/?z1/^mithril^/(resNumber);
      !!el;
          !!SN:T^%s(gem_s).line7^/?z1/^mithril^/(resNumber);
      !!en;

      !!CM:R0;
      !!IF:M0/4/^%z1^; Q1^%Z-2^;      !FU(gem_Buttons_Disabling)&1:P;
    !!en;


; --------------------------------------------------------------------------------------------------

; --------------------------------------------------------------------------------------------------
* Show current time and laptop battery charge level by rightclick on game date * (by feanor)
!?CM0&i^mouse_item^=1008/i^mouse_flags^=(MOUSE_FLAG_RMB);
!#VA(usedY[10]:y);

    !!FU(gem_DlgItemSize):P3234/?(width:y)/?(height:y);
    !!FU(gem_DlgItemPosition):P3234/?(x:y)/?(y:y);
    !!VR(xDif:y):Si^mouse_x^ -(x);
    !!VR(yDif:y):Si^mouse_y^ -(y);
    !!if|(xDif)<(width)/(yDif)>(height);
      *!IF:L^%(width) %(xDif) %i(mouse_y) %(yDif) %(height) ^;
    !!en;

    !!if&(xDif)>(width)/(yDif)<(height);
      !!CM:R0;
      !!VRz1:S^kernel32.dll^;
      !!SN:Lz1/?y2;
      !!VRz1:S^GetSystemPowerStatus^;
      !!SN:Ay2/z1/?y3;
      !!SN:Ey3/1/?y4;
      !!VRy10:Sy4;
      !!VRy10::65536;
      !!VRz1:S^GetLocalTime^;
      !!SN:Ay2/z1/?y3;
      !!SN:Ey3/1/?y4;
      !!VRy8:Sy6;
      !!VRy9:Sy6;
      !!VRy8::65536;
      !!VRy9:%65536;
      !!SN:W^gem_CheckGameLang^/?y5;
      !!SN:T^%Y5_gem_map.time1^/?z-1;/^heroOwnerur^/y9/^minute^/y8;
      !!SN:T^%Y5_gem_map.time2^/?z-2;/^effect^/y10;
      !!IF&y10<>255/y9>9/y8>9:M0/4/^%Z-1 %Y9:%Y8

      %Z-2 %Y10%%^;
      !!IF&y10=255/y9>9/y8>9:M0/4/^%Z-1 %Y9:%Y8^;
      !!IF&y10<>255/y9<10/y8>9:M0/4/^%Z-1 0%Y9:%Y8

      %Z-2 %Y10%%^;
      !!IF&y10=255/y9<10/y8>9:M0/4/^%Z-1  0%Y9:%Y8^;;
      !!IF&y10<>255/y9<10/y8<10:M0/4/^%Z-1 0%Y9:0%Y8

      %Z-2 %Y10%%^;
      !!IF&y10=255/y9<10/y8<10:M0/4/^%Z-1 0%Y9:0%Y8^;
      !!IF&y10<>255/y9>9/y8<10:M0/4/^%Z-1 %Y9:0%Y8

      %Z-2 %Y10%%^; 
      !!IF&y10=255/y9>9/y8<10:M0/4/^%Z-1 %Y9:0%Y8^;
    !!en;
  *!en;
  
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------
* --------------------------------------  [Hero Screen scripts] ----------------------------------------
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------


; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------
; ??????? ??? ??? ???? (by igrik)

!?FU(OnHeroesMeetScreenMouseClick);                   [disable clicks on chat and outside hero swap screen @daemon_n]
  *!if|i^mouse_item^=37/i^mouse_x^>800/i^mouse_y^>622;
    *!CM:R0;
    *!IF:L^%^;
  *!en;
; give Banners to Hero from stacks by CTRL + RMB on stack in hero screen (by igrik)
!?FU(OnHeroScreenMouseClick)&999/i^mouse_action^=(MOUSE_RMB_PRESSED)/i^key_leftCtrl^/i^mouse_item^>=68/i^mouse_item^<=74;

  !!VR(slot:y):Si^mouse_item^ -68;
    !!HE-1:C0/(slot)/?(num:y)/d;
    !!if&(num)<>(NO_MON);
      !!EX-1/(slot):R?(isArt:y)/(ART_WARLORDS_BANNER)/?(artSub:y)/?(arts:y);

      !!if&(isArt);
        !!CM:R(FALSE);
        !!if&(isArt)>1;
          !!EX-1/(slot):R1/(ART_WARLORDS_BANNER)/(artSub)/d-1;
        !!el;
          !!EX-1/(slot):R0/(ART_WARLORDS_BANNER)/(artSub)/0;
        !!en;
        !!SN:P^Button.wav^;
        !!HE-1:A(ART_WARLORDS_BANNER);
        !!UN:R3/-1;      
      !!en;
    !!en;

!?FU(OnHeroScreenMouseClick);
  !!if&i^mouse_flags^=512/i^mouse_item^=8000/i^Typhon_Third_Upgrade_Mod_Active^=(FALSE);
    !!SN:W^gem_CheckGameLang^/?y5;
    !!SN:T^%Y5_gem_hero.backpack^/?z-1;
    !!CM:R0;
    !!IF:M0/4/^%Z-1^;
  !!en;

  !!if&i^mouse_flags^=512/i^mouse_item^=128;
    !!SN:W^gem_CheckGameLang^/?y5;
    !!SN:T^%Y5_gem_hero.questlog^/?z-1;
    !!CM:R0;
    !!IF:M0/4/^%Z-1^;
  !!en;
;-------------------------------------------------------------------------------
witch huts - set all Sec Skills fix (not SKILL_NAVIGATION/ not SKILL_NECROMANCY)
!?FU(OnAfterErmInstructions);
  !!UN:C6919480/4/?(value:y);
  !!VR(address:y):S(value) +128980;
  !!UN:C(address)/1/?(mapType:y); [y11=114 ?? ???????? (????[r]andom_maps)] 
  !!if&(mapType)=114;

    *#VA(x:y) (y:y) (z:y) (skillWh:y) (randValue:y); [define variables to store object coordinates]
    *!VR(x):S-1;                            [setting x-coordinate to -1 will force to start search from scratch]
    *!re i;                                 [endless loop]
      *!UN:U(OBJ_WITCH_HUT)/(ANY_OBJ)/-1/(x)/(y)/(z); [find next monster, (x) = -1 on failure]
      *!br&(x)<0;                          [exit loop if nothing found]
      *!WH(x)/(y)/(z):S?(skillWh);
      *!SN:H^secskill^/(skillWh)/0/?z-1;
      *!IF:L^%(skillWh) %z-1^;
      *!if&(skillWh)<(SKILL_WATER_MAGIC);
        *!re f;
          *!VR(randValue):S(SEC_SKILL_FIRST) R(SEC_SKILL_LAST);
          *!br&(randValue)<>(SKILL_NAVIGATION)/(randValue)<>(SKILL_NECROMANCY);
        *!en;
        *!WH(x)/(y)/(z):S(randValue);
        *!WH(x)/(y)/(z):S?(skillWh);
      *!en;
    *!en;

    !!UN:U(OBJ_TOWN)/(ANY_OBJ)/?(townsAmount:y);
    !!UN:U(OBJ_RANDOM_TOWN)/(ANY_OBJ)/?(randomTownsAmount:y);
    !!VR(townsAmount)&(randomTownsAmount):+(randomTownsAmount);

    !!re i/(MAP_TOWN_FIRST)/(townsAmount)/1/-1;
      *!CA0/i&(canBuild):B6/30;
      !!FU(Town_CanBuildingBuilt):Pi/31/?(canBuild:y);
      !!CA0/i&(canBuild):B6/31;
    !!en;
  !!en;

!?FU(Town_CanBuildingBuilt);
  ; x1 - town number on map (0...47)
  ; x2 - building id
  ; x3 - return: bool (0-no, 1-yes)
  !!FU(Town_GetStruct):Px1/?y1;
  !!CA0/x1:R?y2 R0;
  !!SN:E6033696/2/y1/x2;
  !!VRx3:S0;    
  !!VRx3&v1<>0:S1;
  !!CA0/x1:Ry2;

!?FU(Town_GetStruct);
  ; x1 - town number on map (0...47)
  ; x2 - return: ptr structure town
  !!IF&x1<0|x1>47:M^Wrong town id.^;
  !!UN:C6919480/4/?y1; 
  !!VRy1:+136724;
  !!UN:Cy1/4/?y2; 
  !!VRx2:Sx1 *360 +y2;
  !!IF&x2<43200000:M^{Attention!}
  Error in getting town structure address. 
  The game may fall at any time.^; 


!?FU(OnBattleScreenMouseClick);|(BATTLE_TYPE_FLAG_RIGHT_HAS_HERO);
  !!CM:I?(clickPosition:y) S?(clickType:y);
  !!if&(clickPosition)=2001/(clickType)=(MOUSE_RMB_PRESSED);            [surrender button]
    !!OW:C?(currPlayer:y)/?(clickedPlayer:y) R(clickedPlayer)/(RES_GOLD)/?(goldAmount:y);
    !!CM:R0;
    !!FU(gem_CheckGameLang):P;
    !!BA:H0/?(attackingHero:y) H1/?(defendingHero:y);
    !!SN:T^%s(gem_b).surrendGold^/?(goldAmountMessage:z)/^gold^/(goldAmount);
    !!VR(rmbMessage:z):S(goldAmountMessage);

    !!if&(attackingHero)>(NO_HERO)/(defendingHero)>(NO_HERO);
      !!BG:Q?(activeSide:y);
      !!VR(isNeedWait:y):S(TRUE);

      !!if&(clickedPlayer)=(currPlayer)/(activeSide)=0;
        !!UN:C6919200/4/?(idBattleMgr:y);
        !!SN:E4682544/2/(idBattleMgr)/(clickedPlayer);      [call of the calculation retreatPrice]
        !!VR(retreatPrice:y):Sv1;
        !!SN:T^%s(gem_b).surrendPrice^/?(retreatPriceMessage:z)/^price^/(retreatPrice);
        !!VR(isNeedWait):S(FALSE);
        *!VR(rmbMessage):+(retreatPriceMessage);
      !!en;
      
      !!if&(clickedPlayer)<>(currPlayer)/(activeSide)=1;
        !!UN:C6919200/4/?(idBattleMgr:y);
        !!SN:E4682544/2/(idBattleMgr)/(clickedPlayer);      [call of the calculation retreatPrice]
        !!VR(retreatPrice:y):Sv1;
        !!SN:T^%s(gem_b).surrendPrice^/?(retreatPriceMessage:z)/^price^/(retreatPrice);
        !!VR(isNeedWait):S(FALSE);
        *!VR(rmbMessage):+(retreatPriceMessage);
      !!en;

      !!if&(isNeedWait)=(TRUE);
        !!SN:T^%s(gem_b).surrendWait^/?(retreatPriceMessage:z);
      !!en;
      !!VR(rmbMessage):+(retreatPriceMessage);
    !!en;


    !!IF:M0/4/(rmbMessage);%(retreatPriceMessage)^;
  !!en;

  *?FU(OnAfterErmInstructions);
  *!re i/0/155;
    *!HEi:A1/0/17;
  *!en;
  *!MA:X1/d32768;             [Lizard Warrior gets Double Shot]

  *!MA:X(MON_HYDRA)/d(MON_FLAG_ATTACKS_TWICE);
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------
*                 [TOWN SCRREN SCRIPTS  - scripts for towns]
; --------------------------------------------------------------------------------------------------
; --------------------------------------------------------------------------------------------------

!?FU(OnKeyPressed_Town)&x1=(KEY_A);/i^key_down^;

  !!SN:F^PluginExists^/^fast upgrade stacks in town^;
  !!FU&v1<>(TRUE):E;
  !!CM:I?(itemId:y);

  !!if&(itemId:y)<>148/(itemId:y)<>i^gem_InTownKey_A_Pressed^;
    !!VRi^gem_InTownKey_A_Pressed^:S(itemId);
    !!FU(gem_CheckUpgradeCostInTown):P(itemId:y);
  !!en;

!?FU(OnKeyReleased_Town)&x1=(KEY_A)/i^gem_InTownKey_A_Pressed^;

  !!FU(H3Dlg_GetCurrentDlg):P?(currDlg:y);
  !!FU(H3Dlg_SendCmdToItem):P(currDlg)/7001/(DLG_CMD_SET_TEXT)/^^/(DLG_CMD_TYPE_DEFAULT);
  !!SN:D;s
  !!VRi^gem_InTownKey_A_Pressed^:S(FALSE);

!?FU(OnTownMouseHint)&i^gem_InTownKey_A_Pressed^;/i^key_down^;
  

  !!ifi^gem_InTownKey_A_Pressed^<>148;
    !!FU(gem_CheckUpgradeCostInTown):Pi^gem_InTownKey_A_Pressed^;
  !!en;


!?FU(gem_CheckUpgradeCostInTown);
!#VA(clickPlace:x);
  !!if&(clickPlace)>=115/(clickPlace)<=121;
    !!VR(monPosition:y):S(clickPlace) -115;
    !!CA-1:H0/?(heroGuard:y);

    !!if&(heroGuard)>(NO_HERO);
      !!HE(heroGuard):C0/(monPosition)/?(monType:y)/?(monAmount:y);
    !!el;
      !!CA-1:M2/(monPosition)/?(monType:y)/?(monAmount:y);
    !!en;

    !!FU(gem_DisplayUpgradeCostInTown)&(monAmount):P(monType)/(monAmount)/(clickPlace);
    !!FU:E;
  !!en;

  !!if&(clickPlace)>=140/(clickPlace)<=146;

    !!CA-1:H1/?(heroGuest:y);

    !!if&(heroGuest)>(NO_HERO);
      !!VR(monPosition:y):S(clickPlace) -140;
      !!HE(heroGuest):C0/(monPosition)/?(monType:y)/?(monAmount:y);
      !!FU(gem_DisplayUpgradeCostInTown)&(monAmount):P(monType)/(monAmount)/(clickPlace);
    !!en;

    !!FU:E;
  !!en;


!?FU(OnOpenTownScreen);
  !!VRi^gem_TownScreenIsOpen^:S(TRUE);
!?FU(OnCloseTownScreen);
  !!VRi^gem_TownScreenIsOpen^:S(FALSE);

!?FU(OnDetermineMonInfoDlgUpgrade);
!#VA(monType:x) (upgType:x) (town:x) (hero:x);
  !!if&(upgType)>-1;
    !!VRi^gem_MonCanBeUpgraded^:S(TRUE);
  !!en;

!?FU(gem_OnOpenCreatureScreenByLeftMouse)&i^gem_MonCanBeUpgraded^/i^gem_TownScreenIsOpen^;
  !!VRi^gem_MonCanBeUpgraded^:S(FALSE);

  !!UN:Cx1/0/4/?(monType:y);
  !!UN:Cx1/76/4/?(monAmount:y); get mon num
  !!FU(gem_DisplayUpgradeCostInTown):P(monType)/(monAmount);/(clickPlace);

!?FU(gem_OnOpenCreatureScreenByRightMouse)&i^gem_TownScreenIsOpen^;
  !!UN:Cx1/0/4/?(monType:y);
  !!UN:Cx1/76/4/?(monAmount:y); get mon num
  !!FU(gem_DisplayUpgradeCostInTown):P(monType)/(monAmount);/(clickPlace

!?FU(gem_DisplayUpgradeCostInTown);
!#VA(monType:x) (monAmount:x) (clickPlace:x);

    !!SN:E7662803/1/(monType);
    !!VR(upgMonType:y):Sv1;

    !!if&(upgMonType)>-1;
      !!if&(monAmount)>1;
        !!SN:H^monname^/(monType)/1/?(monName:z);
        !!SN:H^monname^/(upgMonType)/1/?(upgMonName:z);
      !!el&(monAmount)=1;
        !!SN:H^monname^/(monType)/0/?(monName:z);
        !!SN:H^monname^/(upgMonType)/0/?(upgMonName:z);
      !!en;

      !!OW:Cd/?(clickedPlayer:y);
      !!VR(monDifCost:z):S^{%(monAmount)} %(monName) --> {%(monAmount)} %(upgMonName)  ^;
      !!VR(lackOfRes:z):S^^;

      !!re i/(RES_GOLD)/0/-1;
        !!MA:C(monType)/i/?(monCost:y);
        !!MA:C(upgMonType)/i/?(upgMonCost:y);
        !!OW:R(clickedPlayer)/i/?(resAmount:y);

        !!VR(diffCost:y)&(upgMonCost)>(monCost):S(upgMonCost) -(monCost) *(monAmount);

        !!if&(resAmount)>=(diffCost)/(upgMonCost)>(monCost);
          !!VR(monDifCost:z):+^{%(diffCost)} {~>smalres.def:%i} ^;
        !!el&(upgMonCost)>(monCost);
          !!VR(monDifCost:z):+^{~red} %(diffCost) {~>smalres.def:%i}} ^;
          !!VR(notEnoughRes:y):S(diffCost) -(resAmount);
          !!VR(lackOfRes:z):+^ %(notEnoughRes)  {~>smalres.def:%i} ^;
        !!en;
      !!en;

      !!VR(space:z):S^^;
      !!VR(space)&(lackOfRes)<>^^:S^/ ^; (lackOfRes);
      !!FU(H3Dlg_GetCurrentDlg):P?(currDlg:y);
      !!FU(H3Dlg_SendCmdToItem):P(currDlg)/7001/(DLG_CMD_SET_TEXT)/^{~text align=center}%(monDifCost) %(space)%(lackOfRes)}^/(DLG_CMD_TYPE_DEFAULT);
      !!SN:D;s
      *!IF:L^%Y5^;
      !!FU(H3Dlg_SendCmdToItem):P(currDlg)/7001/(DLG_CMD_SET_TEXT)/^^/(DLG_CMD_TYPE_DEFAULT);
    !!en;



; Archer30's hacks


; Disable right-click on Kingdom Overview for mithril
!?FU(OnAfterErmInstructions);
!!VRi^wog_149_kingdomRMBEnabled^:S(FALSE);

; Remove buggy neutral stacks by mouse hovering. Occasionally a stack with the size 4095 is generated on the map with UN:I command.
; This script is better executed before everything else.
!?FU(OnAdvMapTileHint);
!#VA(x:x) (y:x) (z:x) (objType:x) (objSubtype:x);

!!if&(objType)=(OBJ_MONSTER);
  !!VR(qty:y):S0;
  !!MO(x)/(y)/(z):G?(qty);
  !!UN&(qty)<=0:O(x)/(y)/(z)/1;
!!en;
