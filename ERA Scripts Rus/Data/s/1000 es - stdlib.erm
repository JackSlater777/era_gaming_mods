ZVSE2
; Author:   Archer30, daemon_n and various authors
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework


********************************
**** Option Compatibilities ****
********************************
// Get the number of War Machines of Enhanced War Machines III at the end of battle
!?FU(OnAfterBattleAction);
!!UN:P73/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

!!BU:C?(battleIsEnded:y);

!!if&(battleIsEnded);

  ; Get the hero who won the battle, exit if no one won
  !!VR(wonHero:y):S(NO_HERO);

  !!re i/(BATTLE_LEFT)/(BATTLE_RIGHT);
    !!HEi^battle_hero_%i^:O?(owner:y);

    !!if&(owner)>(NO_OWNER);
      !!VR(wonHero):Si^battle_hero_%i^;
      !!VR(lostSide:y):Si X1;
      !!VR(lostHero:y):Si^battle_hero_%(lostSide)^;

      !!br;
    !!en;
  !!en;

  !!FU&(wonHero)=(NO_HERO):E;

  ; Get the number of the remaining War Machines of the lost hero
  !!IF:W(lostHero);
  !!VRi^es_737_capturedWM1^:Sw81;
  !!VRi^es_737_capturedWM2^:Sw82;
  !!VRi^es_737_capturedWM3^:Sw83;
!!en;

// Disable Rebalanced Starting Armies (WoG) if Balanced Starting Army (ES) is enabled
!?FU(ES_764_Initialization);
!!UN:P764/?(wogOption:y);               [проверяем включена ли опция 764 в v1]

; Check if the current map is a random map, disable Balanced Starting Army (ES) if not
!!if&(wogOption);
  !!FU(ES_CheckRandomMap):P?(isRandMap:y);

  !!if&(isRandMap)<>(TRUE);
    !!UN:P764/(FALSE);                  [отключение опции для нерандомной карты]
  ; Disable Rebalanced Starting Armies (WoG) if the map is a random map
  !!el;
    !!UN:P199/(FALSE);                  [отключаем опцию 199 "Измененные стартовые армии героев"]
    !!VRi^wog_199_enabled^:S(FALSE);
  !!en;
!!en;

// Check if the current map is a random map
!?FU(ES_CheckRandomMap);
!#VA(result:x);

!!VR(result):S(FALSE);
!!UN:C6919480/4/?(value:y);
!!VR(address:y):S(value) +128980;
!!UN:C(address)/1/?(value2:y);              [(value2)=114 -> random map]

!!VR(result)&(value2)=114:S(TRUE);

!#FU(ES_764_Initialization):P;

// Temporally disable Extention Heroes if Tyrant is enabled, would be re-enabled again when Tyrant is set up
!?FU(ES_770_DisableExtentionHeroes);
!!UN:P100/?i^ES_100_enabled^;
!!UN:P770/?(wogOption:y);
!!UN&(wogOption):P100/0;

!#FU(ES_770_DisableExtentionHeroes):P;

// Determine the mode of Landing Navigation by checking the percentage of water on the surface
!?FU(ES_773_Initialization);
!!UN:P773/?(landNavi:y);                [проверяем включена ли опция 773]
!!FU&(landNavi)<>(TRUE):E;

; Loop through all the tiles on the surface to get the percentage of water
!!VR(waterTiles:y):S0;
!!UN:X?(width:y)/?(level:y);

!!re (x:y)/0/(width)/1/-1;
  !!re (y:y)/0/(width)/1/-1;
    !!TR(x)/(y)/0:T?(terrain:y);
    !!VR(waterTiles)&(terrain)=8:+1;    [8 = water]
  !!en;
!!en;

!!VR(totalTiles:y):S(width) *(width);
!!VR(waterPercent:y):S(waterTiles) *100 :(totalTiles);

!!if&(waterPercent)<15;
  ; Set the global variable for land mode
  !!UN:P773/2;
  !!VRi^es_770_landMode^:S(TRUE);

  ; Ban water artifacts and spells
  !!UN:A(ART_NECKLACE_OF_OCEAN_GUIDANCE)/1 A(ART_BOOTS_OF_LEVITATION)/1 A(ART_SEA_CAPTAINS_HAT)/1 A(ART_ADMIRALS_HAT)/1; [запрет водных артефактов]
  !!UN:P152/1 P153/1 P221/1;            [включение опций Бана водных заклинаний]
  !!UN:J0/(SPELL_SUMMON_BOAT)/1 J0/(SPELL_SCUTTLE_BOAT)/1 J0/(SPELL_WATER_WALK)/1; [Бан водных заклинаний в Гильдиях Магов и Пирамидах]
!!en;

!#FU(ES_773_Initialization):P;

// The following changes are critical to the initialization of secondary skill text
// Disable Resistance II if Enhanced Resistance is enabled
!?FU(ES_777_DisableResistanceII);
!!UN:P777/?(enhRes:y);                  [проверяем включена ли опция 777]

!!if&(enhRes);
  !!UN:P210/(FALSE);                    [если включена, отключаем опцию Сопротивление II]
  !!VRv7195:S(FALSE);                   [...]
!!en;

!#FU(ES_777_DisableResistanceII):P;

// Set the random hero to retreated in order to skip Mortal heroes's hero rebirth
// Execute sooner than random hero's global var i^wog_72_randHeroActive^ reset
!?FU(OnAfterBattleUniversal);           // после боя
!!UN:P788/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;             // выход, если опция не включена

!!FU|i^es_788_lastBattleAction^=(BATTLE_ACTION_RETREAT)/i^es_788_lastBattleAction^=(BATTLE_ACTION_SURRENDER):E;                       // выход, если герой сбежал/откупился

!!BA:H0/?(leftHero:y) H1/?(rightHero:y);                     // атакующий/защищающийся герои, выход, если не битва двух героев
!!HE(leftHero):O?(leftOwner:y);
!!FU(ES_788_Rebirth)&(leftHero)>(NO_HERO)/(leftOwner)=(NO_OWNER):P(leftHero);    // перерождение атакующего героя, если он погиб

!!if&(rightHero)>(NO_HERO)/i^wog_72_randHeroActive^<>(TRUE);
  !!HE(rightHero):O?(rightOwner:y);                          // владельцы атакующеего/защищающегося героя
  !!FU(ES_788_Rebirth)&(rightOwner)=(NO_OWNER):P(rightHero);  // перерождение защищающегося героя, если он погиб
!!en;

// Disable Sorcery II if Critical Sorcery is re-enabled
!?FU(ES_789_DisableSorceryII);
!!UN:P789/?(critSorcery:y);             [проверяем включена ли опция 789]

!!if&(critSorcery);
  !!UN:P213/0;                          [если включена, отключаем опцию Волшебство II]
  !!VRv7198:S0;                         [...]
!!en;

!#FU(ES_789_DisableSorceryII):P;

// Ask to write a spell to the spell book if condition has been meet
// Execute sooner than daemon_n's Spell Research
!?FU(OnTownMouseClick)&i^mouse_item^>=0/i^mouse_item^<=4/i^mouse_action^=(MOUSE_LMB_PRESSED)/i^key_shift^;
!!UN:P880/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

!!FU(ES_880_WriteSpellToSpellBook):P;

**********************
**** Set Up hooks ****
**********************

!?FU(OnStartOrLoad);
!!SN:L^erm_hooker.era^/?(ermHooker:y);
!!FU&(ermHooker)=0:E;

!!SN:A(ermHooker)/^SetHook^/?(address:y);
!!FU(ES_CreateERMHook):P(address:y);

!?FU(ES_CreateERMHook);
!#VA(address:x);

!!SN:E(address)/1/4462998/(ES_HOOK_AfterAttackMainFunc); [Trigger after melee attack, before retaliation]
!!SN:E(address)/1/4455129/(ES_HOOK_AfterAttackMainFunc); [Trigger after shooting]
!!SN:E(address)/1/5085308/(ES_OnArtifactGiveSpell); [Trigger when artifact with spell given is about to be equipped]
!!SN:E(address)/1/5144585/(ES_OnGetHillFortCreatureLevel); [Trigger on getting creature levels at Hill Forts]
!!SN:E(address)/1/5893984/(ES_OnPlayerChooseSpell); [Trigger on player choosing a spell on the battlefield]

!!SN:E(address)/1/5008601/(ES_EndOfTurn);                     [trigger on every player end of turn]

!!UN:P879/?(isCaptureObjOpt:y);                [провер€ем включена ли опци€ в y1]
!!if&(isCaptureObjOpt);
  !!SN:E(address)/1/4864048/(ES_OnPlayerVisit_MystGarden); [Trigger on player choosing a spell on the battlefield]
  !!SN:E(address)/1/4880976/(ES_OnPlayerVisit_WaterWheel); [Trigger on player choosing a spell on the battlefield]
  !!SN:E(address)/1/4881456/(ES_OnPlayerVisit_WindMill); [Trigger on player choosing a spell on the battlefield]
!!en;



!?FU(ES_HOOK_AfterAttackMainFunc);      [by igrik]
!!SN:X?(hook:y);
!!UN:C(hook)/0/(UNC_INT)/?(stackStrucktDefender:y);   
!!UN:C(hook)/4/(UNC_INT)/?(stackStrucktAttacker:y);  
!!BG:A?(typeAttack:y);
!!VR(stackAttackerID:y):S(NO_STACK); 
!!VR(stackDefenderID:y):S(NO_STACK); 

!!if&(stackStrucktAttacker)<>(FALSE); 
  !!UN:C(stackStrucktAttacker)/244/(UNC_INT)/?(attakerSide:y); 
  !!UN:C(stackStrucktAttacker)/248/(UNC_INT)/?(attakerStackIdInSide:y);
  !!VR(stackAttackerID):S(attakerSide) *(BATTLE_STACKS_PER_SIDE) +(attakerStackIdInSide); 
!!en;

!!if&(stackStrucktDefender)<>(FALSE);
  !!UN:C(stackStrucktDefender)/244/(UNC_INT)/?(defenderSide:y);
  !!UN:C(stackStrucktDefender)/248/(UNC_INT)/?(defenderStackIdInSide:y);
  !!VR(stackDefenderID):S(defenderSide) *(BATTLE_STACKS_PER_SIDE) +(defenderStackIdInSide);
!!en;

!!FU(ES_OnAfterMelee)&(typeAttack)=(BATTLE_ACTION_WALK_AND_ATTACK):P(stackAttackerID)/(stackDefenderID);
!!FU(ES_OnAfterShoot)&(typeAttack)=(BATTLE_ACTION_SHOOT):P(stackAttackerID)/(stackDefenderID);
!!FU(ES_OnAfterAttack)|(typeAttack)=(BATTLE_ACTION_WALK_AND_ATTACK)/(typeAttack)=(BATTLE_ACTION_SHOOT):P(stackAttackerID)/(stackDefenderID);

************************************
**** Set up object repalcements ****
************************************
; Warning: This must be executed later than Function for getting artifacts of different levels
!?FU(OnAfterErmInstructions);
; deleting the sound in the delete object function
; because it causes a crash
!!UN:C4893167/2/?(patch:y);
!!UN:C4893167/2/24555;
; get size of the map
!!UN:X?(mapSize:y)/?(hasUnderground:y);

; pass once through all cells of the map
!!re l/0/(hasUnderground);    coord z
  !!re k/0/(mapSize)/1/-1;    coord y
    !!re i/0/(mapSize)/1/-1;  coord x
      !!OBi/k/l:T?(objType:y) U?(objSubtype:y);
      !!TRi/k/l:E?(isYellowSquare:y) P?(isPassable:y); 
      !!VR(isYellowSquare):X1;  reverse param isYellowSquare
      !!FU(ES_OnIterateAllMapObjects):Pi/k/l/(objType)/(objSubtype)/(isYellowSquare)/(isPassable);
    !!en;
  !!en;
!!en;
; restoring the source code of the sound
; in the delete objects function
!!UN:C4893167/2/(patch);

*******************
**** Functions ****
*******************

// Get strings from text resources
!?FU(ES_GetStringByFilename);
!#VA(txtFilename:x);                    [filename of the text]
!#VA(rowIndex:x);                       [index of row, starts from 0]
!#VA(string:x);                         [returned string]

; Standarize the filename
!!FU(StrToLower):Pz(txtFilename)/?(text:z);
; Remove filename extension (if applicable)
!!SN:K(text)/?(size:y);
!!VR(index:y):S(size) -4;
!!SN:K(text)/(index)/?(character:z);
!!FU(Substr)&(character)=^.^:P(text)/0/-4/?(text);

!!if&(text)=^arraytxt^;
  !!VR(address:y):S6971564;             [array text]
!!el&(text)=^artevent^;
  !!VR(address:y):S6909120;             [artifact events]
!!el&(text)=^crgen1^;
  !!VR(address):S6886304;               [creature generator 1]
!!el&(text)=^crgen4^;
  !!VR(address):S6887052;               [creature generator 4]
!!el&(text)=^dwelling^;
  !!VR(address):S6972144;               [dwelling]
!!el&(text)=^minename^;
  !!VR(address):S6968376;               [mine names]
!!el&(text)=^objnames^;
  !!VR(address):S6974640;               [object names]
!!el&(text)=^plcolors^;
  !!VR(address):S6976900;               [player colour]
!!el&(text)=^priskill^;
  !!VR(address):S6974556;               [primary skills]
!!el&(text)=^restypes^;
  !!VR(address):S6968208;               [resources]
!!el&(text)=^skilllev^;
  !!VR(address):S6979432;               [secondary skill levels]
!!el&(text)=^genrltxt^;
  !!VR(address):S6970820;
!!el;
  !!VR(string):Z^Wrong txt filename!^;
  !!FU:E;
!!en;

; @Master Of Puppets
!!UN:C(address)/(UNC_INT)/?(value:y);            
!!VR(address2:y):S(value) +32;
!!UN:C(address2)/(UNC_INT)/?(value3:y);
!!VR(address3:y):S(rowIndex) *4 +(value3);
!!UN:C(address3)/(UNC_INT)/?(value4:y);
!!SN:X?(value5:y) X(value4) X?z1 X(value5);
!!VR(string):Z^%z1^;

// Get or set string in a text table file
!?FU(ES_GetTxtTableString);             [by daemon_n]
!#VA(txtFilename:x);                    [filename of the text table]
!#VA(rowNum:x);                         [index of row]
!#VA(colNum:x);                         [index of column]
!#VA(string:x);                         [returend string]

; Standarize the filename
!!FU(StrToLower):Pz(txtFilename)/?(text:z);
; Reove filename extension (if applicable)
!!SN:K(text)/?(size:y);
!!VR(index:y):S(size) -4;
!!SN:K(text)/(index)/?(character:z);
!!FU(Substr)&(character)=^.^:P(text)/0/-4/?(text);

!!if&(text)=^znpc00^;
  !!VR(address:y):S42338084;
!!el;
  !!VR(string):Z^Wrong txt filename!^;
  !!FU:E;
!!en;

!!SN:E7827723/(CALLCONV_CDECL)/(rowNum)/(colNum)/(address);
!!SN:Bv1/d/?(text:z);
!!VR(string):Z(text);

// Get the string of an object owner
!?FU(ES_GameMgr_GetObjOwnerStr);
; string returns to global s^result^
; x1 - owner id
; x2 - owner text
!#VA(owner:x) (string:x);
!!if&(owner)>=(PLAYER_FIRST)/(owner)<=(PLAYER_LAST):;  
  !!VR(offset:y):S(owner) *4 +6969600; 
  !!UN:C(offset)/4/?(ptrOwnerName:y);
  !!SN:B(ptrOwnerName)/d/?(str:z);
  *!IF:L^%(@str)^;
  !!VR(string):Z(str);
!!en;

// Set up IF:N dialogue with array
!?FU(ES_SetupMultiPicDlg);              [by Berserker]
!#VA(argsArr:x); SN:M array ID with picture type and subtype pairs.

!!SN:M(argsArr)/?(numArgs:y);
!!VR(numArgPairs:y):S(numArgs) :2;
!!VR(numArgPairs)&(numArgPairs)>8:S8;

!#VA(params[16]:y);

!!re i/0/(params[SIZE])/1/-1;
  !!VR(params[i]):S(NO_PIC_TYPE);
!!en;

!!VR(paramPtr:y):S(@params);
!!VR(argInd:y):S0;

!!re i/0/(numArgPairs)/1/-1;
  !!SN:V(argsArr)/(argInd)/?(picType:y)/?(picValue:y);

  !!if&(picType)<>(NO_PIC_TYPE);

    !!if|(picType)<>(PIC_TYPE_MONSTER)/(picValue)>=(MON_FIRST);
      !!VRy(paramPtr):S(picType);
      !!VR(paramPtr):+1;
      !!VRy(paramPtr):S(picValue);
      !!VR(paramPtr):+1;
    !!en;
  !!en;

  !!VR(argInd):+2;
!!en;

!!IF:N(params[0])/(params[1])/(params[2])/(params[3])/(params[4])/(params[5])/(params[6])/(params[7])/
      (params[8])/(params[9])/(params[10])/(params[11])/(params[12])/(params[13])/(params[14])/(params[15]);

// Get a monster's rank with its experience
; Returns R11 as R10
!?FU(ES_GetMonRankWithExp);             [by Hawaiing]
!#VA(mon:x) (exp:x) (rank:x);

; Get the exp of R11
!!EA(mon):L?(monExpR10:y) P?(monExpTop:y);
!!VR(monExpR11:y):S(monExpR10) +(monExpTop);

!!if&(exp)=(monExpR11);
  !!VR(rank):S11;
!!el;
  !!SN:E7503648/1/(mon)/(exp);
  !!VR(rank):Sv1;
!!en;

// Get the coordinates by battle position
!?FU(ES_GetBattleHexCoordinates);       [by Hawaiing]
!#VA(position:x) (x:x) (y:x);

!!UN:C(COMBAT_MANAGER)/(UNC_INT)/?(value:y);
!!VR(value2:y):S(position) *112;
!!VR(value3:y):S(value2) +(value) +452; [coordinate structure]
!!VR(xAddress:y):S(value3) +4; 
!!UN:C(xAddress)/(UNC_INT16)/?(x);      [x coordinate]
!!VR(yAddress:y):S(value3) +6; 
!!UN:C(yAddress)/(UNC_INT16)/?(y);      [y coordinate]

// Calculate distance between two hexes
!?FU(ES_CalcDistanceBetweenHexes);      [by wessonsm]
!#VA(hex1:x) (hex2:x) (distance:x);

!!VR(x1:y):S(hex1) %17;
!!VR(y1:y):S(hex1) :17;
!!VR(x2:y):S(hex2) %17;
!!VR(y2:y):S(hex2) :17;
!!VR(distanceY:y):S(y1) -(y2);
!!VR(distanceY)&(distanceY)<0: *-1;
!!VR(x1):*2;
!!VR(y1):&1;
!!VR(x2):*2;
!!VR(y2):&1;
!!VR(distanceX:y):S(x1) -(y1) -(x2) +(y2);
!!VR(distanceX)&(distanceX)<0:*-1;
!!VR(distanceX):-(distanceY);
!!VR(distance):S(distanceX);
!!VR(distance)&(distance)<0:S0;
!!VR(distanceY):*2;
!!VR(distance):+(distanceY) :2;

// Turn a stack around
!?FU(ES_TurnStackAround);              [by Hawaiing]
!#VA(stack:x);

!!UN:C(COMBAT_MANAGER)/(UNC_INT)/?(value:y);
!!VR(value2:y):S(stack) *1352 +21708 +(value);
!!SN:E4482112/2/(value2)/1;

// Initiate a melee attack
!?FU(ES_InitiateMeleeAttack);           [by Hawaiing]
!#VA(atkStack:x) (defStack:x);
!#VA(direction:x);                      [0 for upper, 1 for forward and 2 for lower]

!!UN:C(COMBAT_MANAGER)/(UNC_INT)/?(value:y);
!!VR(value2:x):S(atkStack) *1352 +21708 +(value);
!!VR(value3:x):S(defStack) *1352 +21708 +(value);
!!SN:E4461360/2/(value2)/(value3)/(direction);

// Check if it is allowed to build the building in the town
!?FU(ES_CheckBuildingEligibility);      [by igrik]
!#VA(townId:x);                         [town number on map (0...47)]
!#VA(building:x);                       [building id]
!#VA(result:x);                         [return: bool (0-no, 1-yes)]

!!VR(result):S(FALSE);   
!!FU(ES_GetTownStruct):P(townId)/?(ptr:y);
!!CA0/(townId):R?(isbuilt:y) R(FALSE);
!!SN:E6033696/2/(ptr)/(building);
!!VR(result)&v1<>(FALSE):S(TRUE);
!!CA0/(townId):R(isbuilt);

; Get city structure
!?FU(ES_GetTownStruct);
!#VA(townId:x);                         [Town number on map (0...47)]
!#VA(ptr:x);                            [Return: ptr structure town]
 
!!IF&(townId)<=(NO_TOWN)|(townId)>47:M^Wrong town id.^;
!!UN:C6919480/(UNC_INT)/?(value:y); 
!!VR(value):+136724;
!!UN:C(value)/(UNC_INT)/?(value2:y); 
!!VR(ptr:x):S(townId) *360 +(value2);
!!IF&(ptr)<43200000:M^{Attention!}
Error in getting town structure address. 
The game may fall at any time.^; 

!?FU(ES_UnPackedCoords);
; ?x1, ?x2, ?x3 - return unpacked coords (x/y/z)
; x4 - packed coords
!#VA(x:x) (y:x) (z:x) (coords:x); 
!!SN:E7413577/1/?(x)/?(y)/?(z)/(coords);

!?FU(ES_AdvMgr_GetMapItem);
; x1, x2, x3 - coords (x/y/z)
;?x4 - return MapItem structure
!#VA(x:x) (y:x) (z:x) (mapItem:x); 

!!UN:C(ADV_MANAGER)/(UNC_UINT32)/?(am:y);
!!UN:C(am)/92/(UNC_UINT32)/?(list:y);
!!SN:E4228816/2/(list)/(x)/(y)/(z);
!!VR(mapItem):Sv1;

// Resouces check and reduce for a given player
!?FU(ES_Player_CheckEnoughResources);   [by Archer30]
; Check if a player has enough for all the given amount of resources.

; Supports two call syntaxes:
;   P(result)/(player Id)/(wood)/(mercury)...
;   P(result)/(player Id)/(ID of dynamical array, containing resounce amount)

; Resouces must be provided with this sequence: Wood, Mercury, Ore, Sulfur, Crystal, Gems, Gold and Mithril (optional)
!#VA(result:x) (playerId:x) (thirdArg:x);

!!VR(result):S(FALSE);

!!FU:A?(numArgs:y);
; Exit if invalid amount of parameters
!!FU&(numArgs)<=2:E;

!!UN:P36/?(mithrilEnabled:y);

!!if&(numArgs)>(@thirdArg);
  !!VR(lastResInd:y):S(numArgs) -(@thirdArg);
  !!VR(lastResInd)&(mithrilEnabled)/(numArgs)>=10:S(RES_MITHRIL);

  !!re i/(RES_FIRST)/(lastResInd);
    !!VR(argPtr:y):Si +3;               [The definition of resources amount starts from x3]
    !!OW:R(playerId)/i/?(count:y);
    !!VR(count):-x(argPtr); 
    !!FU&(count)<0:E;
  !!en;
!!el;
  !!SN:M(thirdArg)/?(size:y);

  !!VR(lastResInd):S(size) -1;
  !!VR(lastResInd)&(mithrilEnabled)/(size)>=8:S(RES_MITHRIL);

  !!re i/(RES_FIRST)/(lastResInd);
    !!SN:M(thirdArg)/i/?(cost:y);
    !!OW:R(playerId)/i/?(count);
    !!VR(count):-(cost);
    !!FU&(count)<0:E;
  !!en;
!!en;

!!VR(result):S(TRUE);

; -----------------------------------

!?FU(ES_Player_RemoveResources);        [by Archer30]
; Remove resouces from a given player, prevent any value to be negative.

; Supports two call syntaxes:
;   P(player Id)/(wood)/(mercury)...
;   P((player Id)/ID of dynamical array, containing resounce amount)

; Resouces must be provided with this sequence: Wood, Mercury, Ore, Sulfur, Crystal, Gems, Gold and Mithril (optional)
!#VA(playerId:x) (secondArg:x);

!!FU:A?(numArgs:y);
; Exit if invalid amount of parameters
!!FU&(numArgs)<=1:E;

!!UN:P36/?(mithrilEnabled:y);

!!if&(numArgs)>(@secondArg);
  !!VR(lastResInd:y):S(numArgs) -(@secondArg);
  !!VR(lastResInd)&(mithrilEnabled)/(numArgs)>=9:S(RES_MITHRIL);

  !!re i/(RES_FIRST)/(lastResInd);
    !!VR(argPtr:y):Si +2;               [The definition of resources amount starts from x2]
    !!OW:R(playerId)/i/?(count:y);
    !!VR(count):-x(argPtr) F0/(INT_MAX); 
    !!OW:R(playerId)/i/(count);
  !!en;
!!el;
  !!SN:M(secondArg)/?(size:y);

  !!VR(lastResInd):S(size) -1;
  !!VR(lastResInd)&(mithrilEnabled)/(size)>=8:S(RES_MITHRIL);

  !!re i/(RES_FIRST)/(lastResInd);
    !!SN:M(secondArg)/i/?(cost:y);
    !!OW:R(playerId)/i/?(count);
    !!VR(count):-(cost) F0/(INT_MAX);
    !!OW:R(playerId)/i/(count);
  !!en;
!!en;

// Get the total exp required for reaching a hero level
!?FU(ES_GetExpRequirementOfLevel); [by Archer30]
!#VA(lv:x) (exp:x);

!!VR(exp):S0;

!!if&(lv)=1;
  !!VR(exp):S0;
!!el&(lv)=2;
  !!VR(exp):S1000;
!!el&(lv)=3;
  !!VR(exp):S2000;
!!el&(lv)=4;
  !!VR(exp):S3200;
!!el&(lv)=5;
  !!VR(exp):S4600;
!!el&(lv)=6;
  !!VR(exp):S6200;
!!el&(lv)=7;
  !!VR(exp):S8000;
!!el&(lv)=8;
  !!VR(exp):S10000;
!!el&(lv)=9;
  !!VR(exp):S12200;
!!el&(lv)=10;
  !!VR(exp):S14700;
!!el&(lv)=11;
  !!VR(exp):S17500;
!!el&(lv)=12;
  !!VR(exp):S20600;
!!el&(lv)>=13;
  !!VR(expSecToLast:y):S17500;
  !!VR(expLast:y):S20600;

  !!re i/13/(lv);
    !!VR(exp):S(expLast) -(expSecToLast) *6 :5 +(expLast);

    !!if&i<(lv);
      !!VR(expSecToLast):S(expLast);
      !!VR(expLast):S(exp);
    !!en;
  !!en;
!!en;
