ZVSE2


!?FU(gem_CreateERMHook);
!!SN:Ex1/1/4854758/(Before_CB_MSG_Hook);[0x4A13E6 - for common CB]
!!SN:Ex1/1/4857430/(Before_CB_MSG_Hook);[0x4A1E56 - for Dragon Utopia]
!!SN:Ex1/1/4899257/(Before_CB_MSG_Hook);[0x4AC1B9 - for Crypt/Derelict Ship/Shipwreck]
!!SN:Ex1/1/4899229/(Crypt_SkipMsgIfVisited); [0x4AC19D - for plundered Crypt]


!?FU(Before_CB_MSG_Hook);
!!FU(WOG_AdvMgr_GetMapItem):Pv998/v999/v1000/?(mapItem:y); [mapItem:y - address]
!!OBv998/v999/v1000:T?(objType:y) U?(objSubtype:y);

!!VR(delim:z):S^=^;                     [define separator for parsing a hint string]

; z3 - a string from RMC hint
; Last number:
; 0 - Guarded by (10-19) creatures
; 1 - Guarded by мало (5-9) Зеленые драконы, и мало (5-9) Красные драконы, и пара (1-4) Золотые драконы, и пара (1-4) Черные драконы
!!SN&(objType)=16:E4248400/(CALLCONV_FASTCALL)/?z3/(mapItem)/(objSubtype)/i^timerOwner^/(delim:z)/1; [Common CB: 0-6 - subtype]
*!SN&(objType)=85:E4248400/(CALLCONV_FASTCALL)/?z3/(mapItem)/7/i^timerOwner^/^^/1;  [Shipwreck: 7 - subtype (16/7 from WOG table in memory)]
*!SN&(objType)=24:E4248400/(CALLCONV_FASTCALL)/?z3/(mapItem)/8/i^timerOwner^/^^/1;  [Derelict Ship: 8 - subtype (16/8 from WOG table in memory)]
!!SN&(objType)=84:E4248400/(CALLCONV_FASTCALL)/?z3/(mapItem)/9/i^timerOwner^/(delim:z)/1; [Crypt: 9 - subtype (16/9 from WOG table in memory)]
!!SN&(objType)=25:E4248400/(CALLCONV_FASTCALL)/?z3/(mapItem)/10/i^timerOwner^/(delim:z)/1; [Dragon Utopia: 10 - subtype (16/10 from WOG table in memory)]

;!IF:M^z3 = %z3^; // debug

; Get a string with CB name (objName) from z3
!!SN:Kz3/?(lenz3:y);
!!VR(objName:z):S^^;

!!re i/0/(lenz3)/1;
  !!SN:Kz3/i/?(char:z);
  !!if&(char)<>(delim:z);
    !!VR(objName):+(char);
  !!el;
    !!VRi:+1;
    !!br;
  !!en;
!!en;

; Get a string with guard description (guardDesc) from z3
!!SN:K(objName)/?(lenName:y);
!!VR(guardDesc:z):S^^;
!!VR(lenName):+1;

!!re j/(lenName)/(lenz3)/1;
  !!SN:Kz3/j/?(char:z);
  !!if&(char)<>(delim:z);
    !!VR(guardDesc):+(char);
  !!el;
    !!VRj:+1;
    !!br;
  !!en;
!!en;

; Get crypt status. If plundered - skip the dialog with choice and jump to the "minus morale" dialog
!!CBv998/v999/v1000:T?(isVisited:y);
!!if&(isVisited);
  !!SN:X?y99/0;                         [it is: return NO_EXEC_DEFAULT]
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/4899301; [0x4AC1E5; x1 - HookContext* c]
!!en;

; Calculate a string with guard description
!!FU(Crypt_Calc_Guards_and_Set_Text)&(objType)=84:Pv998/v999/v1000/?(guardDesc:z);
;!IF:M^guardDesc = %(guardDesc:z)^; // debug

; Add to the final message a string with guard description
!!VR(youHaveFoundMsgPtr:z)&(objType)=16:S^%T(extra_hints.creature_banks.visiting1)^ +(objName) +^%T(extra_hints.creature_banks.visiting2)%T(wog.endl)%T(wog.endl)^ +(guardDesc); [Common CB]
!!VR(youHaveFoundMsgPtr:z)&(objType)=25:S^%T(extra_hints.dragon_utopia.visiting)%T(wog.endl)%T(wog.endl)^ +(guardDesc); [Dragon Utopia]
!!VR(youHaveFoundMsgPtr:z)&(objType)=84:S^%T(extra_hints.crypt.visiting)%T(wog.endl)%T(wog.endl)^ +(guardDesc); [Crypt]

;!IF:M^%(youHaveFoundMsgPtr:z)^; // debug

; Put the final message into text buffer
!!SN:E6388190/(CALLCONV_CDECL)/6911016/(youHaveFoundMsgPtr:z);

; Make a hook
!!UN&(objType)=16:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/6911016; [Common CB]
!!UN&(objType)=25:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/6911016; [Dragon Utopia]
!!UN&(objType)=84:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/6911016; [Crypt]


!?OB84;
!!VR(playerBit:y):S1 Sd<<i^timerOwner^; // 1 + offset for each next player
!!CB998:Vd|(playerBit);                 // Add object to player as revealed


!?FU(OnAdventureMapRightMouseClick);
!#VA(usedY[22]:y);     
!!VRy10:S84;                            [Crypt]
!!VRy11:S0;                             [Subtype]
!!CM:P?y1/?y2/?y3;                      [Get courser position]
!!SN:O?y1/?y2/?y3;                      [Find building entrance in the clicking area]
!!OBy1/y2/y3:T?y4 U?y5;                 [Get type and subtype]
!!FU|y4<>y10/y5<>y11:E;                 [Get Type of Object and Exit if its not the Crypt]
!!CBy1/y2/y3:V?y12;                     [Get bit mask of object visiting by all players]

!!VR(playerBit:y):S1 Sd<<i^timerOwner^; // 1 + смещение на игрока
!!VRy12:&(playerBit);                   
!!if&y12;                               [If Cb has already been visited once but not plundered]
  !!FU(Crypt_Calc_Guards_and_Set_Text):Py1/y2/y3; [(Set correct right click Information)]
!!en;


!?FU(Crypt_Calc_Guards_and_Set_Text);
!#VA(coordX:x) (coordY:x) (coordL:x) (guardDesc:x);

; Clear all global counters
!!re (guardType:y)/56/69/1;  // For each Necropolis creature
  !!VRi^totalGuardCounter_%(guardType)^:S0;
!!en;
!!VRi^totalGuardCounter_187^:S0;  // For Soul Eater Defender

; Clear global strings for guard description
!!VRs^fullGuardDescription^:S^%T(extra_hints.guard_desc.guarded_by)^;
!!VRs^fullGuardDesc^:S^^; // for a string without last comma

; Loop for each stack in CB
!!re i/0/6/1;
  !!CB(coordX)/(coordY)/(coordL):Gi/?(guardType:y)/?(guardCount:y);
  !!VRi^totalGuardCounter_%(guardType)^&(guardCount)>0: +(guardCount);
!!en;

; Get the string for each slot in CB
!!re (guardType:y)/56/69/1;  // For each Necropolis creature
  !!if&i^totalGuardCounter_%(guardType)^>0;
    !!FU(WOG_GetCreatureAmountString):Pi^totalGuardCounter_%(guardType)^/?(guardCountDesc:z);
    !!SN:H^monname^/(guardType)/1/?(guardName:z); // Plural name
    !!VRs^fullGuardDescription^: +(guardCountDesc) +^ ^ +(guardName) +^%T(extra_hints.guard_desc.and)^;
  !!en;
!!en;
; Code for Soul Eater
!!if&i^totalGuardCounter_187^>0;
  !!FU(WOG_GetCreatureAmountString):Pi^totalGuardCounter_187^/?(guardCountDesc:z);
  !!SN:H^monname^/187/0/?(guardName:z); // Singular name
  !!VRs^fullGuardDescription^: +(guardCountDesc) +^ ^ +(guardName) +^%T(extra_hints.guard_desc.and)^;
!!en;

; Delete the last comma
!!SN:Ks^fullGuardDescription^/?(lenStr:y);
!!VR(lenStr):-2;
; Copy string without last symbol
!!re j/0/(lenStr)/1;
  !!SN:Ks^fullGuardDescription^/j/?(char:z);
  !!VRs^fullGuardDesc^:+(char);
!!en;

;!IF:L^%s(fullGuardDesc)^; // Debug

; return the full string into main function
!!VR(guardDesc):Zs^fullGuardDesc^;


!?FU(WOG_GetCreatureAmountString);
!#VA(totalGuardCnt:x) (returnedStr:x);

!!FU(WOG_GetStringByFilename):P^arraytxt^/176/?(strFew:z);  // 1-4
!!FU(WOG_GetStringByFilename):P^arraytxt^/179/?(strSeveral:z);  // 5-9
!!FU(WOG_GetStringByFilename):P^arraytxt^/182/?(strPack:z);  // 10-19
!!FU(WOG_GetStringByFilename):P^arraytxt^/185/?(strLots:z);  // 20-49
!!FU(WOG_GetStringByFilename):P^arraytxt^/188/?(strHorde:z);  // 50-99
!!FU(WOG_GetStringByFilename):P^arraytxt^/191/?(strThrong:z);  // 100-249
!!FU(WOG_GetStringByFilename):P^arraytxt^/194/?(strSwarm:z);  // 250-499
!!FU(WOG_GetStringByFilename):P^arraytxt^/197/?(strZounds:z);  // 500-999
!!FU(WOG_GetStringByFilename):P^arraytxt^/200/?(strLegion:z);  // 1000+

!!VR(returnedStr)&(totalGuardCnt)=0:Z^^; // Not nessesary
!!VR(returnedStr)&(totalGuardCnt)>=1/(totalGuardCnt)<=4:Z^%(strFew)^;
!!VR(returnedStr)&(totalGuardCnt)>=5/(totalGuardCnt)<=9:Z^%(strSeveral)^;
!!VR(returnedStr)&(totalGuardCnt)>=10/(totalGuardCnt)<=19:Z^%(strPack)^;
!!VR(returnedStr)&(totalGuardCnt)>=20/(totalGuardCnt)<=49:Z^%(strLots)^;
!!VR(returnedStr)&(totalGuardCnt)>=50/(totalGuardCnt)<=99:Z^%(strHorde)^;
!!VR(returnedStr)&(totalGuardCnt)>=100/(totalGuardCnt)<=249:Z^%(strThrong)^;
!!VR(returnedStr)&(totalGuardCnt)>=250/(totalGuardCnt)<=499:Z^%(strSwarm)^;
!!VR(returnedStr)&(totalGuardCnt)>=500/(totalGuardCnt)<=999:Z^%(strZounds)^;
!!VR(returnedStr)&(totalGuardCnt)>=1000:Z^%(strLegion)^;

**end
